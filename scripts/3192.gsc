// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_FE6A( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    _id_0F3E::_id_FE89();
    var_4 = _id_0F3E::_id_FE64();
    self _meth_83CE();
    var_5 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    self._id_9CBD = 1;
    _id_0F3E::_id_FE97( var_1, 0.7, 2 );
    self._id_2303._id_FECD._id_C21C--;
    self._id_9CBD = 0;
    _id_85F5();
    scripts\asm\asm::_id_2330( var_1, "shoot_finished" );
}

_id_8602()
{
    if ( scripts\asm\asm_bb::_id_2955() )
        return 0;

    if ( !scripts\asm\asm_bb::_id_291C() )
        return 0;

    return 1;
}

_id_85F5()
{
    var_0 = randomfloatrange( 0.2, 0.5 );
    wait( var_0 );
}

_id_13F91( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_9C9D );
}

_id_13F93( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_FF88 );
}

_id_13F92( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_FF83 );
}

_id_13F98( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_11630 );
}

_id_13F95( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_58D3 );
}

_id_13F97( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_58D5 );
}

_id_13F96( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_58D4 );
}

_id_13F8C( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_9B78 );
}

_id_13F8E( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_58CD );
}

_id_13F6F( var_0, var_1, var_2 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_927D ) )
        return scripts\asm\asm::_id_2358( var_1, "cloneGreyIdle" );
    else
        return scripts\asm\asm::_id_2358( var_1, "masterGreyIdle" );
}

_id_13F71( var_0, var_1, var_2, var_3 )
{
    self _meth_83B8( "iw7_zapper_grey" );
    _id_15A8( self, undefined, "prop_mp_dome_shield_scr" );
    _id_CD46();
    level thread _id_10BF0( self );
    _id_0A6A::_id_12886( "quest_ufo_spawn_minialiens" );

    if ( !scripts\engine\utility::_id_6E25( "clone_complete" ) )
        scripts\engine\utility::_id_6E4C( "clone_complete" );

    self._id_58CD = 0;
    _id_4131();
    _id_4DB1( self );
}

_id_CD46()
{
    var_0 = scripts\asm\asm::_id_2358( "duplicating_attack", "idle" );
    self setanimstate( "duplicating_attack", var_0, 1 );
}

_id_10BF0( var_0 )
{
    level endon( "game_ended" );
    scripts\engine\utility::_id_6E2A( "clone_complete" );
    _id_5CF8();
    _id_F5F3( var_0 );
    wait 1;
    _id_10721( var_0 );
    _id_8E85();
    _id_1870();
    _id_1872();
    _id_1871();
    _id_23D7( var_0 );
    level thread _id_424F();
    wait 2.0;
    _id_516E();
    scripts\engine\utility::_id_6E3E( "clone_complete" );
}

_id_23D7( var_0 )
{
    var_1 = _id_7CDC();
    var_2 = var_1.size;

    foreach ( var_8, var_4 in level._id_10850 )
    {
        var_4 setthreatbiasgroup( "grey" + ( var_8 % var_2 + 1 ) );

        foreach ( var_6 in level.players )
            var_4 getenemyinfo( var_6 );
    }

    foreach ( var_10, var_6 in var_1 )
        var_6 setthreatbiasgroup( "player" + ( var_10 + 1 ) );
}

_id_8E85()
{
    foreach ( var_1 in level._id_10850 )
        var_1 notify( "update_mobile_shield_visibility", 0 );
}

_id_7CDC()
{
    var_0 = [];

    foreach ( var_2 in level.players )
    {
        if ( _id_0A5B::_id_D0EF( var_2 ) )
            continue;

        var_0[var_0.size] = var_2;
    }

    return var_0;
}

_id_818D( var_0, var_1, var_2 )
{
    var_3 = _id_7B0B( var_0.origin );
    var_4 = _id_7B0A( var_0 getplayerangles(), var_0.origin, _id_7813( var_0, var_1 ), var_2 );
    return _id_7B09( var_0, var_3, var_4 );
}

_id_7813( var_0, var_1 )
{
    var_2 = 360 / var_1;
    var_3 = var_0.angles;
    var_4 = [];

    for ( var_5 = 0; var_5 < var_1; var_5++ )
        var_4[var_4.size] = var_2 / 2 + var_5 * var_2;

    return var_4;
}

_id_7B36( var_0 )
{
    return var_0._id_C1F4;
}

_id_10721( var_0 )
{
    level endon( "game_ended" );
    var_1 = _id_7B36( var_0 );
    _id_F426( var_0, 1 );

    for ( var_2 = 0; var_2 < var_1 - 1; var_2++ )
    {
        var_3 = scripts\mp\mp_agent::_id_108E8( "zombie_grey", "axis", var_0.origin, var_0.angles );

        if ( isdefined( var_3 ) )
        {
            _id_F426( var_3, 1 );
            _id_F3E7( var_3 );
            _id_F5E8( var_3 );
            _id_F5F3( var_3 );
            _id_4644( var_3, var_0 );
            _id_463D( var_3, var_0 );
        }
    }
}

_id_F426( var_0, var_1 )
{
    var_0._id_9B78 = var_1;
}

_id_F5F3( var_0 )
{
    var_1 = spawn( "script_model", var_0.origin );
    var_1 setmodel( "tag_origin" );
    var_1.angles = vectortoangles( ( 0, 0, 1 ) );
    var_1 linkto( var_0, "tag_origin" );
    var_1 thread _id_CD2C( var_1, var_0 );
    var_1 thread _id_13340( var_1, var_0 );

    if ( !isdefined( level._id_85EB ) )
        level._id_85EB = [];

    level._id_85EB[level._id_85EB.size] = var_1;
}

_id_516E()
{
    foreach ( var_1 in level._id_85EB )
    {
        _func_121( level._effect["zombie_grey_start_duplicate"], var_1, "tag_origin" );
        var_1 delete();
    }

    level._id_85EB = [];
}

_id_CD2C( var_0, var_1 )
{
    var_0 endon( "death" );
    var_1 endon( "death" );
    wait 0.2;
    playfxontag( level._effect["zombie_grey_start_duplicate"], var_0, "tag_origin" );
}

_id_13340( var_0, var_1 )
{
    var_0 endon( "death" );
    var_1 waittill( "death" );
    _func_121( level._effect["zombie_grey_start_duplicate"], var_0, "tag_origin" );
    var_0 delete();
}

_id_F3E7( var_0 )
{
    foreach ( var_2 in var_0._id_269C )
        var_2 hide();

    var_0 notify( "stop_health_light_monitor" );
    var_0._id_927D = 1;
    var_0._id_10AB7 = 1;
    var_0._id_5277 = 60;
    var_0._id_B632 = 90000;
    var_0._id_110D7 = var_0._id_5277 + 100;
    var_0 setmodel( "park_alien_gray_small" );
}

_id_4131()
{
    foreach ( var_1 in level._id_10850 )
    {
        _id_F426( var_1, 0 );
        wait 1;
    }
}

_id_1870()
{
    foreach ( var_1 in level._id_10850 )
        var_1.health = level._id_424E;
}

_id_1872()
{
    foreach ( var_1 in level._id_10850 )
        _id_F3E9( var_1, 1.0 );
}

_id_F3E9( var_0, var_1 )
{
    if ( isdefined( var_0._id_BCD6 ) )
        var_0._id_D8A4 = var_0._id_BCD6;

    var_0._id_BCD6 = var_1;
}

_id_E2FB( var_0 )
{
    if ( isdefined( var_0._id_D8A4 ) )
        var_0._id_BCD6 = var_0._id_D8A4;
    else
        var_0._id_BCD6 = undefined;
}

_id_1871()
{
    foreach ( var_1 in level._id_10850 )
        _id_F3E8( var_1, 90000 );
}

_id_F3E8( var_0, var_1 )
{
    var_0._id_D8A3 = var_0._id_B632;
    var_0._id_B632 = var_1;
}

_id_E2FA( var_0 )
{
    var_0._id_B632 = var_0._id_D8A3;
}

_id_424F()
{
    wait 0.1;
    var_0 = [ "jump_left", "jump_right", "jump_back", "jump_left" ];

    foreach ( var_3, var_2 in level._id_10850 )
        var_2 thread _id_CE3B( var_2, var_0[var_3] );
}

_id_CE3B( var_0, var_1 )
{
    var_0 endon( "death" );
    var_2 = "duplicating_attack";
    var_3 = scripts\asm\asm::_id_2358( var_2, var_1 );
    var_0 scripts\anim\notetracks_mp::_id_CED5( var_2, var_3, var_2, "end" );
    var_0 _id_CD46();
}

_id_13F72( var_0, var_1, var_2, var_3 )
{
    self notify( "grey play regen" );
    self setscriptablepartstate( "backpack_dome_shield", "off" );
    self setscriptablepartstate( "regen_beam", "on" );
    self.actually_doing_regen = 1;
    scripts\asm\asm_mp::_id_235F( var_0, var_1, var_2, 1.0, 0 );
}

_id_13F70( var_0, var_1, var_2, var_3 )
{
    self setscriptablepartstate( "backpack_dome_shield", "on" );
    self setscriptablepartstate( "regen_beam", "off" );
}

_id_13F73( var_0, var_1, var_2, var_3 )
{
    thread _id_CE0A( self );
    scripts\asm\asm_mp::_id_2367( var_0, var_1, var_2, "end" );
}

_id_13F74( var_0, var_1, var_2, var_3 )
{
    scripts\asm\asm_mp::_id_2367( var_0, var_1, var_2, "early_end" );
    scripts\asm\asm::_id_2330( var_1, "early_end" );
}

_id_13F76( var_0, var_1, var_2, var_3 )
{
    self playsound( "grey_shockwave_build" );
    scripts\asm\asm_mp::_id_2367( var_0, var_1, var_2, "shock_wave_damage" );
    self notify( "shockwave_deploy" );
    self notify( "update_mobile_shield_visibility", 1 );
    self playsound( "grey_shockwave" );
    _id_FE53( self );
}

_id_3EDC( var_0, var_1, var_2 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_927D ) )
        return scripts\asm\asm::_id_2358( var_1, "mini_grey_melee" );
    else
        return scripts\asm\asm::_id_2358( var_1, "master_grey_melee" );
}

_id_13F75( var_0, var_1, var_2, var_3 )
{
    _id_15A8( self, undefined, "prop_mp_dome_shield_scr" );
    scripts\asm\asm_mp::_id_2367( var_0, var_1, var_2, "start_summon_zombies" );
    thread _id_111C2( self );
    scripts\asm\asm_mp::_id_2367( var_0, var_1, var_2, "early_end" );
    _id_4DB1( self );
}

_id_111C2( var_0 )
{
    _id_12865( 6 );
    var_1 = _id_818D( var_0, 6, 128 );

    foreach ( var_3 in var_1 )
        level thread _id_111C0( var_3, 0 );
}

_id_111C0( var_0, var_1 )
{
    var_2 = spawnstruct();
    var_2.origin = var_0;
    var_2._id_EE79 = "ground_spawn_no_boards";
    var_2._id_ECF5 = "spawn_ground";
    var_3 = var_2 _id_0D61::_id_1081B( "generic_zombie", 1 );

    if ( isdefined( var_3 ) )
    {
        if ( scripts\engine\utility::_id_9CEE( var_1 ) )
            var_3 scragentsetanimscale( 0.0, 1.0 );

        var_4 = spawnfx( level._effect["summon_zombie_energy_ring"], var_0 + ( 0, 0, -11 ), ( 0, 0, 1 ), ( 1, 0, 0 ) );
        playloopsound( var_0 + ( 0, 0, -11 ), "zmb_grey_energy_ring_activate" );
        var_5 = thread scripts\engine\utility::_id_CD86( "zmb_grey_energy_ring_activate_lp", var_0 + ( 0, 0, -11 ) );
        triggerfx( var_4 );
        var_3 scripts\engine\utility::waittill_any( "death", "intro_vignette_done" );

        if ( scripts\engine\utility::_id_9CEE( var_1 ) && isdefined( var_3 ) )
            var_3 scragentsetanimscale( 1.0, 1.0 );

        playloopsound( var_0 + ( 0, 0, -11 ), "zmb_grey_energy_ring_deactivate" );
        var_5 stoploopsound();
        var_4 delete();
        wait 0.05;
        var_5 delete();
    }
}

_id_12865( var_0 )
{
    var_1 = scripts\engine\utility::ter_op( isdefined( level._id_1084F ), level._id_1084F.size, 0 );
    var_2 = 24 - var_1;

    if ( var_2 < var_0 )
    {
        var_3 = var_0 - var_2;
        _id_0D61::_id_A5FA( var_3 );
    }
}

_id_CE0A( var_0 )
{
    var_1 = ( 0, 0, 150 );
    var_2 = ( 0, 0, 15 );
    var_3 = var_0.origin + var_2;
    var_4 = spawnfx( level._effect["zombie_grey_shockwave_begin"], var_3 );
    triggerfx( var_4 );
    var_0 thread _id_5D40( var_0, var_0.origin + var_1, var_3 );
    var_5 = var_0 scripts\engine\utility::_id_13734( "shockwave_deploy" );
    var_4 delete();

    if ( isdefined( var_5 ) && var_5 == "shockwave_deploy" )
        playfx( level._effect["zombie_grey_shockwave_deploy"], var_3 );
}

_id_5D40( var_0, var_1, var_2 )
{
    var_3 = 0.2;
    var_4 = _id_7D01( var_0, "regen_pain_in", "end" );
    var_5 = _id_7D01( var_0, "regen_pain_loop", "early_end" );
    var_6 = _id_7D01( var_0, "shockwave", "shock_wave_damage" );
    var_7 = var_4 + var_5 + var_6;
    var_8 = spawn( "script_model", var_1 );
    var_8 setmodel( "tag_origin" );
    wait( var_3 );
    playfxontag( level._effect["zombie_grey_teleport_trail"], var_8, "tag_origin" );
    var_8 moveto( var_2, var_7 - var_3 );
    scripts\engine\utility::_id_1372B( var_8, "movedone", var_0, "death" );
    var_8 delete();
}

_id_7D01( var_0, var_1, var_2 )
{
    var_3 = var_0 getanimentry( var_1, 0 );
    var_4 = getnotetracktimes( var_3, var_2 );
    var_5 = getanimlength( var_3 );
    var_6 = var_4[0] * var_5;
    return var_6;
}

_id_FE53( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( distancesquared( var_0.origin, var_2.origin ) > 22500 )
            continue;

        if ( _id_0A5B::_id_D0EF( var_2 ) )
            continue;

        var_3 = var_2.health;
        var_4 = int( var_3 * 0.9 );
        var_2 _meth_80B0( var_4, var_0.origin );
        _id_0F7A::_id_85F8( var_0, var_2 );
    }
}

_id_13F79( var_0, var_1, var_2, var_3 )
{
    self._id_DDC6 = [];
    var_4 = self.origin;
    var_5 = _id_7CED( self );

    if ( isdefined( var_5 ) )
    {
        var_6 = _id_7CEF( self, var_5 );

        if ( isdefined( var_6 ) )
        {
            _id_57CD( self, var_6, var_5 );
            _id_1164C( self, get_teleport_end_pos( var_4 ), "teleport_summon" );
            _id_0C2E::_id_F49B( self );
            _id_0C2E::set_next_melee_time( self );
            scripts\asm\asm_bb::_id_2914();
        }
    }

    self._id_58D5 = 0;
}

_id_13F78( var_0, var_1, var_2, var_3 )
{
    var_4 = _id_7CEC( self );

    if ( isdefined( var_4 ) )
    {
        var_5 = _id_7CEB( var_4 );

        if ( isdefined( var_5 ) )
        {
            _id_1164C( self, var_5, "teleport_dash" );
            _id_0C2E::_id_F49A( self );
            _id_0C2E::set_next_melee_time( self );
            scripts\asm\asm_bb::_id_2914();
        }
    }

    self._id_58D4 = 0;
}

_id_13F77( var_0, var_1, var_2, var_3 )
{
    self notify( "update_mobile_shield_visibility", 0 );
    self._id_DDC6 = [];
    self._id_8B73 = 0;
    var_4 = self.origin;
    var_5 = randomintrange( 2, 5 );

    for ( var_6 = 0; var_6 < var_5; var_6++ )
    {
        var_7 = _id_7CEA( self );

        if ( isdefined( var_7 ) )
        {
            var_8 = _id_7CEF( self, var_7 );

            if ( isdefined( var_8 ) )
                _id_57CC( self, var_8, var_7 );
        }
    }

    if ( self._id_8B73 )
    {
        _id_1164C( self, get_teleport_end_pos( var_4 ), "teleport_attack" );
        _id_0C2E::_id_F499( self );
        _id_0C2E::set_next_melee_time( self );
        scripts\asm\asm_bb::_id_2914();
    }

    self notify( "update_mobile_shield_visibility", 1 );
    self._id_58D3 = 0;
}

get_teleport_end_pos( var_0 )
{
    if ( clear_from_players( var_0 ) )
        return var_0;

    var_1 = "ufo_zombie_spawn_loc";
    var_2 = 300;
    var_3 = scripts\engine\utility::_id_8180( var_1, "targetname" );
    var_3 = scripts\engine\utility::_id_782F( var_0, var_3, undefined, undefined, undefined, var_2 );

    foreach ( var_5 in var_3 )
    {
        var_6 = scripts\engine\utility::_id_5D14( var_5.origin, 5, -50 );

        if ( clear_from_players( var_6 ) )
            return var_6;
    }

    return var_0;
}

clear_from_players( var_0 )
{
    var_1 = 10000;

    foreach ( var_3 in level.players )
    {
        if ( distancesquared( var_3.origin, var_0 ) < var_1 )
            return 0;
    }

    return 1;
}

_id_57CD( var_0, var_1, var_2 )
{
    var_1._id_9B8C = 1;
    var_0._id_11643 = var_2;
    var_0 _id_1164C( var_0, var_1.origin, "teleport_summon", var_0._id_11643 );
    var_0 _id_CECC( "teleport_summon", "summon", ::_id_11642 );
    var_1._id_9B8C = 0;
}

_id_57CC( var_0, var_1, var_2 )
{
    var_1._id_9B8C = 1;
    var_0._id_8B73 = 1;
    var_0._id_11618 = var_2;
    var_0 _id_1164C( var_0, var_1.origin, "teleport_attack", var_0._id_11618 );
    var_0 _id_CECC( "teleport_attack", "attack", ::_id_11617 );
    var_1._id_9B8C = 0;
}

_id_1164C( var_0, var_1, var_2, var_3 )
{
    var_4 = distance( var_0.origin, var_1 );
    var_5 = var_4 / 4000;
    var_6 = spawn( "script_model", var_0.origin );
    var_6 setmodel( "tag_origin" );
    var_0 playsoundonmovingent( "grey_teleport_start" );
    var_6 thread _id_4104( var_0, var_6 );
    var_0 setscriptablepartstate( "teleport_attack_trail", "on" );
    var_0 _id_CECC( var_2, "start" );
    var_0 linkto( var_6 );
    var_6 moveto( var_1, var_5 );
    var_6 waittill( "movedone" );
    var_0 playsound( "grey_teleport_end" );

    if ( isdefined( var_3 ) )
        var_3 thread _id_0A6A::_id_12885( "quest_ufo_alien_teleport", "zmb_comment_vo", "low", 3, 0, 0, 1, 5 );

    var_0 unlink();
    var_6 delete();
    var_0 setscriptablepartstate( "teleport_attack_trail", "off" );
    var_0 _id_CECC( var_2, "end" );
}

_id_4104( var_0, var_1 )
{
    var_1 endon( "death" );
    var_0 waittill( "death" );
    var_1 delete();
}

_id_CECC( var_0, var_1, var_2 )
{
    var_3 = scripts\asm\asm::_id_2358( var_0, var_1 );
    scripts\anim\notetracks_mp::_id_CED5( var_0, var_3, var_0, "end", var_2 );
}

_id_11617( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "fire" )
    {
        var_4 = self getplayerangles();
        var_5 = anglestoforward( var_4 );
        var_6 = self.origin + ( 0, 0, 60 ) + var_5 * 20;
        magicbullet( "zmb_grey_teleport_attack", var_6, self._id_11618.origin );
    }
}

_id_11642( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "start_summon_zombies" )
    {
        if ( isdefined( self._id_11643 ) && !scripts\engine\utility::_id_9CEE( self._id_11643._id_9387 ) )
        {
            _id_12865( 6 );
            var_4 = _id_818D( self._id_11643, 6, 128 );

            foreach ( var_6 in var_4 )
            {
                level thread _id_111C0( var_6, 1 );
                wait( randomfloatrange( 0.1, 0.9 ) );
            }
        }
    }
}

_id_7CED( var_0 )
{
    if ( isdefined( var_0._id_11539 ) && !scripts\engine\utility::_id_9CEE( var_0._id_11539._id_9387 ) )
        return var_0._id_11539;

    return undefined;
}

_id_7CEC( var_0 )
{
    if ( isdefined( var_0._id_11539 ) && !_id_0A5B::_id_D0EF( var_0._id_11539 ) )
        return var_0._id_11539;

    return undefined;
}

_id_7CEA( var_0 )
{
    return var_0._id_11539;
}

_id_7CEB( var_0 )
{
    var_1 = 8;
    var_2 = _id_818D( var_0, var_1, 256 );
    var_2 = [ var_2[0], var_2[var_2.size - 1] ];
    var_2 = scripts\engine\utility::_id_22A7( var_2 );
    var_2 = _id_12637( var_2 );
    var_2 = scripts\engine\utility::_id_782F( var_0.origin, var_2 );
    return var_2[var_2.size - 1].origin;
}

_id_12637( var_0 )
{
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = spawnstruct();
        var_4.origin = var_3;
        var_1[var_1.size] = var_4;
    }

    return var_1;
}

_id_7CEF( var_0, var_1 )
{
    var_2 = scripts\engine\utility::_id_782F( var_1.origin, level._id_85F2, undefined, level._id_85F2.size, 1400, 200 );
    var_3 = undefined;

    for ( var_4 = 0; var_4 < var_2.size; var_4++ )
    {
        var_5 = var_2[var_4];

        if ( scripts\engine\utility::_id_9CEE( var_5._id_9B8C ) )
            continue;

        if ( distancesquared( var_0.origin, var_5.origin ) < 250000 )
            continue;

        if ( scripts\engine\utility::array_contains( var_0._id_DDC6, var_5 ) )
            continue;

        if ( !sighttracepassed( var_5.origin + ( 0, 0, 60 ), var_1 geteye(), 0, var_0 ) && !sighttracepassed( var_5.origin + ( 0, 0, 60 ), var_1.origin, 0, var_0 ) )
            continue;

        var_3 = var_5;
        var_0._id_DDC6 = scripts\engine\utility::_id_2279( var_0._id_DDC6, var_3 );
        break;
    }

    return var_3;
}

_id_13F7A( var_0, var_1, var_2, var_3 )
{
    self notify( "update_mobile_shield_visibility", 0 );
    var_4 = self.origin;
    var_5 = ( 650, 625, 100 );
    self setorigin( var_5 );
    var_6 = _id_85F4( var_4 );
    var_7 = self._id_11630;
    var_8 = _id_7B0B( var_7.origin );
    var_9 = _id_7B0A( var_7 getplayerangles(), var_7.origin, _id_7CE9(), 350 );
    var_10 = _id_7CEE( self, var_8, var_9 );
    _id_85F3( var_6, var_10 );
    self setorigin( var_10 );
    self.angles = vectortoangles( var_7.origin - self.origin );
    self show();
    self notify( "update_mobile_shield_visibility", 1 );
    self._id_11630 = undefined;
}

_id_7CE9()
{
    var_0 = scripts\engine\utility::_id_22A7( [ 10, 350 ] );
    var_1 = scripts\engine\utility::_id_22A7( [ 20, 340 ] );
    var_2 = scripts\engine\utility::_id_22A7( [ 30, 330 ] );
    var_3 = [];
    var_3 = scripts\engine\utility::_id_227F( var_3, var_0 );
    var_3 = scripts\engine\utility::_id_227F( var_3, var_1 );
    var_3 = scripts\engine\utility::_id_227F( var_3, var_2 );
    return var_3;
}

_id_7B0A( var_0, var_1, var_2, var_3 )
{
    var_4 = [];

    foreach ( var_6 in var_2 )
    {
        var_7 = ( var_0[0], var_0[1] + var_6, var_0[2] );
        var_8 = anglestoforward( var_7 );
        var_9 = var_1 + var_8 * var_3;
        var_9 = scripts\engine\utility::_id_5D14( var_9, 200, -200 );
        var_4[var_4.size] = var_9;
    }

    return var_4;
}

_id_7B0B( var_0 )
{
    var_1 = scripts\engine\utility::_id_5D14( var_0, 0, -200 );
    var_2 = getclosestpointonnavmesh( var_1 );

    if ( var_1 == var_2 )
        return var_2;
    else
    {
        var_3 = vectornormalize( var_2 - var_1 );
        var_4 = var_2 + var_3;
        return getclosestpointonnavmesh( var_4 );
    }
}

_id_7B09( var_0, var_1, var_2 )
{
    var_3 = [];

    foreach ( var_5 in var_2 )
    {
        var_6 = _func_272( var_1, var_5, var_0, 1 );
        var_3[var_3.size] = var_6["position"];
    }

    return var_3;
}

_id_7CEE( var_0, var_1, var_2 )
{
    var_3 = undefined;
    var_4 = -1;

    foreach ( var_6 in var_2 )
    {
        var_7 = _func_272( var_1, var_6, var_0, 1 );
        var_8 = var_7["fraction"];

        if ( var_8 > var_4 )
        {
            var_3 = var_7["position"];
            var_4 = var_8;
        }
    }

    return var_3;
}

_id_85F4( var_0 )
{
    playfx( level._effect["zombie_grey_teleport"], var_0 );
    var_1 = spawn( "script_model", var_0 );
    var_1 setmodel( "tag_origin" );
    wait 0.2;
    playfxontag( level._effect["zombie_grey_teleport_trail"], var_1, "tag_origin" );
    var_1 moveto( ( 648, 654, 326 ), 2.0, 2.0 );
    var_1 waittill( "movedone" );
    wait 1;
    return var_1;
}

_id_85F3( var_0, var_1 )
{
    var_2 = spawnfx( level._effect["zombie_grey_teleport_trail"], var_1 );
    triggerfx( var_2 );
    var_0 moveto( var_1, 1.0, 1.0 );
    var_0 waittill( "movedone" );
    var_0 delete();
    var_2 delete();
    playfx( level._effect["zombie_grey_teleport"], var_1 );
}

_id_15A8( var_0, var_1, var_2 )
{
    var_1 = scripts\engine\utility::ter_op( isdefined( var_1 ), var_1, ( 0, 0, 0 ) );
    var_3 = spawn( "script_model", var_0.origin + var_1 );
    var_3 setmodel( var_2 );
    playloopsound( var_0.origin + var_1, "grey_bubbleshield_start" );
    var_3 thread setpartstates( var_0, var_3 );
    var_3 thread _id_58F8( var_3, var_0 );
    var_4 = spawn( "script_model", var_0.origin + var_1 );
    var_4 setmodel( "prop_mp_domeshield_col" );
    var_4 thread _id_58F8( var_4, var_0 );
    var_0._id_58F7 = var_3;
    var_0._id_58F9 = var_4;
}

setpartstates( var_0, var_1 )
{
    var_0 endon( "death" );
    var_1 endon( "death" );
    var_1 setscriptablepartstate( "plant", "active", 0 );
    wait 0.5;
    var_1 setscriptablepartstate( "plant", "neutral", 0 );
    var_1 setscriptablepartstate( "armed", "active", 0 );
}

_id_4DB1( var_0 )
{
    playloopsound( var_0.origin, "grey_bubbleshield_end" );
    var_0._id_58F7 delete();
    var_0._id_58F9 delete();
}

_id_58F8( var_0, var_1 )
{
    playloopsound( var_1.origin, "grey_bubbleshield_end" );
    var_0 endon( "death" );
    var_1 waittill( "death" );
    var_0 delete();
}

_id_F5E8( var_0 )
{
    if ( !isdefined( level._id_10850 ) )
        level._id_10850 = [];

    var_0._id_1491._id_E5DE = 3;
    var_0._id_6622 = 1;
    var_0._id_9CA2 = 1;
    level._id_1084F[level._id_1084F.size] = var_0;
    level._id_10850[level._id_10850.size] = var_0;
}

_id_85FE( var_0, var_1, var_2, var_3 )
{
    level._id_85EE = 1;
    self setscriptablepartstate( "spawn_beam", "on" );
    _id_0F3C::_id_CEA8( var_0, var_1, var_2, var_3 );
}

_id_85FD( var_0, var_1, var_2, var_3 )
{
    self setscriptablepartstate( "spawn_beam", "on" );
    scripts\asm\asm_mp::_id_235F( var_0, var_1, var_2, 1.0, 0 );
}

_id_85F7( var_0, var_1, var_2, var_3 )
{
    self setscriptablepartstate( "spawn_beam", "off" );
}

_id_8601( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_FF9F );
}

_id_85FF( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\asm\asm_bb::_id_2925();

    if ( !isdefined( var_4 ) )
        self orientmode( "face angle abs", self.angles );
    else if ( isplayer( var_4 ) && isdefined( self._id_010C ) && var_4 == self._id_010C )
        self orientmode( "face enemy" );
    else
    {
        var_5 = var_4.origin - self.origin;
        var_6 = vectornormalize( var_5 );
        var_7 = vectortoangles( var_6 );
        self orientmode( "face angle abs", var_7 );
    }

    var_8 = scripts\engine\utility::ter_op( isdefined( self._id_BCD6 ), self._id_BCD6, 1 );
    var_9 = _id_3EDC( var_0, var_1, var_3 );
    self setanimstate( var_1, var_9, var_8 );
    self endon( var_1 + "_finished" );
    _id_58BB( var_0, var_1 );
    scripts\asm\asm_bb::_id_2914();
    scripts\asm\asm::_id_2330( var_1, "end" );
}

_id_58BB( var_0, var_1 )
{
    for (;;)
    {
        self waittill( var_1, var_2 );

        if ( !isarray( var_2 ) )
            var_2 = [ var_2 ];

        foreach ( var_4 in var_2 )
        {
            switch ( var_4 )
            {
                case "early_end":
                case "end":
                    return;
                case "stop":
                    var_5 = scripts\asm\asm_bb::_id_2925();

                    if ( !isdefined( var_5 ) )
                        return;

                    if ( !isalive( var_5 ) )
                        return;

                    var_6 = distancesquared( var_5.origin, self.origin );

                    if ( var_6 > self._id_B632 )
                        return;

                    break;
                case "start_melee":
                case "fire":
                    var_5 = scripts\asm\asm_bb::_id_2925();

                    if ( !isdefined( var_5 ) )
                        return;

                    if ( isalive( var_5 ) )
                    {
                        if ( scripts\engine\utility::_id_9CEE( self._id_927D ) )
                            _id_B787( self, var_5 );
                        else
                            _id_0C35::_id_CA1F( var_5 );
                    }

                    break;
                default:
                    scripts\asm\asm_mp::_id_2345( var_4, var_1 );
            }
        }
    }
}

_id_B787( var_0, var_1 )
{
    if ( !_id_FF46( var_0, var_1 ) )
        return;

    if ( !_id_9B68( var_0 ) )
    {
        var_2 = scripts\engine\utility::_id_5D14( self.origin, 5, -50 );
        var_3 = scripts\engine\utility::_id_5D14( var_1.origin, 5, -50 );
        var_4 = _id_7C62();
        var_5 = var_2 + var_4;
        var_6 = var_3 + var_4;
        level thread _id_6D07( var_5, 700, 2, var_6 - var_5, 0 );
    }
}

_id_FF46( var_0, var_1 )
{
    if ( !isalive( var_1 ) )
        return 0;

    return 1;
}

_id_9B68( var_0 )
{
    var_1 = getentarray( "mini_grey_shock_arc_trigger", "targetname" );

    foreach ( var_3 in var_1 )
    {
        if ( scripts\engine\utility::_id_9CEE( var_3._id_93A8 ) && distancesquared( var_0.origin, var_3.origin ) < 640000 )
            return 1;
    }

    return 0;
}

_id_7C62()
{
    var_0 = [ ( 0, 0, 20 ), ( 0, 0, 60 ) ];
    return scripts\engine\utility::_id_DC6B( var_0 );
}

_id_6D07( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = 125;
    var_6 = _id_7AE5();

    if ( !isdefined( var_6 ) )
        return;

    var_3 = vectornormalize( var_3 );
    var_6.origin = var_0;
    var_6.angles = _id_7827( var_3, var_4 );
    var_7 = int( var_2 * 20 );
    var_8 = var_1 / var_7;
    var_6 thread _id_FE3A( var_6 );

    for ( var_9 = 0; var_9 < var_7; var_9++ )
    {
        var_10 = var_6.origin;
        var_11 = anglestoforward( var_6.angles );
        var_6.origin = var_10 + var_3 * var_8;
        var_12 = var_11 * var_5;
        var_13 = var_10 + var_12;
        var_14 = var_10 - var_12;
        playfxbetweenpoints( level._effect["zombie_mini_grey_shock_arc"], var_13, vectortoangles( var_14 - var_13 ), var_14 );
        scripts\engine\utility::waitframe();
    }

    var_6.origin = var_6._id_C726;
    var_6._id_93A8 = 0;
    var_6 notify( "stop_shock_arc_trigger_monitor" );
}

_id_7827( var_0, var_1 )
{
    var_2 = vectortoangles( var_0 );

    switch ( var_1 )
    {
        case 0:
            var_3 = anglestoright( var_2 );
            return vectortoangles( var_3 );
        case 45:
            var_4 = anglestoright( var_2 );
            var_5 = anglestoup( var_2 );
            var_6 = var_4 + var_5;
            return vectortoangles( var_6 );
        case 90:
            var_7 = anglestoup( var_2 );
            return vectortoangles( var_7 );
        case 135:
            var_8 = anglestoleft( var_2 );
            var_5 = anglestoup( var_2 );
            var_6 = var_8 + var_5;
            return vectortoangles( var_6 );
    }
}

_id_FE3A( var_0 )
{
    var_0 endon( "stop_shock_arc_trigger_monitor" );

    for (;;)
    {
        var_0 waittill( "trigger", var_1 );

        if ( !isplayer( var_1 ) )
            continue;

        if ( _id_37FC( var_1 ) )
            var_1 _meth_80B0( 60, var_0.origin );

        scripts\engine\utility::waitframe();
    }
}

_id_7AE5()
{
    var_0 = getentarray( "mini_grey_shock_arc_trigger", "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( scripts\engine\utility::_id_9CEE( var_2._id_93A8 ) )
            continue;

        var_2._id_C726 = var_2.origin;
        var_2._id_93A8 = 1;
        return var_2;
    }

    return undefined;
}

_id_37FC( var_0 )
{
    var_1 = gettime();

    if ( !isdefined( var_0._id_D8A5 ) )
        var_0._id_D8A5 = 0;

    if ( var_1 - var_0._id_D8A5 < 1000 )
        return 0;
    else
    {
        var_0._id_D8A5 = var_1;
        return 1;
    }
}

_id_5F35( var_0 )
{
    level notify( "grey_duplicating_attack_timer" );
    level endon( "grey_duplicating_attack_timer" );
    level endon( "grey_duplicating_attack_end" );
    wait 420;
    _id_0F7A::_id_12868();
}

_id_4644( var_0, var_1 )
{
    var_0._id_15B5 = var_1._id_15B5;
    var_0._id_4C17 = var_1._id_4C17;
    var_0._id_B43F = var_1._id_B43F;
    var_0._id_B748 = var_1._id_B748;
    var_0._id_8CAA = var_1._id_8CAA;
    var_0._id_1272C = var_1._id_1272C;
    var_0._id_8CB2 = var_1._id_8CB2;
}

_id_463D( var_0, var_1 )
{
    var_1._id_269D = [];

    foreach ( var_3 in var_1._id_269C )
        var_1._id_269D[var_1._id_269D.size] = var_3._id_113E0;

    var_0._id_269D = var_1._id_269D;
}

_id_5CF8()
{
    scripts\engine\utility::_id_6E3E( "force_drop_max_ammo" );
}
