// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_D8F0( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = var_0 / 0.05;

    for ( var_7 = 0; var_7 < var_6; var_7++ )
        wait 0.05;
}

_id_D8EF( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = 100.0;
    var_6 = 0;
    var_0 = var_0 + scripts\engine\utility::_id_DCC8( 30 );

    for ( var_7 = 0; var_7 < var_5; var_7++ )
    {
        var_6 = var_6 + 0.5;
        wait 0.05;
    }
}

_id_4A99( var_0, var_1 )
{
    return var_0[0] * var_1[1] - var_0[1] * var_1[0] > 0;
}

_id_EA26( var_0, var_1 )
{
    var_2 = int( var_0 ) % var_1;
    var_2 = var_2 + var_1;
    return var_2 % var_1;
}

_id_DB51( var_0 )
{
    var_1 = cos( var_0 );
    var_2 = sin( var_0 );
    var_3["front"] = 0;
    var_3["right"] = 0;
    var_3["back"] = 0;
    var_3["left"] = 0;

    if ( isdefined( self._id_1D64 ) )
    {
        var_3["front"] = 1;
        return var_3;
    }

    if ( var_1 > 0 )
    {
        if ( var_2 > var_1 )
            var_3["left"] = 1;
        else if ( var_2 < -1 * var_1 )
            var_3["right"] = 1;
        else
            var_3["front"] = 1;
    }
    else
    {
        var_4 = -1 * var_1;

        if ( var_2 > var_4 )
            var_3["left"] = 1;
        else if ( var_2 < var_1 )
            var_3["right"] = 1;
        else
            var_3["back"] = 1;
    }

    return var_3;
}

_id_80A4( var_0 )
{
    var_0 = angleclamp( var_0 );

    if ( var_0 < 45 || var_0 > 315 )
        var_1 = "front";
    else if ( var_0 < 135 )
        var_1 = "left";
    else if ( var_0 < 225 )
        var_1 = "back";
    else
        var_1 = "right";

    return var_1;
}

_id_9E50( var_0, var_1 )
{
    for ( var_2 = var_1.size - 1; var_2 >= 0; var_2-- )
    {
        if ( var_0 == var_1[var_2] )
            return 1;
    }

    return 0;
}

_id_13C40()
{
    return self.weapon != "none" && weaponisboltaction( self.weapon ) && weaponclass( self.weapon ) == "spread";
}

_id_9F4F( var_0 )
{
    return weaponclass( var_0 ) == "spread";
}

_id_9F62( var_0 )
{
    return weaponclass( var_0 ) == "sniper";
}

_id_9F50()
{
    return _id_9F4F( self.primaryweapon );
}

_id_9D4D( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 1;

    if ( !_id_9F62( self.primaryweapon ) )
        return 0;

    if ( var_0 )
    {
        if ( self.primaryweapon != self.weapon )
            return _id_9F62( self.weapon );
    }

    return 1;
}

_id_9E83()
{
    return _id_9D4D() || _id_1311B();
}

_id_13115()
{
    return weaponclass( self.weapon ) == "pistol";
}

_id_1311B()
{
    return weaponclass( self.weapon ) == "rocketlauncher";
}

_id_13112()
{
    return weaponclass( self.weapon ) == "mg";
}

_id_9FC9()
{
    return weaponclass( self.weapon ) == "spread";
}

_id_1311A()
{
    var_0 = weaponclass( self.weapon );

    switch ( var_0 )
    {
        case "sniper":
        case "mg":
        case "smg":
        case "rifle":
        case "spread":
            return 1;
    }

    return 0;
}

_id_E191( var_0, var_1, var_2 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) || !isdefined( var_2 ) )
        return;

    if ( !isplayer( var_1 ) )
        return;

    var_3 = getweaponbasename( var_0 );

    if ( !isdefined( var_3 ) || var_3 != "iw7_repeater" )
        return;

    if ( !isdefined( var_2._id_00DD ) )
        return;

    if ( var_2._id_00DD != "head" && var_2._id_00DD != "helmet" )
        return;

    var_4 = weaponclipsize( var_0 );
    var_5 = var_4 * 1.0;
    var_6 = var_1 getweaponammoclip( var_0 );
    var_7 = min( var_6 + var_5, var_4 );
    var_1 setweaponammoclip( var_0, int( var_7 ) );
}

_id_BE9E( var_0 )
{
    if ( self.weapon == "none" )
        return 0;

    if ( isdefined( self._id_C08B ) )
    {
        if ( self._id_3250 < weaponclipsize( self.weapon ) * 0.5 )
            self._id_3250 = int( weaponclipsize( self.weapon ) * 0.5 );

        if ( self._id_3250 <= 0 )
            self._id_3250 = 0;

        return 0;
    }

    if ( self._id_3250 <= weaponclipsize( self.weapon ) * var_0 )
    {
        if ( var_0 == 0 )
        {
            if ( _id_3D55() )
                return 0;
        }

        return 1;
    }

    return 0;
}

_id_3D55()
{
    if ( !isdefined( self._id_010C ) )
        return 0;

    if ( self.team != "allies" )
    {
        if ( !isplayer( self._id_010C ) )
            return 0;
    }

    if ( _id_9FCA() || _id_1311B() )
        return 0;

    if ( gettime() - self._id_1E3F < self._id_1E3E )
        return 0;

    if ( !self _meth_805F( self._id_010C ) && distancesquared( self.origin, self._id_010C.origin ) > 65536 )
        return 0;

    self._id_3250 = int( weaponclipsize( self.weapon ) / 2 );

    if ( self._id_3250 > weaponclipsize( self.weapon ) )
        self._id_3250 = weaponclipsize( self.weapon );

    self._id_1E3F = gettime();
    return 1;
}

_id_9FC5()
{
    return self.weapon == self.primaryweapon && self.weapon != "none";
}

_id_9FC8()
{
    return self.weapon == self._id_F0C4 && self.weapon != "none";
}

_id_9FCA()
{
    if ( !isdefined( self._id_101B4 ) )
        return 0;

    return self.weapon == self._id_101B4 && self.weapon != "none";
}

_id_7E28()
{
    var_0 = self._id_0205;

    if ( isdefined( var_0 ) && ( self _meth_8215( var_0 ) || isdefined( self._id_473C ) && var_0 == self._id_473C ) )
        return var_0;

    return undefined;
}

_id_7FFE()
{
    var_0 = _id_7E28();

    if ( isdefined( var_0 ) )
        return var_0.type;

    return "none";
}

_id_7FF4()
{
    var_0 = _id_7E28();

    if ( isdefined( var_0 ) )
        return var_0.angles[1];

    return self._id_00EC;
}

_id_7FF5()
{
    var_0 = _id_7E28();

    if ( isdefined( var_0 ) )
        return anglestoforward( var_0.angles );

    return anglestoforward( self.angles );
}

_id_7FFD()
{
    var_0 = _id_7E28();

    if ( isdefined( var_0 ) )
        return var_0.origin;

    return self.origin;
}

_id_FE9A( var_0 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 1;

    [[ anim._id_FE9B ]]( var_0 );
}

_id_8003( var_0 )
{
    if ( isdefined( self._id_0205 ) )
        var_1 = self._id_0205.angles[1] - scripts\engine\utility::_id_8246( var_0 );
    else
        var_1 = self.angles[1] - scripts\engine\utility::_id_8246( var_0 );

    var_1 = angleclamp180( var_1 );
    return var_1;
}

_id_8002()
{
    var_0 = undefined;

    if ( isdefined( self._id_010C ) )
        var_0 = self._id_010C.origin;
    else
    {
        if ( isdefined( self._id_0205 ) )
            var_1 = anglestoforward( self._id_0205.angles );
        else
            var_1 = anglestoforward( self.angles );

        var_1 = var_1 * 150;
        var_0 = self.origin + var_1;
    }

    if ( isdefined( self._id_0205 ) )
        var_2 = self._id_0205.angles[1] - scripts\engine\utility::_id_8246( var_0 );
    else
        var_2 = self.angles[1] - scripts\engine\utility::_id_8246( var_0 );

    var_2 = angleclamp180( var_2 );
    return var_2;
}

_id_824A()
{
    var_0 = undefined;

    if ( isdefined( self._id_010C ) )
        var_0 = self._id_010C.origin;
    else
    {
        var_1 = anglestoforward( self.angles );
        var_1 = var_1 * 150;
        var_0 = self.origin + var_1;
    }

    var_2 = self.angles[1] - scripts\engine\utility::_id_8246( var_0 );
    var_2 = angleclamp180( var_2 );
    return var_2;
}

_id_8245( var_0 )
{
    var_1 = vectortoangles( ( var_0[0], var_0[1], 0 ) - ( self.origin[0], self.origin[1], 0 ) );
    return var_1[1];
}

_id_1535()
{
    var_0 = self.angles[1] - scripts\engine\utility::_id_8246( self._id_010C.origin );
    var_0 = angleclamp180( var_0 );

    if ( var_0 < 0 )
        var_0 = -1 * var_0;

    return var_0;
}

_id_1534()
{
    var_0 = self.angles[1] - _id_8245( self._id_010C.origin );
    var_0 = angleclamp180( var_0 );

    if ( var_0 < 0 )
        var_0 = -1 * var_0;

    return var_0;
}

_id_1536( var_0 )
{
    var_1 = self.angles[1] - scripts\engine\utility::_id_8246( var_0 );
    var_1 = angleclamp180( var_1 );

    if ( var_1 < 0 )
        var_1 = -1 * var_1;

    return var_1;
}

_id_1533( var_0 )
{
    var_1 = self.angles[1] - var_0;
    var_1 = angleclamp180( var_1 );

    if ( var_1 < 0 )
        var_1 = -1 * var_1;

    return var_1;
}

_id_8249( var_0, var_1 )
{
    var_2 = vectortoangles( var_0 - var_1 );
    return var_2[1];
}

_id_7EE7()
{
    return getweaponmodel( self._id_0166 );
}

_id_7E8D()
{
    if ( isdefined( self._id_010C ) )
    {
        self._id_1491._id_A97C = self._id_010C _meth_815B();
        self._id_1491._id_A981 = gettime();
        return self._id_1491._id_A97C;
    }
    else if ( isdefined( self._id_1491._id_A981 ) && isdefined( self._id_1491._id_A97C ) && self._id_1491._id_A981 + 3000 < gettime() )
        return self._id_1491._id_A97C;
    else
    {
        var_0 = self _meth_815B();
        var_0 = var_0 + ( 196 * self._id_01C1[0], 196 * self._id_01C1[1], 196 * self._id_01C1[2] );
        return var_0;
    }
}

_id_81DA( var_0 )
{
    if ( !isdefined( var_0 ) )
        return ( 0, 0, 0 );

    if ( !isdefined( var_0._id_ECF3 ) )
        return var_0.angles;

    var_1 = var_0.angles;
    var_2 = angleclamp180( var_1[0] + var_0._id_ECF3[0] );
    var_3 = var_1[1];
    var_4 = angleclamp180( var_1[2] + var_0._id_ECF3[2] );
    return ( var_2, var_3, var_4 );
}

_id_824B( var_0 )
{
    if ( isdefined( self.type ) && scripts\engine\utility::_id_9EB1( self ) )
    {
        var_1 = _id_81DA( self );
        var_2 = anglestoforward( var_1 );
        var_3 = rotatepointaroundvector( var_2, var_0 - self.origin, var_1[2] * -1 );
        var_3 = var_3 + self.origin;
        var_4 = scripts\engine\utility::_id_8246( var_3 ) - var_1[1];
        var_4 = angleclamp180( var_4 );
        return var_4;
    }

    var_4 = scripts\engine\utility::_id_8246( var_0 ) - self.angles[1];
    var_4 = angleclamp180( var_4 );
    return var_4;
}

_id_3909( var_0, var_1 )
{
    var_2 = var_1 _id_824B( var_0 );

    if ( var_2 > 60 || var_2 < -60 )
        return 0;

    if ( scripts\engine\utility::_id_9EB4( var_1 ) && var_2 < -14 )
        return 0;

    if ( scripts\engine\utility::_id_9EB7( var_1 ) && var_2 > 12 )
        return 0;

    return 1;
}

_id_7FFC( var_0 )
{
    if ( isdefined( var_0._id_C364 ) )
        return var_0._id_C364;

    var_1 = ( -26, 0.4, 36 );
    var_2 = ( -32, 7, 63 );
    var_3 = ( 43.5, 11, 36 );
    var_4 = ( 36, 8.3, 63 );
    var_5 = ( 3.5, -12.5, 45 );
    var_6 = ( -3.7, -22, 63 );
    var_7 = 0;
    var_8 = ( 0, 0, 0 );
    var_9 = anglestoright( var_0.angles );
    var_10 = anglestoforward( var_0.angles );
    var_11 = anglestoup( var_0.angles );
    var_12 = var_0.type;

    switch ( var_12 )
    {
        case "Cover Left":
            if ( var_0 gethighestnodestance() == "crouch" )
                var_8 = _id_3718( var_9, var_10, var_11, var_1 );
            else
                var_8 = _id_3718( var_9, var_10, var_11, var_2 );

            break;
        case "Cover Right":
            if ( var_0 gethighestnodestance() == "crouch" )
                var_8 = _id_3718( var_9, var_10, var_11, var_3 );
            else
                var_8 = _id_3718( var_9, var_10, var_11, var_4 );

            break;
        case "Cover Stand":
        case "Conceal Stand":
        case "Turret":
        case "Cover Stand 3D":
            var_8 = _id_3718( var_9, var_10, var_11, var_6 );
            break;
        case "Conceal Crouch":
        case "Cover Crouch Window":
        case "Cover Crouch":
            var_8 = _id_3718( var_9, var_10, var_11, var_5 );
            break;
        case "Cover 3D":
            var_8 = _id_7E3F( var_0 );
            break;
    }

    var_0._id_C364 = var_8;
    return var_0._id_C364;
}

_id_7E3F( var_0, var_1 )
{
    var_2 = ( 2, -10, 35 );
    var_3 = ( -19, -10, 32 );
    var_4 = ( 16, -10, 32 );
    var_5 = anglestoright( var_0.angles );
    var_6 = anglestoforward( var_0.angles );
    var_7 = anglestoup( var_0.angles );
    var_8 = var_2;

    if ( isdefined( var_1 ) )
    {
        if ( var_1 == "left" )
            var_8 = var_3;
        else if ( var_1 == "right" )
            var_8 = var_4;
        else
        {

        }
    }

    return _id_3718( var_5, var_6, var_7, var_8 );
}

_id_3718( var_0, var_1, var_2, var_3 )
{
    return var_0 * var_3[0] + var_1 * var_3[1] + var_2 * var_3[2];
}

_id_390A( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_9EB4( var_1 ) || scripts\engine\utility::_id_9EB7( var_1 ) )
    {
        if ( !_id_3909( var_0, var_1 ) )
            return 0;
    }

    var_2 = _id_7FFC( var_1 );
    var_3 = var_1.origin + var_2;

    if ( !_id_3E33( var_3, var_0, var_1 ) )
        return 0;

    if ( !sighttracepassed( var_3, var_0, 0, undefined ) )
    {
        if ( scripts\engine\utility::_id_9EB3( var_1 ) )
        {
            var_3 = ( 0, 0, 64 ) + var_1.origin;
            return sighttracepassed( var_3, var_0, 0, undefined );
        }

        return 0;
    }

    return 1;
}

_id_CA71( var_0, var_1 )
{
    self endon( "death" );
    level notify( "newdebugline" );
    level endon( "newdebugline" );

    for (;;)
        wait 0.05;
}

_id_3908()
{
    if ( !isdefined( self._id_010C ) )
    {
        self._id_8451 = undefined;
        return 0;
    }

    var_0 = _id_7E8D();

    if ( !isdefined( self._id_0205 ) )
        var_1 = self _meth_805F( self._id_010C );
    else if ( scripts\engine\utility::_id_167E() && scripts\engine\utility::_id_9EB1( self._id_0205 ) )
    {
        var_1 = _id_390A( var_0, self._id_0205 );

        if ( !var_1 )
        {
            var_0 = ( self._id_010C.origin + var_0 ) / 2;
            var_1 = _id_390A( var_0, self._id_0205 );
        }
    }
    else
        var_1 = _id_390A( var_0, self._id_0205 );

    if ( var_1 )
    {
        self._id_8451 = var_0;
        _id_5962();
    }
    else
    {

    }

    return var_1;
}

_id_3E33( var_0, var_1, var_2 )
{
    var_3 = self._id_0368 - anim._id_1A44;
    var_4 = self._id_0100 + anim._id_1A44;
    var_5 = var_1 - var_0;

    if ( scripts\engine\utility::_id_167E() )
    {
        if ( isdefined( var_2 ) && scripts\engine\utility::_id_9EB1( var_2 ) )
            var_6 = var_2.angles;
        else
            var_6 = self.angles;

        var_5 = rotatevectorinverted( var_5, var_6 );
    }

    var_7 = angleclamp180( vectortoangles( var_5 )[0] );

    if ( var_7 < var_3 )
        return 0;

    if ( var_7 > var_4 )
    {
        if ( isdefined( var_2 ) && !scripts\engine\utility::_id_9EB3( var_2 ) )
            return 0;

        if ( var_7 > anim._id_4717 + var_4 )
            return 0;
    }

    return 1;
}

_id_5962()
{
    self._id_1491._id_1006B = 1;
}

_id_3917()
{
    if ( !_id_8C31() )
    {
        self._id_8451 = undefined;
        return 0;
    }

    if ( !isplayer( self._id_010C ) )
        return _id_1B05();

    var_0 = self _meth_8142();

    if ( !_id_3E33( var_0, self._id_01B2 ) )
        return 0;

    return _id_6CB7( var_0 );
}

_id_12EA2()
{
    if ( !isdefined( self._id_1491._id_1006B ) )
        self._id_1491._id_1006B = 1;

    if ( self._id_1491._id_1006B )
    {
        self._id_1491._id_83B8 = gettime() + randomintrange( 15000, 30000 );
        self._id_1491._id_1006B = 0;
    }
}

_id_8C31()
{
    if ( !isdefined( self._id_010C ) )
        return 0;

    if ( !isdefined( self._id_01B2 ) )
        return 0;

    _id_12EA2();

    if ( gettime() > self._id_1491._id_83B8 )
        return 0;

    if ( !isdefined( self._id_8451 ) && !_id_BE8C() )
        return 0;

    return 1;
}

_id_1B05()
{
    if ( !self _meth_805A() )
        return 0;

    var_0 = undefined;

    if ( isdefined( self._id_010C._id_0205 ) )
    {
        var_1 = _id_7FFC( self._id_010C._id_0205 );
        var_0 = self._id_010C._id_0205.origin + var_1;
    }
    else
        var_0 = self._id_010C _meth_815B();

    if ( !self _meth_8060( var_0 ) )
        return 0;

    if ( self.script == "combat" )
    {
        if ( !sighttracepassed( self geteye(), self _meth_8142(), 0, undefined ) )
            return 0;
    }

    self._id_8451 = var_0;
    return 1;
}

_id_3905( var_0 )
{
    if ( !sighttracepassed( self _meth_815B(), var_0, 0, undefined ) )
        return 0;

    if ( self._id_1491._id_13CBA["right"] == "none" )
        return 0;

    var_1 = self _meth_8142();
    return sighttracepassed( var_1, var_0, 0, undefined );
}

_id_BE8C()
{
    if ( isdefined( self._id_8451 ) && !_id_3905( self._id_8451 ) )
        return 1;

    return !isdefined( self._id_A97E ) || self._id_A97E != self._id_01B2 || distancesquared( self._id_A97F, self.origin ) > 1024;
}

_id_6CB7( var_0 )
{
    if ( isdefined( self._id_010C ) && distancesquared( self.origin, self._id_010C.origin ) > squared( self._id_010C._id_01D4 ) )
    {
        self._id_8451 = undefined;
        return 0;
    }

    if ( !sighttracepassed( self _meth_815B(), var_0, 0, undefined ) )
    {
        self._id_8451 = undefined;
        return 0;
    }

    if ( _id_BE8C() )
    {
        self._id_A97F = self.origin;
        self._id_A97E = self._id_01B2;
        var_1 = _id_7E8D();
        var_2 = bullettrace( self._id_01B2, var_1, 0, undefined );
        var_3 = var_2["position"];
        var_4 = self._id_01B2 - var_3;
        var_5 = vectornormalize( self._id_01B2 - var_0 );
        var_4 = var_4 - var_5 * vectordot( var_4, var_5 );
        var_6 = 20.0;
        var_7 = int( length( var_4 ) / var_6 + 0.5 );

        if ( var_7 < 1 )
            var_7 = 1;

        if ( var_7 > 4 )
            var_7 = 4;

        var_8 = self._id_01B2 - var_3;
        var_8 = ( var_8[0] / var_7, var_8[1] / var_7, var_8[2] / var_7 );
        var_7++;
        var_9 = var_3;
        self._id_8451 = undefined;
        var_10 = 0;
        var_11 = 2;

        for ( var_12 = 0; var_12 < var_7 + var_11; var_12++ )
        {
            var_13 = sighttracepassed( var_0, var_9, 0, undefined );
            var_14 = var_9;

            if ( var_12 == var_7 - 1 )
                var_8 = var_8 - var_5 * vectordot( var_8, var_5 );

            var_9 = var_9 + var_8;

            if ( var_13 )
            {
                var_10++;
                self._id_8451 = var_14;

                if ( var_12 > 0 && var_10 < var_11 && var_12 < var_7 + var_11 - 1 )
                    continue;

                return 1;
            }
            else
                var_10 = 0;
        }
    }

    return isdefined( self._id_8451 );
}

_id_3918()
{
    if ( !_id_8C31() )
    {
        self._id_8451 = undefined;
        return 0;
    }

    if ( !isplayer( self._id_010C ) )
        return _id_1B05();

    if ( isdefined( self._id_0205 ) )
    {
        if ( scripts\engine\utility::_id_9EB4( self._id_0205 ) || scripts\engine\utility::_id_9EB7( self._id_0205 ) )
        {
            if ( !_id_3909( _id_7E8D(), self._id_0205 ) )
                return 0;
        }

        var_0 = _id_7FFC( self._id_0205 );
        var_1 = self._id_0205.origin + var_0;
    }
    else
        var_1 = self _meth_8142();

    if ( !_id_3E33( var_1, self._id_01B2 ) )
        return 0;

    return _id_6CB7( var_1 );
}

_id_3907( var_0 )
{
    if ( !isdefined( self._id_010C ) )
        return 0;

    if ( isdefined( var_0 ) && self _meth_805F( self._id_010C, var_0 ) || self _meth_805F( self._id_010C ) )
    {
        if ( !_id_3E33( self geteye(), self._id_010C _meth_815B() ) )
            return 0;

        self._id_8451 = _id_7E8D();
        _id_5962();
        return 1;
    }

    return 0;
}

_id_DDC9()
{
    return isdefined( self._id_010C ) && self _meth_8296( self._id_010C, 5 );
}

_id_9F8F()
{
    if ( isdefined( self._id_72E7 ) )
        return self._id_72E7;

    if ( self._id_02D5 <= self._id_112CE )
        return 0;

    return self _meth_81C0();
}

_id_6561()
{
    if ( !isdefined( self._id_010C ) )
        return 0;

    if ( self._id_010C scripts\engine\utility::_id_9DFB() )
        return 1;

    if ( isplayer( self._id_010C ) )
    {
        if ( isdefined( self._id_010C.health ) && self._id_010C.health < self._id_010C.maxhealth )
            return 1;
    }
    else if ( isai( self._id_010C ) && self._id_010C _id_9F8F() )
        return 1;

    if ( isdefined( self._id_010C._id_9F21 ) && self._id_010C._id_9F21 )
        return 1;

    return 0;
}

_id_10077()
{
    if ( !_id_3907() )
        return 0;

    if ( !isdefined( self._id_473C ) && !self _meth_8061() )
        return 0;

    return 1;
}

_id_10434( var_0 )
{
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        if ( var_3._id_13CE8 <= 0 )
            continue;

        for ( var_4 = 0; var_4 < var_1.size; var_4++ )
        {
            if ( var_3._id_13CE8 < var_1[var_4]._id_13CE8 )
            {
                for ( var_5 = var_1.size; var_5 > var_4; var_5-- )
                    var_1[var_5] = var_1[var_5 - 1];

                break;
            }
        }

        var_1[var_4] = var_3;
    }

    return var_1;
}
