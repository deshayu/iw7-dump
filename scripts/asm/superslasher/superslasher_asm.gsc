// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

superslasher_init( var_0, var_1, var_2, var_3 )
{
    self._id_2303._id_7257 = spawnstruct();
    self._id_2303._id_7257._id_7254 = "left";
    self._id_2303._id_7257.time = gettime();
    self._id_2303._id_4C86 = spawnstruct();
    self._id_02CC = 32;
    self._id_0293 = 160;
    var_4 = self getanimentry( "jump_to_roof", 0 );
    var_5 = getmovedelta( var_4 );
    var_6 = _func_078( var_4 );
    level.superslasherjumptoroofangles = ( 0, angleclamp180( level.superslasherrooftopangles[1] - 180 - var_6 ), 0 );
    level.superslashergotogroundspot = level.superslasherrooftopspot - rotatevector( var_5, level.superslasherjumptoroofangles );
}

ss_play( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( var_1 + "_finished" );
    var_5 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );

    if ( !isdefined( var_4 ) )
        var_4 = scripts\asm\asm::_id_2341( var_0, var_1 );

    scripts\anim\notetracks_mp::_id_CED2( var_1, var_5, self._id_BCE4, var_1, "end", var_4 );
}

superslasher_playmoveloop( var_0, var_1, var_2, var_3 )
{
    self._id_1198._id_2BE4 = 1;
    scripts\asm\shared\mp\move_v2::playmoveloopv2( var_0, var_1, var_2, var_3 );
}

superslasher_playmoveloop_clean( var_0, var_1, var_2, var_3 )
{
    self._id_1198._id_2BE4 = undefined;
}

ss_play_groundidle( var_0, var_1, var_2, var_3 )
{
    self._id_1198.bidle = 1;
    _id_0F3C::_id_B050( var_0, var_1, var_2, var_3 );
}

ss_play_groundidle_clean( var_0, var_1, var_2 )
{
    self._id_1198.bidle = undefined;
}

ss_play_roofidle( var_0, var_1, var_2, var_3 )
{
    self _meth_828A( "noclip" );
    self orientmode( "face angle abs", level.superslasherrooftopangles );
    _id_0F3C::_id_B050( var_0, var_1, var_2, var_3 );
}

ss_play_rooftaunt( var_0, var_1, var_2, var_3 )
{
    self _meth_828A( "noclip" );
    self orientmode( "face angle abs", level.superslasherrooftopangles );
    _id_0F3C::_id_CEA8( var_0, var_1, var_2, var_3 );
}

ss_play_rooftaunt_clean( var_0, var_1, var_2 )
{
    self _meth_828A( "gravity" );
}

ss_play_jumptoground( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_1198.buninterruptibleanim = 1;
    self _meth_8281( "anim deltas" );
    self _meth_828A( "noclip" );
    thread ss_play_jtog_waitmigrate( var_1 );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

ss_play_jtog_waitmigrate( var_0 )
{
    self endon( var_0 + "_finished" );
    level waittill( "host_migration_begin" );
    self._id_1198.bjumptogroundborked = 1;
}

ss_play_jumptoground_clean( var_0, var_1, var_2 )
{
    self scragentsetanimscale( 1, 1 );
    self _meth_828A( "gravity" );
    self._id_1198.buninterruptibleanim = undefined;

    if ( isdefined( self._id_1198.bjumptogroundborked ) || self.origin[2] > -116 )
    {
        self setorigin( level.superslashergotogroundspot + ( 0, 0, 24 ) );
        self._id_1198.bjumptogroundborked = undefined;
    }
}

ss_play_jumptoground_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "land" )
        thread scripts\asm\superslasher\superslasher_actions::superslasher_dogroundpoundimpact();
}

ss_play_jumpscale( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = var_4 - self.origin;
    var_6 = vectortoangles( ( var_5[0], var_5[1], 0 ) );

    if ( isdefined( var_3 ) )
    {
        var_7 = getmovedelta( var_3 );
        var_4 = var_4 - rotatevector( var_7, var_6 );
        var_5 = var_4 - self.origin;
    }

    self _meth_8281( "anim deltas" );
    self orientmode( "face angle abs", var_6 );
    self _meth_828A( "noclip" );
    var_8 = getmovedelta( var_2 );
    var_9 = length2d( var_8 );
    var_10 = length2d( var_5 );
    var_11 = var_10 / var_9;
    var_12 = max( var_5[2] / var_8[2], 0 );
    var_13 = 1.0;
    self scragentsetanimscale( var_11, var_12 );
    scripts\anim\notetracks_mp::_id_CED2( var_0, var_1, var_13, var_0, "end" );
}

ss_play_jumptoroof( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_1198.buninterruptibleanim = 1;
    var_4 = level.superslasherrooftopspot;
    var_5 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_6 = self getanimentry( var_1, var_5 );
    var_7 = level.superslasherjumptoroofangles;
    self _meth_8281( "anim deltas" );
    self orientmode( "face angle abs", var_7 );
    self _meth_828A( "noclip" );
    thread ss_play_jtog_waitmigrate( var_1 );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

ss_play_jumptoroof_clean( var_0, var_1, var_2 )
{
    self _meth_828A( "gravity" );
    self._id_1198.buninterruptibleanim = undefined;

    if ( isdefined( self._id_1198.bjumptogroundborked ) || self.origin[2] < 340 )
    {
        self setorigin( level.superslasherrooftopspot );
        self._id_1198.bjumptogroundborked = undefined;
    }

    if ( scripts\asm\asm::_id_232B( var_1, "end" ) )
    {
        self._id_2303.turndata = spawnstruct();
        self._id_2303.turndata = angleclamp180( level.superslasherrooftopangles[1] - self.angles[1] );
    }
}

ss_play_groundpound( var_0, var_1, var_2, var_3 )
{
    self playsoundonmovingent( "zmb_vo_supslasher_attack_ground_pound" );
    ss_play( var_0, var_1, var_2, var_3, ::ss_play_groundpound_nt );
}

ss_play_groundpound_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
        thread scripts\asm\superslasher\superslasher_actions::superslasher_dogroundpoundimpact();
}

ss_play_summonsawblades( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    thread scripts\asm\superslasher\superslasher_actions::superslasher_dosummonedsawblades();
    ss_play( var_0, var_1, var_2, var_3 );
}

ss_play_sawcharge_start( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );

    if ( isdefined( self._id_1198.throwsawchargetime ) )
    {
        var_5 = self getanimentry( var_1, var_4 );
        var_6 = getanimlength( var_5 );
        self._id_1198.throwsawchargelooptime = max( self._id_1198.throwsawchargetime - var_6, 0 );
    }

    var_7 = scripts\asm\asm::_id_2341( var_0, var_1 );
    scripts\anim\notetracks_mp::_id_CED2( var_1, var_4, self._id_BCE4, var_1, "end", var_7 );
}

ss_play_sawcharge_start_clean( var_0, var_1, var_2 )
{
    self._id_1198.throwsawchargetime = undefined;
}

ss_play_sawcharge( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    thread _id_0F3C::_id_B050( var_0, var_1, var_2, var_3 );
    wait( self._id_1198.throwsawchargelooptime );
    scripts\asm\asm::_id_2330( var_1, "saw_charge_loop_complete" );
}

ss_play_sawcharge_clean( var_0, var_1, var_2 )
{
    self._id_1198.throwsawchargelooptime = undefined;
}

ss_play_throwsaw( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = 1;
    self.throwsawprevturnspeed = self _meth_827F();

    if ( isdefined( self._id_1198.throwsawtarget ) )
        thread superslasher_faceenemyhelper( self._id_1198.throwsawtarget, var_4 * 1000, var_1 );

    ss_play( var_0, var_1, var_2, var_3, ::ss_play_throwsaw_nt );
}

ss_play_throwsaw_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "throw" )
        scripts\asm\superslasher\superslasher_actions::superslasher_dothrownsaw();
}

ss_play_throwsaw_clean( var_0, var_1, var_2 )
{
    self _meth_8288( self.throwsawprevturnspeed );
    self.throwsawprevturnspeed = undefined;
}

ss_play_throwsawfan_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "throw" )
        thread scripts\asm\superslasher\superslasher_actions::superslasher_dosawfan();
}

ss_play_summon( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    scripts\anim\notetracks_mp::_id_CED1( var_1, var_4, self._id_BCE4, 2 / self._id_BCE4 );
    thread scripts\asm\superslasher\superslasher_actions::superslasher_summonminions( var_3 );
    scripts\anim\notetracks_mp::_id_1384C( var_1, "end", var_1, var_4 );
}

ss_play_wires( var_0, var_1, var_2, var_3 )
{
    thread scripts\asm\superslasher\superslasher_actions::superslasher_domaskchange( 1, "roof" );
    ss_play( var_0, var_1, var_2, undefined );
}

ss_play_shockwave_start( var_0, var_1, var_2, var_3 )
{
    self playsoundonmovingent( "zmb_vo_supslasher_attack_shockwave_build_start" );
    self orientmode( "face angle abs", level.superslasherrooftopangles );
    _id_0F3C::_id_CEA8( var_0, var_1, var_2, var_3 );
}

ss_play_shockwave_loop( var_0, var_1, var_2, var_3 )
{
    var_4 = 1;
    self playsoundonmovingent( "zmb_vo_supslasher_attack_shockwave_build" );
    var_5 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    self setanimstate( var_1, var_5, self._id_BCE4 );
    wait( var_4 );
    scripts\asm\asm::_id_2330( var_1, "shockwave_loop_complete" );
}

ss_play_shockwave_finish( var_0, var_1, var_2, var_3 )
{
    ss_play( var_0, var_1, var_2, undefined, ::ss_play_shockwave_nt );
}

ss_play_shockwave_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
        thread scripts\asm\superslasher\superslasher_actions::domaskattack( 0, "roof" );
}

ss_play_summonsharks( var_0, var_1, var_2, var_3 )
{
    self playsoundonmovingent( "zmb_vo_supslasher_attack_summon" );
    thread scripts\asm\superslasher\superslasher_actions::superslasher_domaskchange( 2, "ground" );
    ss_play( var_0, var_1, var_2, undefined );
}

ss_play_trapped( var_0, var_1, var_2, var_3 )
{
    thread _id_126BB( var_1, self._id_1198.trapduration );
    self playsoundonmovingent( "zmb_vo_supslasher_pain" );
    _id_0F3C::_id_B050( var_0, var_1, var_2, var_3 );
}

_id_126BB( var_0, var_1 )
{
    self endon( var_0 + "_finished" );
    wait( var_1 );
    scripts\asm\asm::_id_2330( var_0, "trap_end" );
}

ss_play_trapped_clean( var_0, var_1, var_2 )
{
    self._id_1198.trapduration = undefined;
    self._id_1198.btraprequested = undefined;
}

ss_play_jumpmove_start( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = self._id_1198.jumptargetpos;
    thread scripts\asm\superslasher\superslasher_actions::dogroundjumpattackfx( var_4 );
    var_5 = var_4 - self.origin;
    var_6 = vectortoangles( ( var_5[0], var_5[1], 0 ) );
    var_7 = length( var_5 );
    self _meth_8281( "anim deltas" );
    self orientmode( "face angle abs", var_6 );
    self _meth_828A( "noclip" );
    self scragentsetanimscale( 1, 3 );
    self playsoundonmovingent( "zmb_vo_supslasher_jump" );
    ss_play( var_0, var_1, var_2, var_3 );
}

ss_play_jumpmove_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "takeoff" )
        self._id_1198.binair = 1;
    else if ( var_0 == "land" )
    {
        thread scripts\asm\superslasher\superslasher_actions::superslasher_dogroundpoundimpact();
        self._id_1198.binair = undefined;
        scripts\asm\superslasher\superslasher_actions::groundjumpattackfxcleanup();
        self playsoundonmovingent( "zmb_vo_supslasher_attack_land" );
    }
}

_id_A4DA()
{
    self._id_1198.binair = undefined;
    scripts\asm\superslasher\superslasher_actions::groundjumpattackfxcleanup();
    self._id_1198.jumptargetpos = undefined;
    self _meth_828A( "gravity" );
    self scragentsetanimscale( 1, 1 );
}

ss_play_jumpmove_start_clean( var_0, var_1, var_2 )
{
    self scragentsetanimscale( 1, 1 );

    if ( !scripts\asm\asm::_id_232B( var_1, "end" ) )
        _id_A4DA();
}

ss_play_jumpmove( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = self._id_1198.jumptargetpos;
    self._id_1198.buninterruptibleanim = 1;
    var_5 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_6 = self getanimentry( var_1, var_5 );
    var_7 = scripts\asm\asm_mp::_id_235A( var_1, "end" );
    var_8 = self getanimentry( var_1, var_7 );
    self._id_1198.binair = 1;
    ss_play_jumpscale( var_1, var_5, var_6, var_8, var_4 );
}

ss_play_jumpmove_clean( var_0, var_1, var_2 )
{
    self._id_1198.buninterruptibleanim = undefined;

    if ( !scripts\asm\asm::_id_232B( var_1, "end" ) )
        _id_A4DA();
}

ss_play_jumpmove_end( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_5 = self getanimentry( var_1, var_4 );
    var_6 = getmovedelta( var_5 );
    var_7 = scripts\engine\trace::_id_48CC( 1 );
    var_8 = self._id_1198.jumptargetpos;
    var_9 = scripts\engine\trace::_id_3A09( self.origin, self.origin - ( 0, 0, 60 ), self.radius, self.height, self.angles, self, var_7 );

    if ( var_9["fraction"] < 1 && var_9["normal"][2] > 0 )
        var_8 = var_9["position"];

    var_10 = max( ( var_8[2] - self.origin[2] ) / var_6[2], 0 );
    self scragentsetanimscale( 1, var_10 );
    self _meth_8281( "anim deltas" );
    self _meth_828A( "noclip" );
    scripts\anim\notetracks_mp::_id_CED2( var_1, var_4, self._id_BCE4, var_1, "end", scripts\asm\asm::_id_2341( var_0, var_1 ) );
}

ss_play_jumpmove_end_clean( var_0, var_1, var_2 )
{
    _id_A4DA();
    scripts\asm\asm::_id_232F( "jumpmoveanim", "end" );
}

superslasher_shouldstartarrival( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_0233 ) )
        return 0;

    if ( !scripts\asm\asm::_id_232B( var_1, "cover_approach" ) )
        return 0;

    var_4 = gettime();
    var_5 = 250;

    if ( var_4 - self._id_2303._id_7257.time > var_5 )
        return 0;

    var_6 = 128;
    var_7 = self._id_0233 - self.origin;
    var_8 = length( var_7 );

    if ( var_8 > var_6 )
        return 0;

    var_9 = gettime() - self._id_2303._id_7257.time;

    if ( var_9 < 250 || var_9 > 400 )
        return 0;

    var_10 = self._id_015C;

    if ( isdefined( self._id_0205 ) || isdefined( self._id_028B ) )
        var_10 = 0;

    self._id_2303._id_11068 = _id_3722( var_0, var_2, self._id_0233, var_10, 0 );

    if ( !isdefined( self._id_2303._id_11068 ) )
        return 0;

    return 1;
}

_id_3722( var_0, var_1, var_2, var_3, var_4 )
{
    var_2 = self._id_0233;
    var_5 = self.angles;
    var_6 = var_2 - self.origin;
    var_7 = length2dsquared( var_6 );
    var_8 = _id_0F3C::_id_3E96( var_0, var_1 );
    var_9 = self getanimentry( var_1, var_8 );
    var_10 = getmovedelta( var_9 );
    var_11 = _func_079( var_9 );
    var_12 = rotatevector( var_10, self.angles );
    var_13 = var_12 + self.origin;
    var_14 = 0;
    var_15 = distancesquared( var_13, var_2 );

    if ( var_15 > var_3 * var_3 )
        var_14 = 1;

    var_16 = getclosestpointonnavmesh( var_13, self );
    var_17 = self _meth_84AC();

    if ( !_func_2AC( var_17, var_16, self ) )
        return undefined;

    if ( var_14 )
    {
        var_12 = rotatevector( var_10, var_5 - var_11 );
        var_18 = var_2 - var_12;
    }
    else if ( distance2dsquared( var_16, var_13 ) > 4 )
    {
        var_12 = rotatevector( var_10, var_5 - var_11 );
        var_18 = var_16 - var_12;
    }
    else
        var_18 = self.origin;

    var_19 = spawnstruct();
    var_19._id_02C9 = var_9;
    var_19._id_003F = 4;
    var_19._id_02C5 = var_18;
    var_19._id_003E = var_11[1];
    var_19._id_0130 = var_5;
    var_19._id_01F3 = var_10;
    var_19.animindex = var_8;
    return var_19;
}

ss_play_arrival( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = self._id_2303._id_11068;
    self._id_2303._id_11068 = undefined;
    var_5 = self.angles;

    if ( isdefined( self._id_0233 ) )
    {
        var_6 = distance2d( self.origin, self._id_0233 );
        var_7 = var_6 / length2d( var_4._id_01F3 );
        self scragentsetanimscale( var_7, 1 );

        if ( var_6 > 12 )
        {
            var_8 = vectortoyaw( self._id_0233 - self.origin );
            var_5 = ( 0, var_8, 0 );
        }
    }

    self orientmode( "face angle abs", var_5 );
    self _meth_8281( "anim deltas" );
    scripts\anim\notetracks_mp::_id_CED2( var_1, var_4.animindex, self._id_BCD6, var_1, "end" );
}

ss_play_arrival_clean( var_0, var_1, var_2 )
{
    self scragentsetanimscale( 1, 1 );
}

ss_play_meleecharge( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    thread superslasher_faceenemyhelper( self._id_3135._id_B64D, 500, var_1 );
    self scragentsetanimscale( 2, 1 );
    _id_0F3C::_id_B050( var_0, var_1, var_2, var_3 );
}

ss_play_meleecharge_clean( var_0, var_1, var_2 )
{
    self scragentsetanimscale( 1, 1 );
}

superslasher_shouldmovemelee( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_0233 ) )
        return 0;

    if ( !scripts\asm\asm_bb::_id_2953() )
        return 0;

    return 1;
}

superslasher_faceenemyhelper( var_0, var_1, var_2 )
{
    if ( isdefined( var_2 ) )
        self endon( var_2 + "_finished" );

    var_3 = gettime() + var_1;

    while ( gettime() <= var_3 && isdefined( var_0 ) && isalive( var_0 ) )
    {
        var_4 = var_0.origin - self.origin;

        if ( length2dsquared( var_4 ) > 1024 )
        {
            var_5 = vectortoyaw( var_4 );
            self orientmode( "face angle abs", ( 0, var_5, 0 ) );
        }

        wait 0.05;
    }

    self orientmode( "face angle abs", self.angles );
}

ss_play_standmelee( var_0, var_1, var_2, var_3 )
{
    thread superslasher_faceenemyhelper( self._id_3135._id_B64D, 500, var_1 );
    ss_play( var_0, var_1, var_2, var_3 );
}

ss_play_movemelee( var_0, var_1, var_2, var_3 )
{
    if ( scripts\asm\asm_bb::_id_2957( var_0, var_1 ) )
        thread superslasher_faceenemyhelper( self._id_3135._id_B64D, 1000, var_1 );
    else
        self orientmode( "face angle abs", self.angles );

    ss_play( var_0, var_1, var_2, var_3 );
}

ss_play_movemelee_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
        scripts\asm\superslasher\superslasher_actions::superslasher_domeleedamage();
}

ss_play_stomp( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = self._id_1198.stomptarget;
    thread superslasher_faceenemyhelper( var_4, 1500, var_1 );
    self playsoundonmovingent( "zmb_vo_supslasher_attack_stomp" );
    ss_play( var_0, var_1, var_2, var_3, ::ss_play_stomp_nt );
}

ss_play_stomp_nt( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
        scripts\asm\superslasher\superslasher_actions::superslasher_dostompattack( self._id_1198.stompdist );
}

superslasher_needstoturn( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_0233 ) )
    {
        var_4 = vectortoyaw( self _meth_813A() );
        var_5 = angleclamp180( var_4 - self.angles[1] );

        if ( abs( var_5 ) >= 35 )
        {
            var_6 = anglestoforward( self.angles );
            var_7 = self.origin + var_6 * 128;

            if ( _func_272( self.origin, var_7, self ) )
            {
                self._id_2303.turndata = var_5;
                return 1;
            }
        }
    }
    else if ( isdefined( self._id_3135._id_0334 ) )
    {
        var_8 = self._id_3135._id_0334 _meth_816B();
        var_9 = self._id_3135._id_0334.origin + var_8;
        var_10 = var_9 - self.origin;
        var_11 = vectortoyaw( var_10 );
        var_12 = angleclamp180( var_11 - self.angles[1] );

        if ( abs( var_12 ) >= 35 )
        {
            self._id_2303.turndata = var_12;
            return 1;
        }
    }

    return 0;
}

superslasher_chooseanim_turn( var_0, var_1, var_2 )
{
    var_3 = self._id_2303.turndata;

    if ( var_3 > 0 )
        var_4 = int( ( 180 + var_3 + 10 ) / 45 );
    else
        var_4 = int( ( 180 + var_3 - 10 ) / 45 );

    var_5 = [ "2r", "3", "6", "9", "8", "7", "4", "1", "2l" ];
    return var_5[var_4];
}

ss_play_turn( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_5 = self getanimentry( var_1, var_4 );
    var_6 = getanimlength( var_5 );
    var_7 = 0.75;
    var_8 = self._id_2303.turndata;
    self._id_2303.turndata = undefined;
    self orientmode( "face angle abs", self.angles );
    self _meth_8281( "anim deltas" );
    self._id_1198.bcommittedtoanim = 1;
    scripts\anim\notetracks_mp::_id_CED1( var_1, var_4, self._id_BCD6, ( var_6 - var_7 ) / self._id_BCD6 );
    scripts\asm\asm::_id_2330( var_1, "turn_done" );
}

ss_play_turn_clean( var_0, var_1, var_2 )
{
    self._id_1198.bcommittedtoanim = undefined;
}

superslasher_onroof( var_0, var_1, var_2, var_3 )
{
    return self._id_1198.bonroof;
}

superslasher_gotogroundrequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bgroundrequested );
}

superslasher_gotoroofrequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.broofrequested );
}

superslasher_shouldroofjumpagain( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.iroofjump ) && self._id_1198.iroofjump == 0;
}

superslasher_tauntrequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.btauntrequested );
}

superslasher_shouldsummon( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bsummonrequested );
}

superslasher_groundpoundrequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bgroundpoundrequested );
}

superslasher_shouldsummonsawblades( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bsummonsawbladesrequested );
}

superslasher_shouldthrowsaw( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bthrowsawrequested );
}

superslasher_shouldthrowsawfan( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bthrowsawfanrequested );
}

superslasher_shouldjumpmove( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bjumpmoverequested ) && isdefined( self._id_1198.jumptargetpos );
}

superslasher_wiresrequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bwiresrequested );
}

superslasher_shockwaverequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bshockwaverequested );
}

superslasher_sharksrequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bsharksrequested );
}

superslasher_shouldsawchargeloop( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.throwsawchargelooptime ) && self._id_1198.throwsawchargelooptime > 0;
}

superslasher_stomprequested( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bstomprequested );
}

superslasher_shoulddointro( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_1198.bintrorequested );
}
