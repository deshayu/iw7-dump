// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_98E5( var_0 )
{
    if ( isdefined( self._id_02AE ) && self._id_02AE _id_10863() )
        self._id_6622 = 1;

    if ( isdefined( level._id_93A2 ) )
    {
        if ( self [[ level._id_93A2 ]]() )
            self._id_6622 = 1;
    }

    return anim.success;
}

_id_10863()
{
    if ( isdefined( self._id_EE79 ) && ( self._id_EE79 == "no_boards" || self._id_EE79 == "ground_spawn_no_boards" ) )
        return 1;

    return 0;
}

_id_102D4( var_0 )
{
    var_1 = gettime();

    if ( isdefined( self._id_102D5 ) )
    {
        if ( var_1 >= self._id_102D5 )
        {
            self._id_102D5 = undefined;
            return anim.failure;
        }

        return anim.running;
    }

    if ( !isdefined( self._id_4B26 ) )
    {
        self._id_102D5 = var_1 + 800;
        return anim.running;
    }

    var_2 = distance2d( self.origin, self._id_4B26.origin );

    if ( var_2 < 250 )
        return anim.failure;

    if ( var_2 > 800 )
    {
        self._id_102D5 = var_1 + 500;
        return anim.running;
    }

    var_2 = var_2 - 250;
    var_3 = var_2 / 550;
    self._id_102D5 = var_1 + 200 + int( var_3 * 300 );
    return anim.running;
}

_id_10004( var_0 )
{
    if ( isdefined( level._id_71D7 ) )
    {
        if ( !self [[ level._id_71D7 ]]() )
            return anim.failure;
        else if ( self._id_8C35 )
            return anim.failure;
    }

    return anim.success;
}

_id_5827()
{
    self endon( "AbortEnterPlayspace" );
    self._id_2A90 = 1;
    self [[ level._id_71D6 ]]();
    self._id_2A90 = 0;
}

_id_6628( var_0 )
{
    self._id_2BE7 = 1;
}

_id_6629( var_0 )
{
    self notify( "AbortEnterPlayspace" );
}

_id_6627( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_6622 ) )
        return anim.success;

    return anim.running;
}

_id_3E48( var_0 )
{
    if ( !scripts\engine\utility::_id_9CEE( self._id_EF64 ) )
        return anim.failure;

    return anim.running;
}

_id_3E29( var_0 )
{
    if ( self._id_0180 )
    {
        scripts\asm\asm_bb::_id_2914();
        return anim.failure;
    }

    scripts\asm\asm_bb::_id_2914();

    if ( !isdefined( self._id_4B26 ) )
        return anim.failure;

    if ( isdefined( self._id_4B26._id_0184 ) && self._id_4B26._id_0184 == 1 )
        return anim.failure;

    if ( isdefined( self._id_4B26.killing_time ) )
        return anim.failure;

    if ( self._id_1B03 == "melee" || scripts\anim\notetracks_mp::_id_9F77() )
        return anim.failure;

    if ( !_id_0F74::_id_8B76() )
        return anim.failure;

    if ( _id_0F74::_id_138E7() )
        return anim.failure;

    if ( _id_0F74::_id_54BF() )
        return anim.failure;

    var_1 = scripts\engine\utility::_id_9CEE( self._id_B104 ) && isdefined( self._id_B100 ) && gettime() - self._id_B100 <= self._id_B0FE;

    if ( !_func_279( self._id_4B26.origin, self ) && !scripts\asm\asm_bb::_id_2955() )
    {
        if ( !_id_0F74::_id_DD7C( "offmesh" ) )
            return anim.failure;
    }
    else if ( _id_0F74::_id_54BE() || var_1 )
    {
        if ( !_id_0F74::_id_DD7C( "base" ) )
            return anim.failure;
    }
    else if ( !_id_0F74::_id_DD7C( "normal" ) )
        return anim.failure;

    if ( isdefined( self._id_B603 ) )
    {
        var_2 = gettime() - self._id_A9B8;

        if ( var_2 < self._id_B603 * 1000 )
            return anim.failure;
    }

    if ( !isdefined( self._id_A9B9 ) || distancesquared( self._id_A9B9, self.origin ) > 256 )
    {
        if ( !isdefined( self._id_2303._id_4B12 ) )
            var_3 = self._id_01F5;
        else
            var_3 = self._id_2303._id_4B12;

        self._id_B629 = var_3;
    }

    scripts\asm\asm_bb::_id_2965( self._id_4B26 );
    return anim.failure;
}

_id_3E4F( var_0 )
{
    if ( !scripts\engine\utility::_id_9CEE( self._id_9CDD ) )
        return anim.failure;

    scripts\asm\asm_bb::_id_2914();

    if ( self._id_0180 )
        return anim.failure;

    if ( !isdefined( self._id_4B26 ) )
        return anim.failure;

    if ( isdefined( self._id_4B26._id_0184 ) && self._id_4B26._id_0184 == 1 )
        return anim.failure;

    if ( self._id_1B03 == "melee" || scripts\anim\notetracks_mp::_id_9F77() )
        return anim.failure;

    if ( !_id_0F74::_id_8B76() )
        return anim.failure;

    if ( !_id_13D9D( self._id_4B26 ) )
        return anim.failure;

    _id_296B( self._id_4B26 );
    return anim.failure;
}

_id_296B( var_0 )
{
    self._id_1198._id_3134 = 1;
}

_id_13D9D( var_0 )
{
    return distancesquared( self.origin, var_0.origin ) <= 5625;
}

_id_3D46( var_0 )
{
    scripts\asm\asm_bb::_id_297E( 1 );

    if ( self._id_0180 )
    {
        self._id_4B26 = undefined;
        return anim.failure;
    }

    if ( isdefined( self._id_8C35 ) && self._id_8C35 )
        self._id_C189 = 0;

    if ( !isdefined( self._id_010C ) )
        return anim.failure;

    if ( isdefined( self._id_010C._id_9BE1 ) || isdefined( self._id_010C._id_9C54 ) )
    {
        self._id_4B26 = undefined;
        return anim.failure;
    }

    if ( isdefined( self._id_010C.killing_time ) )
    {
        self._id_4B26 = undefined;
        return anim.failure;
    }

    var_1 = undefined;

    if ( isdefined( self._id_571B ) && _id_0F74::_id_100AB() )
        var_1 = self._id_571B;
    else if ( isdefined( self.attackent ) )
        var_1 = self.attackent;
    else if ( isdefined( self._id_010C ) && !_id_0F74::_id_1002C( self._id_010C ) )
        var_1 = self._id_010C;

    if ( !isdefined( var_1 ) )
    {
        if ( isdefined( self._id_4B26 ) )
            self._id_2AB8 = 1;

        self._id_4B26 = undefined;
        return anim.failure;
    }

    var_3 = self._id_252B + self.radius * 2;
    var_4 = var_3 * var_3;
    var_5 = self._id_252B;
    var_6 = var_5 * var_5;
    self._id_4B26 = var_1;
    var_7 = _id_0F74::_id_7FAA( var_1 );
    var_8 = var_7._id_656D;
    var_9 = distancesquared( var_7.origin, self.origin );
    var_10 = distancesquared( var_8, self.origin );
    var_11 = self._id_2AB8;

    if ( var_10 < squared( self.radius ) && distancesquared( var_8, var_7.origin ) > squared( self.radius ) )
    {
        var_11 = 1;
        self notify( "attack_anim", "end" );
    }

    if ( !var_11 && var_10 > var_4 && var_9 > var_6 )
        var_11 = 1;

    if ( var_7._id_1312B )
    {
        if ( !var_11 && var_10 <= var_4 && var_9 > squared( self._id_503C ) )
            var_11 = 1;

        self _meth_8287( self._id_503C );
    }
    else if ( !_id_0F74::_id_8C39( var_1, self._id_B640 ) )
    {
        self _meth_8287( self._id_503C );
        var_11 = 1;
    }
    else
    {
        self _meth_8287( var_3 );

        if ( var_10 <= var_4 )
        {
            var_7.origin = self.origin;
            var_11 = 1;
        }
    }

    if ( var_11 )
    {
        var_2 = getclosestpointonnavmesh( var_7.origin );

        if ( distancesquared( var_2, var_7.origin ) > 10000 )
            return anim.failure;

        self _meth_8286( var_2 );
    }

    return anim.success;
}

_id_F108( var_0 )
{
    if ( isdefined( self._id_5969 ) )
        return anim.failure;

    var_1 = [];

    foreach ( var_3 in level.players )
    {
        if ( var_3._id_0184 || isdefined( var_3.owner ) && var_3.owner._id_0184 )
            continue;

        if ( _id_0F74::_id_1002C( var_3 ) )
            continue;

        if ( !isalive( var_3 ) )
            continue;

        var_1[var_1.size] = var_3;
    }

    var_5 = undefined;

    if ( var_1.size > 0 )
        var_5 = sortbydistance( var_1, self.origin );

    if ( isdefined( var_5 ) && var_5.size > 0 )
    {
        var_6 = 300;
        var_7 = distancesquared( var_5[0].origin, self.origin );

        if ( var_7 < var_6 * var_6 )
            var_6 = 16;

        var_8 = var_6 * var_6;

        if ( self._id_2AB8 || distancesquared( self _meth_827E(), var_5[0].origin ) > var_8 )
        {
            var_9 = var_5[0].origin;
            var_10 = getclosestpointonnavmesh( var_9, self );

            if ( distancesquared( var_10, var_5[0].origin ) > var_8 )
                return anim.failure;

            self _meth_8286( var_10 );
            self._id_2AB8 = 0;
        }

        scripts\asm\asm_bb::_id_297E( 1 );
        return anim.success;
    }

    return anim.failure;
}

_id_C0B6( var_0 )
{
    scripts\asm\asm_bb::_id_297E( 0 );

    if ( isdefined( level._id_71A7 ) )
    {
        var_1 = 200;

        if ( !isdefined( self._id_0233 ) || distancesquared( self._id_0233, self.origin ) < var_1 * var_1 )
        {
            var_2 = self [[ level._id_71A7 ]]();

            if ( isdefined( var_2 ) )
                self _meth_8286( var_2 );
            else
                self _meth_841F();
        }
    }
    else
        self _meth_841F();

    return anim.success;
}
