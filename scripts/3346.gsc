// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._effect["vfx_phase_shift_start"] = loadfx( "vfx/old/_requests/archetypes/vfx_phase_shift_start_volume" );
    level._effect["vfx_phase_shift_end"] = loadfx( "vfx/old/_requests/archetypes/vfx_phase_shift_start_volume" );
    level._effect["vfx_phase_shift_start_friendly"] = loadfx( "vfx/old/_requests/archetypes/vfx_phase_shift_start_volume_blue" );
    level._effect["vfx_phase_shift_end_friendly"] = loadfx( "vfx/old/_requests/archetypes/vfx_phase_shift_start_volume_blue" );
    level._effect["vfx_phase_shift_trail_friendly"] = loadfx( "vfx/iw7/_requests/mp/vfx_phase_shift_body_fr.vfx" );
    level._effect["vfx_phase_shift_trail_enemy"] = loadfx( "vfx/iw7/_requests/mp/vfx_phase_shift_body_en.vfx" );
    level._effect["vfx_screen_flash"] = loadfx( "vfx/core/mp/core/vfx_screen_flash" );
    level._effect["vfx_phaseshift_fp_scrn"] = loadfx( "vfx/iw7/_requests/mp/vfx_phase_shift_scrn_warp.vfx" );
}

_id_E154()
{
    self notify( "remove_phase_shift" );

    if ( _id_9DDF( self ) )
        _id_6978( 0.0 );
}

_id_E88D()
{
    self endon( "death" );
    self endon( "disconnect" );
    self endon( "remove_phase_shift" );
    var_0 = 5;
    self notify( "phase_shift_power_activated" );

    if ( !_id_9DDF( self ) )
        _id_6626( 1, var_0 );

    _id_0D15::_id_4575( var_0, "powers_phase_shift_update", "phaseshift_interrupted" );
    _id_6978();
    wait 0.1;
}

_id_6626( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 1;

    if ( !isdefined( var_1 ) )
        var_1 = 5;

    self notify( "phase_shift_start" );
    _id_F7E3( 1 );
    _id_0D15::_id_160E( "power_phaseShift" );

    if ( getdvarint( "bg_thirdPerson" ) == 0 )
    {
        self visionsetnakedforplayer( "phase_shift_mp", scripts\engine\utility::ter_op( var_0, 0.1, 0.0 ) );

        if ( var_0 )
            thread _id_5AA3();

        thread _id_1090A( var_1 );
    }

    self playlocalsound( "ftl_phase_out" );
    self playsound( "ftl_phase_out_npc" );
    _id_2A71( self, var_1 );
    self _meth_82C0( "phaseshift_mp_shock", 0.1 );
    thread _id_13A57();
    _id_0A77::_id_1C5C( 1 );

    if ( !scripts\engine\utility::_id_9CEE( level._id_C00B ) )
        _id_0D15::_id_D740( 0 );

    if ( !scripts\engine\utility::_id_9CEE( self._id_13DB4 ) )
        self _meth_80A8();

    _id_0A77::_id_1C5D( 0 );
    _id_0D15::_id_D728();
    self._id_8BAE = 1;
}

_id_6978( var_0 )
{
    self notify( "phase_shift_completed" );
    self _meth_84D3( "power_exit", "phaseshift" );
    self playlocalsound( "ftl_phase_in" );
    self playsound( "ftl_phase_in_npc" );

    if ( getdvarint( "bg_thirdPerson" ) == 0 )
    {
        if ( !isdefined( var_0 ) || var_0 )
            _id_5AA3();
    }

    _id_410A();
    self _meth_8070( 0.1 );
}

_id_10918( var_0 )
{
    var_1 = spawn( "script_model", self.origin );
    var_1 setmodel( "tag_origin" );

    if ( getdvarint( "bg_thirdPerson" ) == 0 )
        var_1 _meth_8429( self );

    wait 0.1;
    _func_29A( scripts\engine\utility::_id_7ECB( var_0 + "_friendly" ), var_1, "tag_origin", self.team );
    _func_29A( scripts\engine\utility::_id_7ECB( var_0 ), var_1, "tag_origin", _id_0A77::_id_8027( self.team ) );
    wait 0.15;
    var_1 delete();
}

_id_1090A( var_0 )
{
    var_1 = spawnfxforclient( scripts\engine\utility::_id_7ECB( "vfx_phaseshift_fp_scrn" ), ( 0, 0, 0 ), self );
    var_1 _meth_82EC();
    triggerfx( var_1 );
    scripts\engine\utility::_id_13736( var_0, "death", "phase_shift_completed" );
    var_1 delete();
}

_id_410A()
{
    self visionsetnakedforplayer( "", 0.0 );
    self._id_8BAE = 0;

    if ( !scripts\engine\utility::_id_9CEE( level._id_C00B ) || _id_0A77::_id_9BA0( "grenade_cooldown" ) )
        _id_0D15::_id_D74E();

    if ( _id_0A77::_id_9E3A() )
        _id_0A77::_id_1C5C( 0 );

    _id_0D15::_id_4DE0( "power_phaseShift" );

    if ( !_id_0A77::_id_213E() )
        _id_0A77::_id_1C5D( 1 );

    self _meth_80DA();
    _id_0D15::_id_D72E();
    _id_F7E3( 0 );
}

_id_13A57()
{
    self endon( "disconnect" );
    self endon( "phase_shift_completed" );
    scripts\engine\utility::waittill_any( "death", "remove_phase_shift" );
    _id_410A();
}

_id_108EE( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = spawn( "script_model", var_1.origin );
    var_5 setmodel( "tag_origin" );
    var_5.owner = var_1;
    var_5._id_CACB = var_2;
    var_5._id_762C = var_0;
    wait 0.1;

    if ( var_1 == var_2 )
    {
        _func_29A( var_0, var_5, "tag_origin", var_3 );
        var_5 _meth_8429( var_2 );
    }
    else
        playfxontagforclients( var_0, var_5, "tag_origin", var_2 );

    var_5 thread _id_12EEA( var_4 );
}

_id_2A71( var_0, var_1 )
{
    var_2 = undefined;

    if ( var_0.team == "allies" )
        var_2 = "axis";
    else if ( var_0.team == "axis" )
        var_2 = "allies";
    else
    {

    }

    thread _id_108EE( scripts\engine\utility::_id_7ECB( "vfx_phase_shift_trail_enemy" ), var_0, var_0, var_2, var_1 );
    var_3 = scripts\engine\utility::ter_op( level.teambased, scripts\engine\utility::_id_7ECB( "vfx_phase_shift_trail_friendly" ), scripts\engine\utility::_id_7ECB( "vfx_phase_shift_trail_enemy" ) );
    thread _id_108EE( var_3, var_0, var_0, var_0.team, var_1 );

    foreach ( var_5 in level.players )
    {
        if ( var_5 == var_0 )
            continue;

        var_6 = scripts\engine\utility::ter_op( level.teambased && var_5.team == var_0.team, scripts\engine\utility::_id_7ECB( "vfx_phase_shift_trail_friendly" ), scripts\engine\utility::_id_7ECB( "vfx_phase_shift_trail_enemy" ) );
        thread _id_108EE( var_6, var_5, var_0, var_0.team, var_1 );
    }
}

_id_12EEA( var_0 )
{
    var_1 = 0;
    var_2 = 0.15;

    for (;;)
    {
        if ( !isdefined( self ) || !isdefined( self.owner ) || !_id_0A77::isreallyalive( self.owner ) || !isdefined( self._id_CACB ) || !_id_0A77::isreallyalive( self._id_CACB ) || !_id_9DDF( self._id_CACB ) || var_1 > var_0 )
        {
            self.origin = self.origin + ( 0, 0, 10000 );
            wait 0.2;
            self delete();
            return;
        }

        var_1 = var_1 + var_2;

        if ( self._id_CACB == self.owner )
        {
            foreach ( var_4 in level.players )
            {
                if ( !_id_213D( var_4, self.owner ) )
                {
                    self _meth_8388( var_4 );
                    continue;
                }

                self _meth_8429( var_4 );
            }
        }
        else
        {
            foreach ( var_4 in level.players )
            {
                if ( !_id_213D( var_4, self.owner ) )
                {
                    self _meth_8388( self.owner );
                    continue;
                }

                self _meth_8429( self.owner );
            }
        }

        self moveto( self.owner.origin, var_2 );
        wait( var_2 );
    }
}

_id_5AA3()
{
    scripts\engine\utility::waitframe();

    if ( isdefined( self ) )
        playfxontagforclients( scripts\engine\utility::_id_7ECB( "vfx_screen_flash" ), self, "tag_eye", self );
}

_id_9DDF( var_0 )
{
    return isdefined( var_0 ) && ( isplayer( var_0 ) || isagent( var_0 ) ) && var_0 _meth_84D9();
}

_id_213D( var_0, var_1 )
{
    var_2 = _id_9DDF( var_0 );
    var_3 = _id_9DDF( var_1 );
    return var_2 && var_3 || !var_3 && !var_2;
}

_id_F7E3( var_0 )
{
    return self _meth_84D8( var_0 );
}

_id_C771()
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    while ( _id_9DDF( self ) )
    {
        var_0 = _id_0A4A::_id_7DB0( "axis" );

        foreach ( var_3, var_2 in var_0 )
        {
            if ( !isalive( var_2 ) )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2._id_CA80 ) )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( level._id_A71C ) && var_2 == level._id_A71C )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2.agent_type ) && var_2.agent_type == "kraken_tentacle" )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2.agent_type ) && var_2.agent_type == "spawn_tentacle" )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2.agent_type ) && var_2.agent_type == "spider" )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2._id_4D32 ) )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2._id_B36D ) )
            {
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2._id_B36A ) )
            {
                _id_0A62::_id_6220( var_2, self, 1, 0, 0, "high" );
                wait 0.2;
                continue;
            }

            if ( isdefined( var_2._id_6BD4 ) )
            {
                wait 0.2;
                continue;
            }

            if ( _id_9DDF( self ) )
            {
                _id_0A62::_id_6220( var_2, self, 2, 0, 0, "high" );
                wait 0.2;
                continue;
            }

            if ( isdefined( self._id_9DF2 ) && self._id_9DF2 == 1 )
            {
                wait 0.2;
                continue;
            }

            if ( var_3 % 2 == 0 )
                wait 0.05;
        }

        wait 0.25;
    }

    _id_0A62::_id_12C01();
}

_id_135FA()
{
    self endon( "death" );
    self endon( "disconnect" );
    self endon( "exit_phase_shift" );

    for (;;)
    {
        if ( !isdefined( self ) )
        {
            wait 1;
            break;
        }

        self waittill( "power_secondary_used" );
        break;
    }

    self notify( "exit_phase_shift" );
}

_id_E830()
{
    var_0 = self getcurrentweapon();
    scripts\engine\utility::_id_1C76( 0 );
    _id_0A77::_id_12C6( "phaseshift_activation_mp" );
    self _meth_83B6( "phaseshift_activation_mp" );
    scripts\engine\utility::waitframe();
    self _meth_83B5( var_0 );
    wait 0.2;
    scripts\engine\utility::_id_1C76( 1 );
    self _meth_83B8( "phaseshift_activation_mp" );
}
