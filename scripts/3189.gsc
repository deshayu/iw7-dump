// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_13F9A( var_0, var_1, var_2, var_3 )
{
    self._id_2303._id_7257 = spawnstruct();
    self._id_2303._id_7257._id_7254 = "invalid";
    self._id_2303._id_7257.time = 0;
    self._id_2303._id_4C86 = spawnstruct();
    self._id_2303._id_7360 = 0;
    self._id_71D0 = ::_id_1004F;
    self._id_7198 = ::_id_38B2;
    self._id_BC09 = [];
    self._id_0246 = 64;
}

_id_3EFC( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_ECF5 ) )
    {
        var_3 = "";

        switch ( self._id_01F5 )
        {
            case "walk":
            case "slow_walk":
                var_3 = "_walk";
                break;
            case "sprint":
            case "run":
                var_3 = "_run";
                break;
            default:
                break;
        }

        if ( scripts\asm\asm_mp::_id_2347( var_1, self._id_02AE._id_ECF5 + var_3 ) )
            return scripts\asm\asm::_id_2358( var_1, self._id_02AE._id_ECF5 + var_3 );
        else if ( scripts\asm\asm_mp::_id_2347( var_1, self._id_02AE._id_ECF5 ) )
            return scripts\asm\asm::_id_2358( var_1, self._id_02AE._id_ECF5 );
    }

    if ( !isdefined( var_2 ) )
        return _id_0F3C::_id_3EF4( var_0, var_1, var_2 );

    return scripts\asm\asm::_id_2358( var_1, var_2 );
}

_id_3EFB( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_ECF5 ) )
    {
        var_3 = "";

        switch ( self._id_01F5 )
        {
            case "walk":
            case "slow_walk":
                var_3 = "_walk";
                break;
            case "sprint":
            case "run":
                var_3 = "_run";
                break;
            default:
                break;
        }

        if ( scripts\asm\asm_mp::_id_2347( var_1, self._id_02AE._id_ECF5 + var_3 ) )
            return scripts\asm\asm::_id_2358( var_1, self._id_02AE._id_ECF5 + var_3 );
        else if ( scripts\asm\asm_mp::_id_2347( var_1, self._id_02AE._id_ECF5 ) )
            return scripts\asm\asm::_id_2358( var_1, self._id_02AE._id_ECF5 );
    }

    if ( !isdefined( var_2 ) )
        return _id_0F3C::_id_3EF4( var_0, var_1, var_2 );

    return scripts\asm\asm::_id_2358( var_1, var_2 );
}

_id_3EE0( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        return _id_0F3C::_id_3EF4( var_0, var_1, var_2 );

    return scripts\asm\asm::_id_2358( var_1, var_2 );
}

_id_3EE1( var_0, var_1, var_2 )
{
    var_3 = 0;
    var_4 = 0;
    var_5 = self getanimentrycount( var_1 );

    if ( var_5 == 1 )
        self._id_BC09[var_1] = 0;
    else if ( !isdefined( self._id_BC09[var_1] ) )
        self._id_BC09[var_1] = randomintrange( 0, var_5 );

    self._id_2303._id_BCD3 = tolower( self._id_BC09[var_1] + 1 );

    if ( isdefined( var_2 ) )
        self._id_2303._id_BCD3 = var_2 + self._id_2303._id_BCD3;

    return self._id_BC09[var_1];
}

_id_3EF1( var_0, var_1, var_2, var_3 )
{
    var_4 = self getanimentrycount( var_1 );
    var_5 = _id_0F74::_id_4D52( self._id_4D62, self._id_00DC );
    var_6 = angleclamp180( var_5 - self.angles[1] );
    var_7 = _id_0F74::_id_8040( var_6, var_4 );
    return var_7;
}

_id_D4F5( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );

    if ( isdefined( self._id_0233 ) )
    {
        self _meth_8281( "code_move" );
        self orientmode( "face motion" );
    }

    var_5 = self getanimentry( var_1, var_4 );
    var_6 = getanimlength( var_5 );
    var_7 = 1;

    if ( isdefined( self._id_C081 ) && self._id_C081 > 0 )
        var_7 = self._id_C081;

    var_6 = var_6 * ( 1 / var_7 );
    self._id_BF9E = gettime() + var_6 * 0.75 * 1000;
    scripts\anim\notetracks_mp::_id_CED3( var_1, var_4, self._id_C081, "pain_anim" );
    _id_6CE0( var_0, var_1, var_3 );
}

_id_D4F3( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    self endon( var_1 + "_finished" );

    if ( scripts\asm\asm_mp::_id_2347( var_1, self._id_2303._id_BCD3 ) )
        var_4 = scripts\asm\asm_mp::_id_235A( var_1, self._id_2303._id_BCD3 );
    else
        var_4 = _id_0F3C::_id_3EF4( var_0, var_1, var_3 );

    var_5 = scripts\asm\asm::_id_2341( var_0, var_1 );
    thread scripts\anim\notetracks_mp::_id_CED5( var_1, var_4, var_1, "end", var_5 );
    self._id_BF9E = gettime() + 10000;
    wait 0.35;
    scripts\asm\asm::_id_2330( var_1, "end" );
}

_id_9DB2( var_0, var_1, var_2, var_3 )
{
    var_4 = _id_4D41();

    if ( scripts\engine\utility::_id_4D59( "torso_upper", "torso_lower" ) && ( isdefined( var_4 ) && var_4 >= 0 ) )
        return 1;

    return scripts\engine\utility::_id_4D59( "left_arm_upper", "left_arm_lower", "left_hand", "left_leg_upper", "left_foot", "left_leg_lower" );
}

_id_9DB3( var_0, var_1, var_2, var_3 )
{
    var_4 = _id_4D41();

    if ( scripts\engine\utility::_id_4D59( "torso_upper", "torso_lower" ) && ( isdefined( var_4 ) && var_4 < 0 ) )
        return 1;

    return scripts\engine\utility::_id_4D59( "right_arm_upper", "right_arm_lower", "right_hand", "right_leg_upper", "right_foot", "right_leg_lower" );
}

_id_9DB1( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_4D59( "head", "neck", "helmet" );
}

_id_4D41()
{
    var_0 = _id_0F74::_id_4D52( self._id_4D62, self._id_00DC );
    var_1 = angleclamp180( var_0 - self.angles[1] );
    return var_1;
}

_id_6CE0( var_0, var_1, var_2 )
{
    self notify( "killanimscript" );
    var_3 = anim._id_2303[var_0]._id_10E2F[var_1];
    var_4 = undefined;

    if ( isarray( var_2 ) )
        var_4 = var_2[0];
    else
        var_4 = var_2;

    if ( !isdefined( var_4 ) )
    {
        if ( isdefined( var_3._id_1267B ) && var_3._id_1267B.size > 0 )
            return;

        var_4 = "choose_idle";
    }

    scripts\asm\asm::_id_2388( var_0, var_1, var_3, var_3._id_116FB );
    scripts\asm\asm::_id_238A( var_0, var_4, 0.2, undefined, undefined, undefined );
}

_id_1004F()
{
    if ( isdefined( self._id_0033 ) && self._id_0033 == 0 )
        return 0;

    if ( isdefined( self._id_9E0C ) && self._id_9E0C )
        return 0;

    if ( isdefined( self._id_BF9E ) && gettime() < self._id_BF9E )
        return 0;

    if ( !isdefined( self._id_0233 ) )
        return 0;

    if ( isdefined( level.no_pain_volume ) && self istouching( level.no_pain_volume ) )
        return 0;

    if ( !scripts\engine\utility::_id_9CEE( self._id_11196 ) )
    {
        if ( scripts\asm\asm_bb::_id_2953() )
            return 0;

        if ( scripts\asm\asm_bb::_id_2952() )
            return 0;
    }

    return 1;
}

_id_9E89( var_0 )
{
    switch ( var_0 )
    {
        case "right_foot":
        case "left_foot":
        case "right_leg_lower":
        case "right_leg_upper":
        case "left_leg_lower":
        case "left_leg_upper":
            return 1;
        default:
            return 0;
    }
}

_id_9EAB( var_0, var_1, var_2, var_3 )
{
    return !scripts\asm\asm_bb::_id_2955();
}

_id_BE92()
{
    if ( isdefined( self._id_565C ) )
        return self._id_565C;

    return 0;
}

_id_BE99( var_0, var_1, var_2, var_3 )
{
    return scripts\asm\asm_bb::_id_2956( "run" );
}

_id_BE9A( var_0, var_1, var_2, var_3 )
{
    if ( _id_9F87() )
        return 1;

    return scripts\asm\asm_bb::_id_2956( "sprint" );
}

_id_BE9B()
{
    if ( _id_9F87() && _id_1005C() && !_id_8C13() )
        return 1;

    return 0;
}

_id_BE97()
{
    if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_ECF5 ) )
        return !scripts\engine\utility::_id_9CEE( self._id_8C14 );

    return 0;
}

_id_BE95( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_AD2B );
}

_id_BE96()
{
    if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_EDBB ) )
        return !scripts\engine\utility::_id_9CEE( self._id_8C12 );

    return 0;
}

_id_1009C()
{
    if ( isdefined( self._id_AD2B ) )
        return 0;
    else
        return 1;
}

_id_BCCD()
{
    if ( isdefined( self.agent_type ) && self.agent_type == "zombie_brute" )
        return 0;

    var_0 = isdefined( self._id_2303._id_4B12 ) && self._id_2303._id_4B12 != self._id_1198._id_BD23;

    if ( var_0 )
        return 1;
    else
        return 0;
}

_id_9E0F()
{
    return scripts\engine\utility::_id_9CEE( self._id_2B0F );
}

_id_9F87()
{
    return scripts\engine\utility::_id_9CEE( self._id_9CDD );
}

_id_1005C()
{
    return scripts\engine\utility::_id_9CEE( self._id_FF78 );
}

_id_8C13()
{
    return scripts\engine\utility::_id_9CEE( self._id_8C13 );
}

_id_9D8C( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_9CDD ) )
        return 1;

    return 0;
}

_id_9D94( var_0, var_1, var_2, var_3 )
{
    if ( self.agent_type == "zombie_cop" )
    {
        if ( getdvarint( "scr_dont_use_cop_anims" ) != 0 )
            return 0;

        return 1;
    }

    return 0;
}

_id_1005E( var_0, var_1, var_2, var_3 )
{
    if ( !scripts\engine\utility::_id_9CEE( self._id_9CEC ) && !scripts\engine\utility::_id_9CEE( self._id_4C87 ) )
        return _id_0F72::_id_5F70();

    return 0;
}

_id_10046( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_E5C9 );
}

choosefacemelteranim( var_0, var_1, var_2, var_3 )
{
    self notify( "facemelter_launch_chosen" );

    if ( scripts\engine\utility::_id_9CEE( self._id_565C ) )
        return "prone_launch";

    return "launch";
}

_id_6A79( var_0, var_1, var_2, var_3 )
{
    self notify( "ready_to_launch" );
}

_id_10042( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_5624 );
}

choosedischordanim( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_565C ) )
        return "prone_spin";

    return "spin";
}

_id_5626( var_0, var_1, var_2, var_3 )
{
    self notify( "ready_to_spin" );
}

_id_10049( var_0, var_1, var_2, var_3 )
{
    return scripts\engine\utility::_id_9CEE( self._id_8C5F );
}

chooseheadcutteranim( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_565C ) )
        return "prone_expand_head";

    return "expand_head";
}

_id_10053( var_0, var_1, var_2, var_3 )
{
    return 0;
}

_id_D532( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_EF64 = 1;
    self _meth_828A( "noclip" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_5 = 0.01;
    thread scripts\asm\asm_mp::_id_2365( var_0, var_1, var_2, var_4, var_5 );

    if ( isdefined( level._id_1070C ) )
        self [[ level._id_1070C ]]();

    wait 0.5;
    self._id_8C12 = 1;
}

_id_D4DB( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_EF64 = 1;
    self _meth_828A( "noclip" );
    thread _id_0F3C::_id_CEA8( var_0, var_1, var_2, var_3 );
    wait 1;
    level thread [[ level._id_B652 ]]( self );
}

_id_D571( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_EF64 = 1;
    self._id_9CEC = 1;
    self.vignette_nocorpse = 1;
    self._id_0180 = 1;
    self _meth_828A( "noclip" );
    scripts\anim\notetracks_mp::_id_F85E( 1, "play_vignette_anim" );
    self._id_8C14 = 0;

    if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_ABA7 ) )
        thread _id_C3C6( var_0, var_1 );

    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_5 = 1.0;
    var_6 = self._id_5793;
    self._id_5793 = 1;
    scripts\asm\asm_mp::_id_2365( var_0, var_1, var_2, var_4, var_5 );
    self._id_5793 = var_6;
    self _meth_828A( "gravity" );
    self._id_EF64 = 0;
    self._id_0180 = 0;
    scripts\anim\notetracks_mp::_id_F85E( 0, "play_vignette_anim" );
    self.vignette_nocorpse = undefined;
    self._id_8C14 = 1;
    self notify( "intro_vignette_done" );
}

_id_11702( var_0, var_1, var_2 )
{
    self _meth_828A( "gravity" );
    self._id_EF64 = 0;
    self._id_8C14 = 1;
    self._id_9CEC = undefined;
    self.vignette_nocorpse = undefined;
}

_id_ABA5( var_0, var_1 )
{
    self endon( var_1 + "_finished" );
    var_2 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_3 = self getanimentry( var_1, var_2 );
    var_4 = getanimlength( var_3 );
    var_5 = getnotetracktimes( var_3, "fall" );
    var_6 = getnotetracktimes( var_3, "land" );
    var_7 = getmovedelta( var_3, var_5[0], var_6[0] );
    self scragentsetanimscale( 1.0, 1.0 );
    var_8 = 1;
    scripts\anim\notetracks_mp::_id_CED3( var_1, var_2, var_8, var_1, "fall", undefined );

    if ( var_7 == ( 0, 0, 0 ) )
    {
        self _meth_828A( "gravity" );
        return;
    }

    var_9 = scripts\engine\utility::_id_5D14( self.origin, 0, -2000 );
    var_9 = self._id_02AE._id_ABA6;
    var_10 = var_9 - self.origin;
    var_11 = var_10[2] / var_7[2];
    var_12 = var_4 * var_6[0] - var_4 * var_5[0];
    var_13 = var_12 * var_11;

    if ( var_11 >= 1 )
    {
        self scragentsetanimscale( 1, var_11 );
        var_8 = 1 / var_11;
        scripts\anim\notetracks_mp::_id_CED3( var_1, var_2, var_8, var_1, "land", undefined );
        var_8 = 1;
        self _meth_828A( "gravity" );
        self scragentsetanimscale( 1, 1 );
        scripts\anim\notetracks_mp::_id_CED3( var_1, var_2, var_8, var_1, "end", undefined );
    }
}

_id_C3C6( var_0, var_1 )
{
    self endon( var_1 + "_finished" );
    var_2 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_3 = self getanimentry( var_1, var_2 );
    var_4 = getanimlength( var_3 );
    var_5 = getnotetracktimes( var_3, "fall" );
    var_6 = getnotetracktimes( var_3, "land" );
    var_7 = getmovedelta( var_3, var_5[0], var_6[0] );
    scripts\anim\notetracks_mp::_id_1384C( var_1, "fall", var_1, var_2, undefined );

    if ( var_7 == ( 0, 0, 0 ) )
    {
        self _meth_828A( "gravity" );
        return;
    }

    var_8 = scripts\engine\utility::_id_5D14( self.origin, 0, -2000 );
    var_8 = self._id_02AE._id_ABA6;
    var_9 = var_8 - self.origin;
    var_10 = var_9[2] / var_7[2];
    var_11 = var_4 * var_6[0] - var_4 * var_5[0];
    var_12 = var_11 * var_10;

    if ( var_10 >= 1 )
    {
        self scragentsetanimscale( 1, var_10 );
        scripts\anim\notetracks_mp::_id_1384C( var_1, "land", var_1, var_2, undefined );
        self _meth_828A( "gravity" );
        self scragentsetanimscale( 1, 1 );
    }
}

_id_D4AC( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_ABA7 ) )
        return 1;

    return 0;
}

_id_D544( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    _id_0F3C::_id_CEA8( var_0, var_1, var_2, var_3 );
    self._id_8C13 = 1;
}

_id_129A3( var_0 )
{
    self._id_6622 = 1;
    self._id_9CDD = 1;
    self._id_C026 = 1;
    self._id_FF78 = var_0;
    self.health = _id_3725();
    self._id_0180 = 0;
    self setscriptablepartstate( "eyes", "eye_glow_off" );
    self detachall();
    var_1 = [ "park_clown_zombie", "park_clown_zombie_blue", "park_clown_zombie_green", "park_clown_zombie_orange", "park_clown_zombie_yellow" ];
    var_2 = scripts\engine\utility::_id_DC6B( var_1 );
    self setmodel( var_2 );
    scripts\asm\asm_bb::_id_2968( "sprint" );

    if ( isdefined( level._id_111BA ) )
        self _meth_84E6( level._id_111BA );
}

_id_3725()
{
    var_0 = 200;

    switch ( level._id_1096B )
    {
        case 0:
            var_0 = 100;
            break;
        case 1:
            var_0 = 400;
            break;
        case 2:
            var_0 = 900;
            break;
        case 3:
            var_0 = 1300;
            break;
        default:
            var_0 = 1600;
    }

    return var_0;
}

_id_10057( var_0, var_1, var_2, var_3 )
{
    if ( scripts\anim\notetracks_mp::_id_9F77() )
        return 0;

    if ( self._id_1B03 == "traverse" )
        return 0;

    if ( isdefined( var_2 ) && isexplosivedamagemod( var_2 ) && var_0 >= 350 )
    {
        if ( isdefined( var_1 ) && !issubstr( var_1, "g18pap" ) )
            return 1;
    }

    if ( isdefined( var_2 ) && var_2 == "MOD_MELEE" )
        return 1;

    if ( isdefined( self._id_11190 ) )
    {
        if ( self._id_11190 > gettime() )
            return 1;
        else
        {
            self._id_11190 = undefined;
            self._id_11196 = undefined;
        }
    }

    if ( scripts\engine\utility::_id_9CEE( self._id_11196 ) )
        return 1;

    if ( isdefined( self._id_10058 ) && [[ self._id_10058 ]]() )
        return 1;

    return 0;
}

_id_FFE7()
{
    if ( !_id_0F3A::_id_FFE6() )
        return 0;

    if ( isdefined( self._id_4B26 ) )
        return 0;

    if ( isdefined( self._id_6658 ) )
        return 0;

    return 1;
}

_id_10092( var_0, var_1, var_2, var_3 )
{
    if ( !_id_FFE7() )
        return 0;

    if ( !isdefined( self._id_0233 ) )
        return 0;

    var_4 = scripts\asm\asm::_id_233A( var_0 );

    if ( !scripts\asm\asm::_id_232B( var_4, "cover_approach" ) )
        return 0;

    if ( !isdefined( self._id_20EE ) )
        return 0;

    if ( isdefined( self._id_9E0C ) && self._id_9E0C )
    {
        self._id_20EE = undefined;
        return 0;
    }

    if ( !isdefined( var_3 ) || var_3.size < 1 )
        var_5 = "Exposed";
    else
        var_5 = var_3[0];

    if ( !_id_0F3A::_id_9D4C( var_0, var_1, var_2, var_5 ) )
        return 0;

    self._id_2303._id_11068 = _id_3724( var_0, var_2, var_5 );

    if ( !isdefined( self._id_2303._id_11068 ) )
        return 0;

    return 1;
}

_id_3724( var_0, var_1, var_2 )
{
    var_3 = _id_0F3A::_id_7DD6();

    if ( isdefined( var_3 ) )
        var_4 = var_3.origin;
    else
        var_4 = self._id_0233;

    var_5 = _id_0F3A::_id_7E54();
    var_6 = self._id_20EE;
    var_7 = vectortoangles( var_6 );

    if ( isdefined( var_5 ) )
        var_8 = angleclamp180( var_5[1] - var_7[1] );
    else if ( isdefined( var_3 ) && var_3.type != "Path" )
        var_8 = angleclamp180( var_3.angles[1] - var_7[1] );
    else
    {
        var_9 = var_4 - self.origin;
        var_10 = vectortoangles( var_9 );
        var_8 = angleclamp180( var_10[1] - var_7[1] );
    }

    var_11 = var_1;
    var_12 = _id_0F3A::_id_8177();
    var_13 = var_4 - self.origin;
    var_14 = lengthsquared( var_13 );
    var_15 = 0;
    var_16 = self getanimentry( var_11, var_15 );
    var_17 = getmovedelta( var_16 );
    var_18 = _func_078( var_16 );
    var_19 = length( self _meth_816B() );
    var_20 = var_19 * 0.053;
    var_21 = length( var_13 );
    var_22 = length( var_17 );

    if ( abs( var_21 - var_22 ) > var_20 )
        return undefined;

    if ( var_14 < lengthsquared( var_17 ) )
        return undefined;

    var_23 = _id_0F3A::_id_36D9( var_12._id_D699, var_12._id_0130[1], var_17, var_18 );
    var_24 = getclosestpointonnavmesh( var_12._id_D699, self );
    var_25 = _id_0F3A::_id_36D9( var_24, var_12._id_0130[1], var_17, var_18 );
    var_26 = self _meth_84AC();
    var_27 = _func_272( var_26, var_24, self, 1 );
    var_28 = var_27["fraction"] >= 0.9 || _func_2AC( var_26, var_24, self );

    if ( !var_28 )
    {
        var_29 = self _meth_841E();
        var_28 = var_29 < distance( var_26, var_24 ) + 8.0;
    }

    if ( var_28 )
    {
        var_30 = spawnstruct();
        var_30._id_11060 = var_15;
        var_30._id_003F = 0;
        var_30._id_02C5 = var_23;
        var_30._id_003E = var_18;
        var_30.angles = var_12.angles;
        var_30._id_0130 = var_12._id_0130;
        var_30._id_11069 = var_17;
        var_30._id_22ED = var_4;
        return var_30;
    }

    return undefined;
}

_id_D563( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );
    var_4 = self _meth_8148();
    var_5 = self _meth_8146();
    self _meth_828A( "noclip" );
    self orientmode( "face angle abs", var_4.angles );
    self _meth_8281( "anim deltas" );
    self scragentsetanimscale( 1.0, 1.0 );
    var_6 = var_5 - var_4.origin;
    var_7 = self getanimentry( var_1, 0 );
    var_8 = getanimlength( var_7 );
    var_9 = getmovedelta( var_7 );
    var_10 = length( var_9 );
    var_11 = length( var_5 - self.origin );
    var_12 = var_8 * ( var_11 / var_10 );
    self _meth_827B( self.origin, var_5, var_12 );
    self setanimstate( var_1, 0 );
    wait( var_12 );
    self _meth_828A( "gravity" );
    self notify( "traverse_end" );
    _id_11701( var_0, var_1 );
}

_id_3F08( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        return _id_0F3C::_id_3EF4( var_0, var_1, var_2 );

    switch ( self._id_1198._id_BD23 )
    {
        case "walk":
        case "slow_walk":
            var_2 = var_2 + "_walk";
            break;
        case "sprint":
        case "run":
            var_2 = var_2 + "_run";
            break;
        default:
            var_2 = var_2 + "_walk";
            break;
    }

    return scripts\asm\asm::_id_2358( var_1, var_2 );
}

_id_D567( var_0, var_1, var_2, var_3 )
{
    scripts\anim\notetracks_mp::_id_F85E( 1, "DoTraverse" );
    var_4 = self._id_5793;
    self._id_5793 = 1;
    _id_5AC4( var_0, var_1, var_2, var_3 );
    self._id_5793 = var_4;
    self scragentsetanimscale( 1, 1 );
    scripts\anim\notetracks_mp::_id_F85E( 0, "Traverse end_script" );
    self._id_8C35 = 1;
    self._id_126CB = undefined;
}

_id_5AC4( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );
    var_4 = self _meth_8148();
    var_5 = self _meth_8146();
    self._id_6367 = var_5;

    if ( !isdefined( var_4 ) )
        return;

    if ( !isdefined( var_5 ) )
        return;

    self._id_6378 = var_5;
    self._id_126CB = vectornormalize( var_5 - var_4.origin );
    var_6 = undefined;
    var_6 = var_4._id_0048;

    if ( var_1 == "traverse_external" )
        var_6 = var_1;

    if ( _id_BE90( var_6 ) )
        var_6 = "crawling_" + var_6;

    if ( !isdefined( var_6 ) )
        return;

    self._id_9CEC = 1;
    var_7 = scripts\asm\asm_mp::_id_2337( var_0, var_6 );
    var_8 = var_5 - var_4.origin;
    var_9 = ( var_8[0], var_8[1], 0 );
    var_10 = vectortoangles( var_9 );
    var_11 = issubstr( var_6, "jump_across" );
    var_12 = var_6 == "traverse_boost" && ( self._id_1096F == "humanoid" || self._id_1096F == "zombie" );
    self orientmode( "face angle abs", var_10 );
    self _meth_8281( "anim deltas" );
    var_13 = self getanimentry( var_6, var_7 );
    var_14 = "flex_height_up_start";
    var_15 = getnotetracktimes( var_13, var_14 );

    if ( var_15.size == 0 )
    {
        var_14 = "flex_height_start";
        var_15 = getnotetracktimes( var_13, var_14 );

        if ( var_15.size == 0 )
        {
            var_14 = "traverse_jump_start";
            var_15 = getnotetracktimes( var_13, var_14 );
        }
    }

    var_16 = "flex_height_up_end";
    var_17 = getnotetracktimes( var_13, var_16 );

    if ( var_17.size == 0 )
    {
        var_16 = "flex_height_end";
        var_17 = getnotetracktimes( var_13, var_16 );

        if ( var_17.size == 0 )
        {
            var_16 = "traverse_jump_end";
            var_17 = getnotetracktimes( var_13, var_16 );
        }
    }

    var_18 = "highest_point";
    var_19 = getnotetracktimes( var_13, var_18 );
    var_20 = "flex_height_down_start";
    var_21 = getnotetracktimes( var_13, var_20 );
    var_22 = "flex_height_down_end";
    var_23 = getnotetracktimes( var_13, var_22 );
    var_24 = "crawler_early_stop";
    var_25 = getnotetracktimes( var_13, var_24 );
    var_26 = getnotetracktimes( var_13, "code_move" );

    if ( var_26.size > 0 )
        var_27 = getmovedelta( var_13, 0, var_26[0] );
    else
        var_27 = getmovedelta( var_13, 0, 1 );

    var_28 = scripts\anim\notetracks_mp::_id_7DC9( var_8, var_27 );
    var_29 = animhasnotetrack( var_13, "ignoreanimscaling" );

    if ( var_29 )
        var_28._id_13E2B = 1.0;

    self _meth_828A( "noclip" );
    var_30 = self _meth_8145();

    if ( isdefined( var_30 ) && isdefined( var_30._id_0334 ) )
    {
        self.endnode = var_30;

        if ( var_19.size > 0 )
        {
            scripts\anim\notetracks_mp::_id_5AC1( var_6 + "_norestart", var_7, var_13, "traverse", var_14, var_18, 0, ::_id_13FAE );
            var_31 = scripts\engine\utility::_id_817E( self.endnode._id_0334, "targetname" );

            if ( isdefined( var_31.script_noteworthy ) && var_31.script_noteworthy == "continue_flex_height" )
                scripts\anim\notetracks_mp::_id_5AC1( var_6 + "_norestart", var_7, var_13, "traverse", var_18, var_16, 1, ::_id_13FAE );

            self scragentsetanimscale( 1.0, 1.0 );
            scripts\anim\notetracks_mp::_id_CED5( var_6 + "_norestart", var_7, "traverse", "end", ::_id_13FAE );
        }
        else if ( var_21.size == 0 )
        {
            scripts\anim\notetracks_mp::_id_5AC1( var_6 + "_norestart", var_7, var_13, "traverse", var_14, var_16, 0, ::_id_13FAE );
            self scragentsetanimscale( 1.0, 1.0 );
            scripts\anim\notetracks_mp::_id_CED5( var_6 + "_norestart", var_7, "traverse", "end", ::_id_13FAE );
        }
        else
        {
            var_31 = scripts\engine\utility::_id_817E( self.endnode._id_0334, "targetname" );
            var_32 = var_21[0];
            scripts\anim\notetracks_mp::_id_5AC2( var_6 + "_norestart", var_7, "traverse", var_13, var_14, var_16, var_31.origin, var_32, ::_id_13FAE );

            if ( var_21[0] - var_17[0] > 0.02 )
            {
                self scragentsetanimscale( 1.0, 1.0 );
                scripts\anim\notetracks_mp::_id_CED5( var_6 + "_norestart", var_7, "traverse", var_20, ::_id_13FAE );
            }

            var_31 = self.endnode;
            var_32 = var_23[0];
            scripts\anim\notetracks_mp::_id_5AC2( var_6 + "_norestart", var_7, "traverse", var_13, var_20, var_22, var_31.origin, var_32, ::_id_13FAE );
            self scragentsetanimscale( 1.0, 1.0 );

            if ( var_25.size == 0 || !scripts\engine\utility::_id_9CEE( self._id_565C ) )
                scripts\anim\notetracks_mp::_id_CED5( var_6 + "_norestart", var_7, "traverse", "end", ::_id_13FAE );
        }

        self.endnode = undefined;
    }
    else if ( var_21.size > 0 && var_23.size > 0 && self.agent_type != "zombie_brute" )
    {
        self scragentsetanimscale( 1.0, 1.0 );
        scripts\anim\notetracks_mp::_id_CED5( var_6 + "_norestart", var_7, "traverse", "end", ::_id_13FAE );
    }
    else if ( var_11 && abs( var_8[2] ) < 48 )
    {
        var_33 = getanimlength( var_13 );
        var_34 = var_15[0] * var_33;
        var_35 = var_17[0] * var_33;
        self scragentsetanimscale( 1, 1 );
        scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, self._id_126E8, "traverse", var_14 );
        self scragentsetanimscale( 1, 0 );
        childthread _id_126D8( var_4.origin[2], var_5[2], ( var_35 - var_34 ) / self._id_126E8 );
        scripts\anim\notetracks_mp::_id_CED3( var_6 + "_norestart", var_7, self._id_126E8, "traverse", var_16 );
        self scragentsetanimscale( 1, 1 );
        scripts\anim\notetracks_mp::_id_CED3( var_6 + "_norestart", var_7, self._id_126E8, "traverse" );
    }
    else if ( var_8[2] > 16 )
    {
        if ( var_27[2] > 0 )
        {
            if ( var_12 )
            {
                self scragentsetanimscale( var_28._id_13E2B, var_28.z );
                var_36 = clamp( 2 / var_28.z, 0.5, 1 );

                if ( var_17.size > 0 )
                {
                    scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, var_36 * self._id_126E8, "traverse", var_16 );
                    scripts\anim\notetracks_mp::_id_F85E( 0, "DoTraverse" );
                    var_37 = var_6 + "_norestart";
                    scripts\anim\notetracks_mp::_id_F2B1( var_37, var_7, self._id_126E8 );
                    scripts\anim\notetracks_mp::_id_1384D( "traverse", "code_move" );
                }
                else
                    scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, self._id_126E8, "traverse" );

                self scragentsetanimscale( 1, 1 );
            }
            else if ( var_15.size > 0 )
            {
                var_28._id_13E2B = 1;
                var_28.z = 1;

                if ( !var_29 && length2dsquared( var_9 ) < 0.64 * length2dsquared( var_27 ) )
                    var_28._id_13E2B = 0.4;

                self scragentsetanimscale( var_28._id_13E2B, var_28.z );
                scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, self._id_126E8, "traverse", var_14 );
                var_38 = getmovedelta( var_13, 0, var_15[0] );
                var_39 = getmovedelta( var_13, 0, var_17[0] );
                var_28._id_13E2B = 1;
                var_28.z = 1;
                var_40 = var_5 - self.origin;
                var_41 = var_27 - var_38;

                if ( !var_29 && length2dsquared( var_40 ) < 0.5625 * length2dsquared( var_41 ) )
                    var_28._id_13E2B = 0.75;

                var_42 = var_27 - var_39;
                var_43 = ( var_42[0] * var_28._id_13E2B, var_42[1] * var_28._id_13E2B, var_42[2] * var_28.z );
                var_44 = rotatevector( var_43, var_10 );
                var_45 = var_5 - var_44;
                var_46 = var_39 - var_38;
                var_47 = rotatevector( var_46, var_10 );
                var_48 = var_45 - self.origin;
                var_49 = var_28;
                var_28 = scripts\anim\notetracks_mp::_id_7DC9( var_48, var_47, 1 );

                if ( var_29 )
                    var_28._id_13E2B = 1.0;

                if ( var_48[2] <= 0 )
                    var_28.z = 0.0;

                self scragentsetanimscale( var_28._id_13E2B, var_28.z );
                scripts\anim\notetracks_mp::_id_1384D( "traverse", var_16 );
                scripts\anim\notetracks_mp::_id_F85E( 0, "DoTraverse" );
                var_28 = var_49;
                self scragentsetanimscale( var_28._id_13E2B, var_28.z );
                scripts\anim\notetracks_mp::_id_1384D( "traverse", "code_move" );
            }
            else
            {
                self scragentsetanimscale( var_28._id_13E2B, var_28.z );
                scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, self._id_126E8, "traverse" );
            }
        }
        else
            scripts\anim\notetracks_mp::_id_5AC1( var_6 + "_norestart", var_7, var_13, "traverse", "flex_height_start", "flex_height_end", 1, ::_id_13FAE );
    }
    else if ( abs( var_8[2] ) < 16 || var_27[2] == 0 )
    {
        self scragentsetanimscale( var_28._id_13E2B, var_28.z );
        var_36 = clamp( 2 / var_28.z, 0.5, 1 );

        if ( var_17.size > 0 )
        {
            scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, var_36 * self._id_126E8, "traverse", var_16 );
            scripts\anim\notetracks_mp::_id_F85E( 0, "DoTraverse" );
            var_37 = var_6 + "_norestart";
            scripts\anim\notetracks_mp::_id_F2B1( var_37, var_7, self._id_126E8 );
            scripts\anim\notetracks_mp::_id_1384D( "traverse", "code_move" );
        }
        else
            scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, self._id_126E8, "traverse" );

        self scragentsetanimscale( 1, 1 );
    }
    else if ( var_27[2] < 0 )
    {
        self scragentsetanimscale( var_28._id_13E2B, var_28.z );
        var_36 = clamp( 2 / var_28.z, 0.5, 1 );
        var_51 = var_6 + "_norestart";

        if ( var_15.size > 0 )
        {
            scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, self._id_126E8, "traverse", var_14 );
            var_6 = var_51;
        }

        if ( var_17.size > 0 )
        {
            scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, var_36 * 1.0, "traverse", var_16 );
            scripts\anim\notetracks_mp::_id_F2B1( var_51, var_7, self._id_126E8 );

            if ( animhasnotetrack( var_13, "removestatelock" ) )
                scripts\anim\notetracks_mp::_id_1384D( "traverse", "removestatelock" );

            scripts\anim\notetracks_mp::_id_F85E( 0, "DoTraverse" );
            scripts\anim\notetracks_mp::_id_1384D( "traverse", "code_move" );
        }
        else
            scripts\anim\notetracks_mp::_id_CED3( var_6, var_7, 1.0, "traverse" );

        self scragentsetanimscale( 1, 1 );
    }
    else
    {

    }

    _id_ABB8();
    self _meth_828A( "gravity" );
    self._id_9CEC = undefined;
    self notify( "traverse_end" );
    _id_11701( var_0, var_1 );
}

_id_126D8( var_0, var_1, var_2 )
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );
    var_3 = gettime();

    for (;;)
    {
        var_4 = ( gettime() - var_3 ) / 1000.0;
        var_5 = var_4 / var_2;

        if ( var_5 > 1.0 )
            break;

        var_6 = _id_0F74::_id_AB6F( var_5, var_0, var_1 );
        self setorigin( ( self.origin[0], self.origin[1], var_6 ), 0 );
        wait 0.05;
    }
}

_id_BE90( var_0 )
{
    if ( self._id_565C )
        return 1;

    return 0;
}

_id_ABB8()
{
    var_0 = 0.1;
    var_1 = self._id_6378;
    var_2 = var_1[2];
    var_3 = self.origin[2];

    if ( var_3 < var_2 )
        self setorigin( ( self.origin[0], self.origin[1], var_2 + var_0 ), 0 );
}

_id_11706( var_0, var_1, var_2 )
{
    self._id_9CEC = undefined;
}

_id_11701( var_0, var_1 )
{
    var_2 = anim._id_2303[var_0]._id_10E2F[var_1];
    var_3 = undefined;

    if ( isdefined( var_2._id_116FB ) )
    {
        if ( isarray( var_2._id_116FB[0] ) )
            var_3 = var_2._id_116FB[0];
        else
            var_3 = var_2._id_116FB;
    }

    scripts\asm\asm::_id_2388( var_0, var_1, var_2, var_2._id_116FB );
    scripts\asm\asm::_id_238A( var_0, var_3, 0.2, undefined, undefined, undefined );
    self notify( "killanimscript" );
}

_id_D4E3( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    scripts\asm\asm::_id_237B( self._id_BCE4 );
    self._id_2303._id_4B12 = var_3;
    _id_0F3C::_id_D4DD( var_0, var_1, var_2, var_3 );
    scripts\asm\asm::_id_237B( 1 );
}

_id_CEAE( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    _id_0F3A::_id_CEAA( var_0, var_1, var_2, var_3 );
}

_id_CEB7( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    scripts\asm\asm::_id_237B( self._id_BCE4 );
    _id_0F3B::_id_CEB5( var_0, var_1, var_2, var_3 );
    scripts\asm\asm::_id_237B( 1 );
}

_id_D515( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    scripts\asm\asm::_id_237B( self._id_BCE4 );
    _id_0F3B::_id_D514( var_0, var_1, var_2, var_3 );
    scripts\asm\asm::_id_237B( self._id_BCE4 );
}

_id_D538( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    scripts\asm\asm::_id_237B( self._id_BCE4 );

    if ( _id_0F74::_id_8252() < 2 )
    {
        var_4 = level._id_BCE6["run"][1];
        var_4 = var_4 + ( self._id_BCE4 - level._id_BCE6["sprint"][0] );
        scripts\asm\asm::_id_237B( var_4 );
    }

    _id_0F3B::_id_D514( var_0, var_1, var_2, var_3 );
    scripts\asm\asm::_id_237B( self._id_BCE4 );
}

_id_13FAE( var_0, var_1, var_2, var_3 )
{
    switch ( var_0 )
    {
        case "apply_physics":
            self _meth_828A( "gravity" );
            break;
        default:
            break;
    }
}

_id_7389( var_0, var_1, var_2, var_3 )
{
    var_1 = self._id_7387;
    level thread [[ level._id_7456 ]]( self );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );

    if ( scripts\engine\utility::_id_9CEE( self.activated_slomo_sphere ) )
        scripts\asm\asm_mp::_id_2365( var_0, var_1, 0.1, var_4, 0.2 );
    else if ( scripts\engine\utility::_id_9CEE( self.activated_venomx_sphere ) )
        scripts\asm\asm_mp::_id_2365( var_0, var_1, 0.1, var_4, 0.2 );
    else
        scripts\asm\asm_mp::_id_2365( var_0, var_1, 0.1, var_4, 0.001 );
}

_id_3E12( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9E0C ) )
    {
        if ( isdefined( var_3 ) )
            self._id_7387 = var_3;
        else
            self._id_7387 = scripts\asm\asm::_id_233A( var_0 );

        return 1;
    }

    return 0;
}

_id_3E18( var_0, var_1, var_2, var_3 )
{
    if ( !scripts\engine\utility::_id_9CEE( self._id_9E0C ) )
    {
        self._id_7387 = undefined;
        return 1;
    }

    return 0;
}

_id_631D( var_0, var_1, var_2, var_3 )
{
    self._id_7387 = undefined;
    level thread [[ level._id_11768 ]]( self );
}

_id_A013()
{
    if ( self _meth_84B9( 200 ) )
        return 1;

    return 0;
}

_id_38B2( var_0, var_1, var_2 )
{
    var_3 = 0.5;
    var_4 = getnotetracktimes( var_0, "turn_extent" );

    if ( var_4.size == 1 )
        var_3 = var_4[0];
    else
    {
        var_5 = getnotetracktimes( var_0, "code_move" );

        if ( var_5.size == 1 )
            var_3 = var_5[0] * 0.5;
    }

    var_6 = 1.0;
    var_7 = getnotetracktimes( var_0, "finish" );

    if ( var_7.size == 0 )
        var_7 = getnotetracktimes( var_0, "end" );

    if ( var_7.size == 1 )
        var_6 = var_7[0];

    var_8 = getmovedelta( var_0, 0.0, var_3 );
    var_9 = getmovedelta( var_0, 0.0, var_6 );
    var_10 = self.origin;
    var_11 = rotatevector( var_8, var_1 ) + var_10;
    var_12 = rotatevector( var_9, var_1 ) + var_10;

    if ( !scripts\anim\notetracks_mp::_id_38D0( var_11, var_12, 0 ) )
        return 0;

    var_13 = self.radius;

    if ( !var_2 )
        var_13 = self.radius / 2;

    if ( !scripts\anim\notetracks_mp::_id_38D0( var_10, var_11, 0, var_13 ) )
        return 0;

    return 1;
}

_id_6BC6( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9BB0 ) )
        return 1;

    return 0;
}

_id_9DC8( var_0, var_1, var_2, var_3 )
{
    if ( _id_6BC6( var_0, var_1, var_2, var_3 ) )
        return 0;

    self._id_2CA7 = undefined;
    return 1;
}

_id_CEF3( var_0, var_1, var_2, var_3 )
{
    self orientmode( "face angle abs", self._id_5273 );
    scripts\asm\asm_mp::_id_235F( var_0, var_1, var_2, 1, 0 );
}

_id_3EBE( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_2CA7 ) )
        return self._id_2CA7;

    if ( self._id_565C )
    {
        _id_F2E5();
        self._id_2CA7 = scripts\asm\asm::_id_2358( var_1, "boombox_dance_crawl_" + level._id_2C9A );
        return self._id_2CA7;
    }
    else if ( scripts\engine\utility::_id_9CEE( self._id_9B6E ) )
    {
        self._id_2CA7 = scripts\asm\asm::_id_2358( var_1, "disco_dance_center_" + randomintrange( 0, 4 ) );
        return self._id_2CA7;
    }
    else if ( scripts\engine\utility::_id_9CEE( self.fridge_trap_marked ) )
    {
        self._id_2CA7 = scripts\asm\asm::_id_2358( var_1, "fridge_lured_anim_" + randomintrange( 0, 4 ) );
        return self._id_2CA7;
    }
    else
    {
        _id_F2E6();
        self._id_2CA7 = scripts\asm\asm::_id_2358( var_1, "boombox_dance_" + level._id_2C9B );
        return self._id_2CA7;
    }
}

_id_F2E6()
{
    if ( !isdefined( level._id_2C9B ) )
        level._id_2C9B = 0;

    level._id_2C9B++;

    if ( level._id_2C9B > 5 )
        level._id_2C9B = 0;
}

_id_F2E5()
{
    if ( !isdefined( level._id_2C9A ) )
        level._id_2C9A = 0;

    level._id_2C9A++;

    if ( level._id_2C9A > 1 )
        level._id_2C9A = 0;
}

_id_BE8D( var_0, var_1, var_2, var_3 )
{
    return 0;
}

_id_3EFE( var_0, var_1, var_2 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_12F77 ) )
        return scripts\asm\asm::_id_2358( var_1, "upgraded" );
    else
        return scripts\asm\asm::_id_2358( var_1, "normal" );
}

_id_98DC( var_0, var_1, var_2, var_3 )
{
    return 0;
}

_id_BE94( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_6658 ) )
        return 0;

    if ( !scripts\engine\utility::_id_9CEE( self._id_2BE7 ) || scripts\engine\utility::_id_9CEE( self._id_6622 ) )
        return 0;

    if ( !isdefined( level._id_7088 ) )
        return 0;

    if ( !isdefined( self._id_429D ) )
    {
        self._id_429D = [[ level._id_7088 ]]( self.origin );

        if ( !isdefined( self._id_429D ) )
        {
            iprintlnbold( "NO ENTRANCE FOUND FOR ZOMBIE AT POS: " + self.origin );
            return 0;
        }
    }
    else if ( !scripts\asm\asm_bb::_id_2955() )
    {
        self._id_429D = _id_0D4D::_id_7B14( self.origin, self._id_429D );

        if ( !isdefined( self._id_429D ) )
        {
            self._id_54CB = 1;
            self _meth_80B0( self.health + 950, self.origin, self, self, "MOD_SUICIDE" );
            return 0;
        }
    }

    self _meth_8287( 4 );
    self _meth_8286( self._id_429D.origin );

    if ( !scripts\asm\asm_bb::_id_2955() )
        return 0;

    self._id_6658 = self._id_429D;
    self._id_429D = undefined;
    return 1;
}

_id_3ED7( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_662F ) )
        return self._id_662F;

    var_3 = self._id_24CA;
    var_4 = undefined;

    if ( !isdefined( var_3._id_EDF9 ) )
        var_4 = "mid";
    else
        var_4 = var_3._id_EDF9;

    if ( scripts\engine\utility::_id_9CEE( var_3._id_2A9F ) )
        var_4 = var_4 + "_extended";

    self._id_662F = scripts\asm\asm::_id_2358( var_1, var_4 );
    return self._id_662F;
}

_id_3EBA( var_0, var_1, var_2 )
{
    var_3 = self._id_24CA;
    var_4 = "standing_";

    if ( _id_BE92() )
        var_4 = "crawling_";

    if ( !isdefined( var_3._id_EDF9 ) )
        var_4 = var_4 + "mid";
    else
        var_4 = var_4 + var_3._id_EDF9;

    return scripts\asm\asm::_id_2358( var_1, var_4 );
}

_id_116E8( var_0, var_1, var_2 )
{
    if ( isdefined( self._id_BF2F ) )
    {
        var_3 = _id_0D4D::_id_7872( self._id_6658, self._id_BF2F - 1 );

        if ( var_3 == "destroying" )
            _id_0D4D::_id_F2E3( self._id_6658, self._id_BF2F - 1, "boarded" );

        self._id_BF2F = undefined;
    }
}

_id_3ECF( var_0, var_1, var_2 )
{
    var_3 = self._id_24CA;

    if ( scripts\engine\utility::_id_9CEE( self._id_9E0C ) )
    {
        if ( isdefined( self._id_BF2F ) )
        {
            _id_0D4D::_id_F2E3( self._id_6658, self._id_BF2F - 1, "boarded" );
            self._id_BF2F = undefined;
        }

        return self._id_A93A;
    }

    if ( self._id_565C )
    {
        if ( !isdefined( var_3._id_EDF9 ) )
        {
            self._id_A93A = scripts\asm\asm::_id_2358( var_1, "crawling" );
            return self._id_A93A;
        }
        else
        {
            var_4 = _id_F496();
            var_5 = "crawling_" + var_3._id_EDF9 + "_" + var_4;
            self._id_A93A = scripts\asm\asm::_id_2358( var_1, var_5 );
            return self._id_A93A;
        }
    }
    else if ( !isdefined( var_3._id_EDF9 ) )
    {
        self._id_A93A = scripts\asm\asm::_id_2358( var_1, "standing" );
        return self._id_A93A;
    }
    else
    {
        while ( isdefined( self._id_BF2F ) )
            wait 0.05;

        var_4 = _id_F496();
        var_5 = "standing_" + var_3._id_EDF9 + "_" + var_4;
        self._id_A93A = scripts\asm\asm::_id_2358( var_1, var_5 );
        return self._id_A93A;
    }
}

_id_F496()
{
    var_0 = _id_0D4D::_id_7B12( self._id_6658 );
    self._id_BF2F = var_0;
    _id_0D4D::_id_F2E3( self._id_6658, self._id_BF2F - 1, "destroying" );
    return var_0;
}

_id_3F13( var_0, var_1, var_2 )
{
    if ( self._id_565C )
        return scripts\asm\asm::_id_2358( var_1, "crawling" );
    else
        return scripts\asm\asm::_id_2358( var_1, "standing" );
}

_id_532D( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "board_break" || var_0 == "hit" )
    {
        if ( !isdefined( self._id_BF2F ) )
            return;

        var_4 = self._id_BF2F;
        self._id_BF2F = undefined;
        _id_0D4D::_id_F2E3( self._id_6658, var_4 - 1, "destroyed" );
        _id_0D4D::_id_DFCB( self._id_6658, var_4 );
    }
}

_id_9C78( var_0, var_1 )
{
    var_2 = 2304;
    return distancesquared( var_0.origin, var_1.origin ) < var_2;
}

_id_252C( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
    {
        var_4 = scripts\engine\utility::_id_7E2E( self.origin, level._id_4B88 );

        if ( _id_9C78( self._id_4299, var_4 ) )
            _id_0C73::_id_5904( self._id_4299, 45, "MOD_IMPACT" );
    }
}

_id_CEE3( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self orientmode( "face angle abs", self._id_24CA.angles );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_CF19( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self orientmode( "face angle abs", self._id_24CA.angles );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_662E( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self _meth_8281( "anim deltas" );
    self orientmode( "face angle abs", self._id_24CA.angles );
    self _meth_828A( "noclip" );
    self _meth_841F();
    self _meth_828B( 1 );
    self._id_5793 = 1;
    self._id_9CEC = 1;

    if ( isdefined( self._id_24CA._id_EE79 ) && self._id_24CA._id_EE79 == "script_adjust" )
    {
        var_4 = anglestoforward( self._id_24CA.angles );
        var_4 = vectornormalize( var_4 );
        var_4 = var_4 * -3.5;
        var_4 = ( var_4[0], var_4[1], -1 );
        self setorigin( self.origin + var_4, 0 );
    }

    scripts\asm\asm_mp::_id_2365( var_0, var_1, var_2, scripts\asm\asm_mp::_id_2337( var_0, var_1 ), self._id_126E8 );
    self._id_5793 = 0;
    self._id_74B5 = 0;
    self._id_C026 = undefined;
    self _meth_828B( 0 );
    self _meth_828A( "gravity" );
    self._id_6622 = 1;
    self._id_2BE7 = undefined;
    self._id_6659 = undefined;
    self._id_6658 = undefined;
    self._id_BF2F = undefined;
    self._id_9CEC = undefined;
    self _meth_8287( 4 );
    self _meth_8286( self.origin );
    _id_0D4D::_id_DF34( self._id_24CA );
    self._id_24CA = undefined;
}

_id_BA3E()
{
    self endon( "death" );
    self._id_C189 = 1;
    self._id_6622 = 1;
    self._id_74B5 = 1;
    self._id_C026 = 1;
    self._id_4E4C = "window";
    self waittill( "goal_reached" );
    self._id_74B5 = 0;
    self._id_C026 = undefined;
    self._id_4E4C = undefined;
    self._id_6622 = 1;
    self._id_2BE7 = undefined;
    self._id_6659 = undefined;
    self._id_6658 = undefined;
    self._id_BF2F = undefined;
    _id_0D4D::_id_DF34( self._id_24CA );
    self._id_24CA = undefined;
}

_id_1305A( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_24CA._id_0334 ) )
        return 0;

    var_4 = getnodearray( self._id_24CA._id_0334, "targetname" );

    if ( !isdefined( var_4 ) || var_4.size == 0 )
        return 0;

    var_5 = var_4[0];

    if ( !isdefined( var_5 ) || !isdefined( var_5._id_0048 ) )
        return 0;

    var_4 = getnodearray( var_5._id_0334, "targetname" );

    if ( !isdefined( var_4 ) || var_4.size == 0 )
        return 0;

    var_6 = var_4[0];
    self _meth_8286( var_6.origin );
    self._id_6659 = 0;
    thread _id_BA3E();
    return 1;
}

_id_BA3D()
{
    self endon( "death" );
    self._id_C189 = 1;
    self._id_02CC = 200;
    self _meth_84BD();
    self waittill( "stop_soon" );
    self._id_24CA = _id_0D4D::_id_7B4C( self._id_6658 );

    if ( !_id_0D4D::_id_9CD3( self._id_24CA ) )
        _id_0D4D::_id_3FF0( self._id_24CA );
    else
    {
        self _meth_8286( self.origin );

        while ( _id_BE93() )
        {
            var_0 = _id_0D4D::_id_7B4C( self._id_6658 );

            if ( isdefined( var_0 ) && !_id_0D4D::_id_9CD3( var_0 ) )
            {
                self._id_24CA = var_0;
                _id_0D4D::_id_3FF0( self._id_24CA );
                break;
            }

            self._id_331F = 1;
            wait 0.05;
        }

        self._id_331F = undefined;
    }

    var_1 = getclosestpointonnavmesh( self._id_24CA.origin, self );
    var_2 = ( self._id_24CA.origin[0], self._id_24CA.origin[1], var_1[2] );
    self _meth_8286( var_2 );
    self waittill( "goal_reached" );
    var_3 = ( self._id_24CA.origin[0], self._id_24CA.origin[1], self.origin[2] );
    self setorigin( var_3, 0 );
    self._id_C189 = 0;
    _id_0D4D::_id_E005( self._id_6658 );
    self._id_6659 = 1;
}

_id_5AEE( var_0, var_1, var_2, var_3 )
{
    self._id_6659 = 0;
    _id_0D4D::_id_16D1( self._id_6658 );
    self _meth_8287( 4 );
    self _meth_8286( self._id_6658.origin );
    thread _id_BA3D();
    return 1;
}

_id_DD1E( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_6659 ) )
        return 1;

    return 0;
}

_id_BE93( var_0, var_1, var_2, var_3 )
{
    var_4 = _id_0D4D::_id_7B12( self._id_6658 );

    if ( !isdefined( var_4 ) )
        return 0;

    return 1;
}

_id_13F9B( var_0, var_1, var_2, var_3 )
{
    scripts\asm\asm_bb::_id_2915();
    return 1;
}

_id_10007( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_2303._id_4B12 ) )
        return 0;

    switch ( self._id_2303._id_4B12 )
    {
        case "walk":
        case "slow_walk":
            return 0;
    }

    return 1;
}

_id_FFC0( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( level._id_7089 ) )
        return 0;

    if ( _id_BE92() )
        return 0;

    var_4 = "mid";

    if ( isdefined( self._id_24CA._id_EDF9 ) )
        var_4 = self._id_24CA._id_EDF9;

    self._id_4299 = [[ level._id_7089 ]]( self );

    if ( !isdefined( self._id_4299 ) )
        return 0;

    if ( randomint( 100 ) > 50 )
        return 0;

    return 1;
}

_id_9FF5( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( level._id_2AAD ) )
        return 1;

    if ( scripts\engine\utility::_id_9CEE( self._id_331F ) )
        return 1;

    return 0;
}

_id_9DC9( var_0, var_1, var_2, var_3 )
{
    return !_id_9FF5( var_0, var_1, var_2, var_3 );
}

_id_3F0B( var_0, var_1, var_2 )
{
    var_3 = "standing";

    if ( _id_BE92() )
        var_3 = "crawling";

    return scripts\asm\asm::_id_2358( var_1, var_3 );
}

_id_1002F( var_0, var_1, var_2, var_3 )
{
    return _id_0C73::_id_138E4() && !scripts\engine\utility::_id_9CEE( self._id_11196 );
}

_id_1003A( var_0, var_1, var_2, var_3 )
{
    if ( self._id_8C14 )
    {
        if ( scripts\asm\asm_bb::_id_2955() )
            return 1;

        if ( isdefined( self._id_02AE ) && isdefined( self._id_02AE._id_ECF5 ) && self._id_02AE._id_ECF5 == "spawn_wall_low" )
            return 1;
    }

    return 0;
}
