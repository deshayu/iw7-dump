// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_9589()
{
    level._id_456B = [];
    setup_irish_luck_consumables();
    _id_C8FE();
}

setup_irish_luck_consumables()
{
    level.irish_luck_consumables = [];
    level.irish_luck_consumables["grenade_cooldown"] = [];
    level.irish_luck_consumables["spawn_reboard_windows"] = [];
    level.irish_luck_consumables["burned_out"] = [];
    level.irish_luck_consumables["faster_health_regen_upgrade"] = [];
    level.irish_luck_consumables["sniper_soft_upgrade"] = [];
    level.irish_luck_consumables["extra_sniping_points"] = [];
    level.irish_luck_consumables["shock_melee_upgrade"] = [];
    level.irish_luck_consumables["penetration_gun"] = [];
    level.irish_luck_consumables["bonus_damage_on_last_bullets"] = [];
    level.irish_luck_consumables["reload_damage_increase"] = [];
    level.irish_luck_consumables["door_buy_refund"] = [];
    level.irish_luck_consumables["faster_window_reboard"] = [];
    level.irish_luck_consumables["headshot_explosion"] = [];
    level.irish_luck_consumables["increased_melee_damage"] = [];
    level.irish_luck_consumables["sharp_shooter_upgrade"] = [];
    level.irish_luck_consumables["spawn_double_money"] = [];
    level.irish_luck_consumables["anywhere_but_here"] = [];
    level.irish_luck_consumables["atomizer_gun"] = [];
    level.irish_luck_consumables["bh_gun"] = [];
    level.irish_luck_consumables["claw_gun"] = [];
    level.irish_luck_consumables["damage_booster_upgrade"] = [];
    level.irish_luck_consumables["headshot_reload"] = [];
    level.irish_luck_consumables["hit_reward_upgrade"] = [];
    level.irish_luck_consumables["killing_time"] = [];
    level.irish_luck_consumables["slow_enemy_movement"] = [];
    level.irish_luck_consumables["spawn_infinite_ammo"] = [];
    level.irish_luck_consumables["spawn_instakill"] = [];
    level.irish_luck_consumables["spawn_max_ammo"] = [];
    level.irish_luck_consumables["spawn_nuke"] = [];
    level.irish_luck_consumables["wall_power"] = [];
    level.irish_luck_consumables["ephemeral_enhancement"] = [];
    level.irish_luck_consumables["secret_service"] = [];
    level.irish_luck_consumables["cant_miss"] = [];
    level.irish_luck_consumables["spawn_fire_sale"] = [];
    level.irish_luck_consumables["self_revive"] = [];
    level.irish_luck_consumables["just_a_flesh_wound"] = [];
    level.irish_luck_consumables["force_push_near_death"] = [];
    level.irish_luck_consumables["next_purchase_free"] = [];
    level.irish_luck_consumables["masochist"] = [];
    level.irish_luck_consumables["magic_wheel_upgrade"] = [];
    level.irish_luck_consumables["steel_dragon"] = [];
    level.irish_luck_consumables["timely_torrent"] = [];
    level.irish_luck_consumables["purify"] = [];
    level.irish_luck_consumables["explosive_touch"] = [];
    level.irish_luck_consumables["shared_fate"] = [];
    level.irish_luck_consumables["fire_chains"] = [];
    level.irish_luck_consumables["temporal_increase"] = [];
    level.irish_luck_consumables["twist_of_fate"] = [];
    level.irish_luck_consumables["dodge_mode"] = [];
    level.irish_luck_consumables["ammo_crate"] = [];
    level.irish_luck_consumables["stimulus"] = [];
    level.irish_luck_consumables_gotten = [];
}

_id_C8FE()
{
    if ( isdefined( level._id_4569 ) )
        var_0 = level._id_4569;
    else
        var_0 = "cp/loot/iw7_zombiefatefortune_loot_master.csv";

    var_1 = 0;

    for (;;)
    {
        var_2 = tablelookupbyrow( var_0, var_1, 1 );

        if ( var_2 == "" )
            break;

        var_3 = tablelookupbyrow( var_0, var_1, 6 );
        var_4 = int( tablelookupbyrow( var_0, var_1, 7 ) );
        var_5 = int( tablelookupbyrow( var_0, var_1, 8 ) );
        var_6 = int( tablelookupbyrow( var_0, var_1, 9 ) );
        _id_DEA4( var_2, var_3, var_4, var_5, var_6, ::_id_82B2, ::_id_DFDD );
        var_1++;
    }

    _id_4565( "ephemeral_enhancement", ::_id_12FEA, undefined, undefined, 1 );
    _id_4565( "grenade_cooldown", ::_id_12FF1, undefined, ::_id_12955, undefined );
    _id_4565( "reload_damage_increase", ::_id_13006, undefined, undefined, undefined );
    _id_4565( "headshot_reload", ::_id_12FF2, undefined, undefined, undefined );
    _id_4565( "anywhere_but_here", ::_id_12FA2, undefined, undefined, undefined );
    _id_4565( "now_you_see_me", ::_id_12FFF, undefined, undefined, undefined );
    _id_4565( "killing_time", ::_id_12FF6, undefined, undefined, undefined );
    _id_4565( "phoenix_up", ::_id_13002, undefined, undefined, 1 );
    _id_4565( "spawn_instakill", ::_id_1301A, undefined, undefined, 1 );
    _id_4565( "spawn_fire_sale", ::_id_13018, undefined, undefined, 1 );
    _id_4565( "spawn_nuke", ::_id_1301C, undefined, undefined, 1 );
    _id_4565( "spawn_double_money", ::_id_13017, undefined, undefined, 1 );
    _id_4565( "spawn_max_ammo", ::_id_1301B, undefined, undefined, 1 );
    _id_4565( "spawn_reboard_windows", ::_id_1301D, undefined, undefined, 1 );
    _id_4565( "spawn_infinite_ammo", ::_id_13019, undefined, undefined, 1 );
    _id_4565( "bh_gun", ::_id_12FAC, undefined, undefined, 1 );
    _id_4565( "atomizer_gun", ::_id_12FA6, undefined, undefined, 1 );
    _id_4565( "claw_gun", ::_id_12FBB, undefined, undefined, 1 );
    _id_4565( "steel_dragon", ::_id_1302A, undefined, undefined, 1 );
    _id_4565( "penetration_gun", ::_id_13001, undefined, undefined, 1 );
    _id_4565( "life_link", ::_id_12FF8, undefined, undefined, undefined );
    _id_4565( "slow_enemy_movement", ::_id_13012, undefined, undefined, undefined );
    _id_4565( "increased_team_efficiency", ::_id_12FF5, undefined, undefined, undefined );
    _id_4565( "welfare", ::_id_13038, undefined, undefined, undefined );
    _id_4565( "cant_miss", ::_id_12FB4, undefined, undefined, undefined );
    _id_4565( "self_revive", ::_id_1300E, undefined, undefined, undefined );
    _id_4565( "force_push_near_death", ::_id_12FED, undefined, undefined, undefined );
    _id_4565( "masochist", ::_id_12FFB, undefined, undefined, undefined );
    _id_4565( "timely_torrent", ::use_timely_torrent, undefined, undefined, 1 );
    _id_4565( "purify", ::use_purify, undefined, undefined, undefined );
    _id_4565( "explosive_touch", ::use_explosive_touch, undefined, undefined, undefined );
    _id_4565( "shared_fate", ::use_shared_fate, undefined, undefined, undefined );
    _id_4565( "fire_chains", ::use_fire_chains, undefined, undefined, undefined );
    _id_4565( "irish_luck", ::use_irish_luck, undefined, undefined, undefined );
    _id_4565( "temporal_increase", ::use_temporal_increase, undefined, undefined, undefined );
    _id_4565( "twist_of_fate", ::use_twister, undefined, undefined, undefined );
    _id_4565( "dodge_mode", ::use_dodge_mode, undefined, undefined, undefined );
    _id_4565( "ammo_crate", ::use_ammo_crate, undefined, undefined, undefined );
    _id_4565( "stimulus", ::use_stimulus, undefined, undefined, undefined );
    _id_4565( "activate_gns_machine", ::use_activate_gns_machine, undefined, undefined, undefined );
    _id_4565( "double_pap_weap", ::use_get_pap2_gun, undefined, undefined, undefined );
}

_id_DEA4( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    var_7 = spawnstruct();
    var_7.type = var_1;
    var_7._id_130D1 = var_2;
    var_7._id_12F9A = var_3;
    var_7._id_C948 = var_4;
    var_7._id_F286 = var_5;
    var_7._id_12BF4 = var_6;
    var_7._id_1193C = var_0 + "_timeup";
    level._id_456B[var_0] = var_7;

    foreach ( var_10, var_9 in level.irish_luck_consumables )
    {
        if ( var_10 == var_0 )
        {
            level.irish_luck_consumables[var_0] = level._id_456B[var_0];
            level.irish_luck_consumables[var_0].name = var_0;
        }
    }
}

_id_4565( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = level._id_456B[var_0];

    if ( isdefined( var_1 ) )
        var_5._id_13089 = var_1;

    if ( isdefined( var_2 ) )
        var_5._id_F286 = var_2;

    if ( isdefined( var_3 ) )
        var_5._id_12BF4 = var_3;

    if ( isdefined( var_4 ) )
        var_5._id_1174E = var_4;
}

_id_96DB()
{
    _id_F949();
    _id_F524();
    _id_1297A( 1 );
    _id_9588();
    _id_958C();
}

_id_9588()
{
    thread _id_B69D();
}

_id_958C()
{
    self._id_4572 = [];
    self setrankedplayerdata( "common", "numConsumables", 0 );

    for ( var_0 = 0; var_0 < 32; var_0++ )
        self setrankedplayerdata( "common", "consumablesUsed", var_0, 0 );
}

_id_F524()
{
    self._id_456B = [];

    for ( var_0 = 0; var_0 < 5; var_0++ )
    {
        var_1 = self getrankedplayerdata( "cp", "zombiePlayerLoadout", "zombie_consumables", var_0 );
        self._id_456B[var_1] = spawnstruct();
        self._id_456B[var_1]._id_130D1 = level._id_456B[var_1]._id_130D1;
        self._id_456B[var_1]._id_C4A4 = 0;
        self._id_456B[var_1]._id_11925 = 0;
    }

    self.consumables_pre_irish_luck_usage = self._id_456B;
}

_id_1297A( var_0 )
{
    var_1 = _id_788C( self );
    self setclientomnvar( "zm_consumables_remaining", var_1 );
    self setclientomnvar( "zm_dpad_up_activated", 4 );
    self._id_1030B = [];
    self playlocalsound( "zmb_fnf_replenish" );

    for ( var_2 = 0; var_2 < var_1; var_2++ )
    {
        self._id_1030B[self._id_1030B.size] = var_2;
        self _meth_82BE( "zm_card_selection_count", var_2, 1 );
    }

    _id_12DE5( 0 );
}

reset_meter()
{
    self notify( "give_new_deck" );
    self._id_4560 = 0;
    _id_9588();
    thread _id_ACAF();
    self setclientomnvar( "zm_dpad_up_activated", 5 );
    self setclientomnvar( "zm_consumable_selection_ready", 0 );
}

_id_788C( var_0 )
{
    var_1 = var_0 _meth_81A7( "fate_card_slot_4", "fatedecksize", 1 );
    var_2 = var_0 _meth_81A7( "fate_card_slot_5", "fatedecksize", 1 );
    var_3 = 3;

    if ( var_1 && var_2 )
        var_3 = 5;
    else if ( var_1 && !var_2 )
        var_3 = 4;
    else if ( !var_1 && !var_2 )
        var_3 = 3;

    return var_3;
}

_id_F949()
{
    self _meth_8299( 1, "" );
    self _meth_8299( 2, "" );
    self _meth_8299( 3, "" );
    self _meth_8299( 4, "" );
    self notifyonplayercommand( "D_pad_up", "+actionslot 1" );
    self notifyonplayercommand( "D_pad_down", "+actionslot 2" );
    thread _id_13950( "super_default_zm" );
}

_id_13950( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    for (;;)
    {
        self waittill( "offhand_fired", var_1 );

        if ( var_1 == var_0 )
        {
            if ( scripts\engine\utility::_id_9CEE( self._id_98F3 ) )
            {
                self setweaponammoclip( var_0, 1 );
                continue;
            }

            self notify( "fired_super" );
            self setweaponammoclip( var_0, 1 );
        }
    }
}

_id_5B00()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( "consumable_selected" );
    self endon( "give_new_deck" );
    var_0 = 0;
    self setclientomnvar( "zm_consumable_selection_ready", 1 );
    _id_12DE5( var_0 );
    self.deck_select_ready = 1;

    for (;;)
    {
        var_1 = scripts\engine\utility::_id_13734( "D_pad_up", "D_pad_down", "fired_super" );

        if ( self._id_1030B.size <= 0 || scripts\engine\utility::_id_9CEE( level._id_5511 ) || scripts\engine\utility::_id_9CEE( self._id_5511 ) || scripts\engine\utility::_id_9CEE( self._id_1097A ) || scripts\engine\utility::_id_9CEE( self._id_98F3 ) )
        {
            self playlocalsound( "ui_consumable_deny" );
            wait 0.25;
            continue;
        }

        if ( var_1 == "fired_super" )
        {
            self.deck_select_ready = undefined;
            thread _id_4557( self._id_1030B[var_0], var_0 );
        }
        else if ( var_1 == "D_pad_up" && self._id_1030B.size > 1 )
        {
            self setclientomnvar( "zm_dpad_pressed", 1 );
            var_0 = _id_7C52( var_0 + 1, 0, self._id_1030B.size - 1 );
            _id_12DE5( var_0 );
            self playlocalsound( "ui_consumable_scroll" );
        }
        else if ( var_1 == "D_pad_down" && self._id_1030B.size > 1 )
        {
            self setclientomnvar( "zm_dpad_pressed", 1 );
            var_0 = _id_7C52( var_0 - 1, 0, self._id_1030B.size - 1 );
            _id_12DE5( var_0 );
            self playlocalsound( "ui_consumable_scroll" );
        }

        scripts\engine\utility::waitframe();
        self setclientomnvar( "zm_dpad_pressed", 0 );
    }
}

_id_12DE5( var_0 )
{
    wait 0.1;
    self setclientomnvar( "zm_consumable_deck_slot_on", self._id_1030B[var_0] );
    self setclientomnvar( "zm_consumables_slot_count", var_0 + 1 );
}

_id_7C52( var_0, var_1, var_2 )
{
    if ( var_0 > var_2 )
        return var_1;

    if ( var_0 < var_1 )
        return var_2;

    return var_0;
}

_id_DFD4( var_0 )
{
    self._id_1030B = scripts\engine\utility::array_remove( self._id_1030B, self._id_1030B[var_0] );
    self setclientomnvar( "zm_consumables_remaining", self._id_1030B.size );

    if ( isdefined( self._id_1030B[0] ) )
        self setclientomnvar( "zm_consumable_deck_slot_on", self._id_1030B[0] );
}

_id_4557( var_0, var_1 )
{
    var_2 = self getrankedplayerdata( "cp", "zombiePlayerLoadout", "zombie_consumables", var_0 );
    var_3 = "zm_card" + ( var_0 + 1 ) + "_drain";
    var_4 = "slot_" + ( var_0 + 1 ) + "_used";
    self._id_456B[var_2]._id_1307B = var_4;

    if ( var_2 == "irish_luck" )
        thread consumable_activate_internal_irish( var_2, var_3, "zm_dpad_up_uses", "zm_dpad_up_activated", var_4, var_0, var_1 );
    else
        thread _id_4558( var_2, var_3, "zm_dpad_up_uses", "zm_dpad_up_activated", var_4, var_0, var_1 );
}

_id_4558( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "dpad_end_" + var_0 );
    self endon( "give_new_deck" );

    if ( self._id_456B[var_0]._id_130D1 > 0 && self._id_456B[var_0]._id_C4A4 == 0 && !_id_0A5B::_id_D0EF( self ) )
    {
        self setclientomnvar( "zm_fate_card_used", var_5 );
        self._id_456B[var_0]._id_D9A1 = 1;
        var_7 = undefined;
        var_8 = "fired_super";
        thread _id_F306( var_0 );

        if ( isdefined( level._id_456B[var_0]._id_13089 ) )
        {
            if ( isdefined( level._id_456B[var_0]._id_1174E ) )
                var_7 = self [[ level._id_456B[var_0]._id_13089 ]]( var_0 );
            else
                var_7 = self thread [[ level._id_456B[var_0]._id_13089 ]]( var_0 );
        }

        if ( !isdefined( var_7 ) || isdefined( var_7 ) && var_7 )
        {
            _id_4574( self, var_0 );
            self._id_456B[var_0]._id_11925++;
            _id_0D45::_id_AF6C( 1, var_0, level._id_13BD3, self );
            _id_0A5E::_id_D9AD( "mt_faf_uses" );
            thread _id_0A6A::_id_12885( "wonder_consume", "zmb_comment_vo", "low", 10, 0, 1, 0, 40 );

            if ( self._id_456B[var_0]._id_11925 == 1 )
                thread decrement_counter_of_consumables( var_0 );

            self setclientomnvar( var_1, 1 );
            thread _id_ACAF();
            self setclientomnvar( "zm_dpad_up_activated", 5 );
            self _meth_82BE( "zm_card_fill_display", var_5, 1 );
            self setclientomnvar( "zm_consumable_selection_ready", 0 );
            _id_DFD4( var_6 );
            thread _id_B69D();
            self playlocalsound( "ui_consumable_select" );
            _id_CCCC( self );
            self notify( "consumable_selected" );
            thread _id_0A77::firegesturegrenade( self, self._id_6BA3 );
            self._id_4561 = undefined;
            thread _id_0A6A::_id_E01F( "nag_use_fateandfort" );
            var_9 = level._id_456B[var_0].type;

            if ( var_9 == "timedactivations" )
                thread _id_5B02( var_0, level._id_456B[var_0]._id_12F9A, var_1, var_8, var_2, var_3, var_4, var_5 );
            else if ( var_9 == "wave" )
                thread _id_5B04( var_0, level._id_456B[var_0]._id_12F9A, var_1, var_8, var_2, var_3, var_4, var_5 );
            else if ( var_9 == "triggernow" || level._id_456B[var_0].type == "triggerwait" )
                thread _id_5B01( var_0, level._id_456B[var_0].type, self._id_456B[var_0]._id_130D1, var_1, var_8, var_2, var_3, var_4, var_5 );
            else if ( var_9 == "triggerpassive" )
                thread _id_5B03( var_0, level._id_456B[var_0]._id_C948, var_1, var_8, var_2, var_3, var_4, var_5 );

            if ( isdefined( var_7 ) )
            {
                _id_0A77::_id_C151( var_0 );
                return;
            }
        }
        else
        {
            self playlocalsound( "ui_consumable_deny" );
            self._id_456B[var_0]._id_D9A1 = undefined;
        }
    }
}

decrement_counter_of_consumables( var_0 )
{
    var_1 = get_consumable_index_in_player_data( self, var_0 );

    if ( isdefined( var_1 ) )
    {
        var_2 = self getrankedplayerdata( "cp", "zombiePlayerLoadout", "consumables_counter", var_1 );
        var_3 = var_2 - 1;
        self setrankedplayerdata( "cp", "zombiePlayerLoadout", "consumables_counter", var_1, var_3 );
    }
}

_id_CCCC( var_0 )
{
    switch ( var_0._id_6BA3 )
    {
        case "iw7_jockcard_zm":
            var_0 playlocalsound( "wondercard_jock_use_gesture" );
            break;
        case "iw7_nerdcard_zm":
            var_0 playlocalsound( "wondercard_nerd_use_gesture" );
            break;
        case "iw7_valleygirlcard_zm":
            var_0 playlocalsound( "wondercard_valleygirl_use_gesture" );
            break;
        case "iw7_rappercard_zm":
            var_0 playlocalsound( "wondercard_rapper_use_gesture" );
            break;
        case "iw7_grungecard_zm":
            var_0 playlocalsound( "wondercard_gesture_grunge" );
            break;
        case "iw7_cholacard_zm":
            var_0 playlocalsound( "wondercard_gesture_chola" );
            break;
        case "iw7_ravercard_zm":
            var_0 playlocalsound( "wondercard_gesture_raver" );
            break;
        case "iw7_hiphopcard_zm":
            var_0 playlocalsound( "wondercard_gesture_hiphop" );
            break;
        case "iw7_survivorcard_zm":
            var_0 playlocalsound( "wondercard_gesture_survivor" );
            break;
        case "iw7_wylercard_zm":
            var_0 playlocalsound( "vm_gest_zmb_willard_wondercard" );
            break;
        default:
            var_0 playlocalsound( "wondercard_jock_use_gesture" );
    }
}

_id_4574( var_0, var_1 )
{
    var_2 = _id_78DE( var_1 );

    if ( scripts\engine\utility::array_contains( var_0._id_4572, var_2 ) )
        return;

    var_3 = var_0._id_4572.size;

    if ( isdefined( level._id_4569 ) )
        var_4 = level._id_4569;
    else
        var_4 = "cp/loot/iw7_zombiefatefortune_loot_master.csv";

    var_5 = tablelookup( var_4, 1, var_1, 3 );

    if ( isdefined( var_5 ) )
    {
        if ( var_5 == "Fortune" )
        {
            var_0 setrankedplayerdata( "common", "consumablesUsed", var_3, int( var_2 ) );
            var_6 = var_0 getrankedplayerdata( "common", "numConsumables" );
            var_0 setrankedplayerdata( "common", "numConsumables", var_6 + 1 );
            var_0._id_4572 = scripts\engine\utility::_id_2279( var_0._id_4572, var_2 );
        }
    }
}

get_consumable_index_in_player_data( var_0, var_1 )
{
    for ( var_2 = 0; var_2 < 5; var_2++ )
    {
        var_3 = var_0 getrankedplayerdata( "cp", "zombiePlayerLoadout", "zombie_consumables", var_2 );

        if ( var_1 == var_3 )
            return var_2;
    }

    return undefined;
}

_id_ACB0()
{
    self setclientomnvar( "lb_gsc_controlled", 1 );
    self setclientomnvar( "lb_color", 0 );
    self setclientomnvar( "lb_pulse_time", 1 );
}

_id_ACAF()
{
    self setclientomnvar( "lb_gsc_controlled", 0 );
}

_id_5B02( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    level endon( "game_ended" );
    thread _id_13A3A( var_0, var_4, var_2, var_5, var_6, var_7 );
    var_8 = 1;
    var_9 = var_8 / var_1;
    wait( _id_7E25() );

    for (;;)
    {
        if ( !scripts\engine\utility::_id_9CEE( self._id_1097A ) && !scripts\engine\utility::_id_9CEE( self._id_98F3 ) )
        {
            self setclientomnvar( var_2, var_8 );
            var_8 = var_8 - var_9;

            if ( var_8 <= 0 )
            {
                self setclientomnvar( var_2, 0 );
                _id_5510( var_0, var_4, var_2, var_5, var_6, var_7 );
                break;
            }
        }

        wait 1.0;
    }
}

_id_5B04( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    thread _id_13A3A( var_0, var_4, var_2, var_5, var_6, var_7 );
    var_8 = 1;
    var_9 = var_8 / var_1;

    for (;;)
    {
        self setclientomnvar( var_2, var_8 );
        level waittill( "spawn_wave_done" );
        var_8 = var_8 - var_9;

        if ( var_8 <= 0 )
        {
            self setclientomnvar( var_2, 0 );
            _id_5510( var_0, var_4, var_2, var_5, var_6, var_7 );
            break;
        }

        wait 1.0;
    }
}

_id_5B01( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    thread _id_13A3A( var_0, var_5, var_3, var_6, var_7, var_8 );
    var_9 = self._id_456B[var_0]._id_1307B;
    var_10 = 1;

    if ( var_1 == "triggerwait" )
        self waittill( var_9 );

    wait 1.0;

    for (;;)
    {
        if ( !scripts\engine\utility::_id_9CEE( self._id_1097A ) && !scripts\engine\utility::_id_9CEE( self._id_98F3 ) )
        {
            var_10 = var_10 - 0.05;
            self setclientomnvar( var_3, var_10 );

            if ( var_10 <= 0 )
            {
                self setclientomnvar( var_3, 0 );
                _id_5510( var_0, var_5, var_3, var_6, var_7, var_8 );
                break;
            }
        }

        wait 0.05;
    }
}

_id_5B03( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    thread _id_13A3A( var_0, var_4, var_2, var_5, var_6, var_7 );
    var_8 = 1 / var_1;
    var_9 = self._id_456B[var_0]._id_1307B;
    var_10 = 1;

    for (;;)
    {
        self waittill( var_9 );

        if ( !scripts\engine\utility::_id_9CEE( self._id_1097A ) && !scripts\engine\utility::_id_9CEE( self._id_98F3 ) || var_0 == "coagulant" )
        {
            var_10 = var_10 - var_8;
            self setclientomnvar( var_2, var_10 );

            if ( var_10 < 0.0001 )
            {
                self setclientomnvar( var_2, 0 );
                _id_5510( var_0, var_4, var_2, var_5, var_6, var_7 );
                break;
            }
        }
    }
}

_id_7E25()
{
    if ( _id_0A77::map_check( 0 ) )
    {
        switch ( self._id_134FD )
        {
            case "p3_":
            case "p2_":
            case "p1_":
                return 2;
            case "p4_":
                return self _meth_8443( "ges_wondercard_jock" );
            default:
                return 2;
        }
    }
    else if ( _id_0A77::map_check( 1 ) )
    {
        switch ( self._id_134FD )
        {
            case "p4_":
            case "p3_":
            case "p2_":
            case "p1_":
                return 2;
            default:
                return 2;
        }
    }
    else
    {
        switch ( self._id_134FD )
        {
            case "p4_":
            case "p3_":
            case "p2_":
            case "p1_":
                return 2;
            default:
                return 2;
        }
    }
}

_id_13A3A( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    self endon( "dpad_end_" + var_0 );
    self waittill( var_0 + "_exited_early" );
    self setclientomnvar( var_2, 0 );
    thread _id_5510( var_0, var_1, var_2, var_3, var_4, var_5 );
}

_id_B69D()
{
    self notify( "starting_meter_fill" );
    self endon( "starting_meter_fill" );
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( self._id_1030B.size == 0 )
    {
        self setclientomnvar( "zm_consumables_remaining", 0 );
        self setclientomnvar( "zm_dpad_up_fill", 0 );
        thread _id_0A6A::_id_1769( "nag_need_fateandfort", "zmb_comment_vo", 60, 300, 6, 1 );
        thread _id_0A6A::_id_E01F( "nag_use_fateandfort" );
        return;
    }

    self._id_4560 = 0;
    self._id_4563 = _id_7AC6();
    self setclientomnvar( "zm_dpad_up_fill", 0 );

    while ( self._id_4560 < self._id_4563 )
    {
        self waittill( "consumable_charge", var_0 );

        if ( scripts\engine\utility::_id_9CEE( self._id_5511 ) )
            continue;

        if ( _id_0A5B::_id_D0EF( self ) )
            continue;

        if ( isdefined( self.consumable_meter_scalar ) )
            var_0 = var_0 * self.consumable_meter_scalar;

        var_1 = self._id_4563 - self._id_4560;

        if ( var_0 > var_1 )
            var_0 = var_1;

        self._id_4560 = self._id_4560 + var_0;
        self setclientomnvar( "zm_dpad_up_fill", self._id_4560 / self._id_4563 );
    }

    self notify( "meter_full" );
    thread _id_0A6A::_id_1769( "nag_use_fateandfort", "zmb_comment_vo", 60, 180, 6, 1 );
    self playlocalsound( "ui_consumable_meter_full" );
    self setclientomnvar( "zm_dpad_up_activated", 1 );
    self setweaponammoclip( "super_default_zm", 1 );
    thread _id_ACB0();
    self._id_4561 = 1;
    thread _id_5B00();

    if ( _id_0A77::_id_9F02() || level._id_C552 )
        thread _id_0A57::wait_and_play_tutorial_message( "cards", 5 );
}

_id_7AC6()
{
    var_0 = 1250;

    if ( self._id_3A52 == 1 )
        var_0 = 3000;
    else if ( self._id_3A52 >= 2 )
        var_0 = 5000;

    return var_0;
}

_id_5510( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    _id_1294C( var_0, var_3 );
    self._id_456B[var_0]._id_130D1 = self._id_456B[var_0]._id_130D1 - 1;
    self._id_456B[var_0]._id_D9A1 = undefined;
    self setclientomnvar( var_1, self._id_456B[var_0]._id_130D1 );

    if ( self._id_456B[var_0]._id_130D1 == 0 )
    {
        self._id_456B[var_0]._id_130D1 = level._id_456B[var_0]._id_130D1;
        self notify( "dpad_end_" + var_0 );
        self _meth_82BE( "zm_card_selection_count", var_5, 0 );
        self _meth_82BE( "zm_card_fill_display", var_5, 0 );
    }
    else
        self setclientomnvar( var_2, 1 );
}

_id_1294C( var_0, var_1 )
{
    self._id_456B[var_0]._id_C4A4 = 0;
    _id_0A77::_id_C150( var_0 );
    thread _id_12BF6( var_0 );
}

_id_82B2( var_0, var_1 )
{
    var_2 = level._id_456B[var_0];

    if ( isdefined( var_2._id_1307B ) )
        self notify( var_2._id_1307B );
    else
        self notify( var_0 + " activated" );

    if ( isdefined( level.random_consumable_chosen ) && level.random_consumable_chosen.name == var_0 )
        return;
    else
        self._id_456B[var_0]._id_C4A4 = 1;
}

_id_DFDD( var_0 )
{
    if ( isdefined( self._id_456B[var_0] ) )
        self._id_456B[var_0]._id_C4A4 = 0;
}

_id_13006( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self._id_DF50 = undefined;

    for (;;)
    {
        self waittill( "reload" );
        self._id_DF50 = 1;
        wait 5;
        self._id_DF50 = undefined;
    }
}

_id_12FEA( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    var_1 = self getcurrentweapon();
    var_2 = _id_0A77::_id_80D8( var_1 );

    if ( isdefined( self._id_C8A2[var_2] ) && _id_0A6B::_id_385F( var_1, 1 ) )
    {
        thread fnf_upgrade_weapon( self, var_0, var_2, var_1 );
        return 1;
    }
    else
    {
        self._id_456B["ephemeral_enhancement"]._id_C4A4 = 0;
        return 0;
    }
}

fnf_upgrade_weapon( var_0, var_1, var_2, var_3 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_4 = undefined;
    var_0._id_9FCB = 1;
    var_5 = "pap" + var_0._id_C8A2[var_2]._id_B111;
    var_6 = getweaponattachments( var_3 );
    var_7 = 0;
    var_8 = var_3;

    if ( issubstr( var_3, "g18_z" ) )
    {
        foreach ( var_10 in var_6 )
        {
            if ( issubstr( var_10, "akimbo" ) )
            {
                var_7 = 1;
                var_6 = scripts\engine\utility::array_remove( var_6, var_10 );
            }
        }
    }

    if ( isdefined( level.custom_epehermal_attachment_func ) )
    {
        var_12 = [[ level.custom_epehermal_attachment_func ]]( var_0, var_2, var_3 );

        if ( isdefined( var_12 ) )
        {
            if ( var_12 == "replace_me" )
                var_5 = undefined;
            else
                var_5 = var_12;
        }
    }

    if ( isdefined( level.weapon_upgrade_path ) && isdefined( level.weapon_upgrade_path[getweaponbasename( var_3 )] ) )
        var_3 = level.weapon_upgrade_path[getweaponbasename( var_3 )];
    else if ( isdefined( level.custom_epehermal_weapon_func ) )
        var_3 = [[ level.custom_epehermal_weapon_func ]]( var_0, var_2, var_3 );

    if ( isdefined( level.custom_ephermal_camo_func ) )
        var_4 = [[ level.custom_ephermal_camo_func ]]( var_0, var_2, var_3 );
    else
    {
        if ( isdefined( var_2 ) )
        {
            if ( isdefined( level.no_pap_camos ) && scripts\engine\utility::array_contains( level.no_pap_camos, var_2 ) )
                var_4 = undefined;
            else if ( isdefined( level.pap_1_camo ) && var_0._id_C8A2[var_2]._id_B111 == 1 )
                var_4 = level.pap_1_camo;
            else if ( isdefined( level.pap_2_camo ) && var_0._id_C8A2[var_2]._id_B111 == 2 )
                var_4 = level.pap_2_camo;

            var_13 = var_0 _id_0A6B::_id_7D62( var_3 );

            switch ( var_2 )
            {
                case "dischord":
                    var_14 = "iw7_dischord_zm_pap1";
                    var_4 = "camo20";
                    break;
                case "facemelter":
                    var_14 = "iw7_facemelter_zm_pap1";
                    var_4 = "camo22";
                    break;
                case "headcutter":
                    var_14 = "iw7_headcutter_zm_pap1";
                    var_4 = "camo21";
                    break;
                case "forgefreeze":
                    if ( var_13 == 2 )
                        var_14 = "iw7_forgefreeze_zm_pap1";
                    else if ( var_13 == 3 )
                        var_14 = "iw7_forgefreeze_zm_pap2";

                    var_15 = 1;
                    break;
                case "axe":
                    if ( var_13 == 2 )
                        var_14 = "iw7_axe_zm_pap1";
                    else if ( var_13 == 3 )
                        var_14 = "iw7_axe_zm_pap2";

                    break;
                case "shredder":
                    var_14 = "iw7_shredder_zm_pap1";
                    var_4 = "camo23";
                    break;
                case "katana":
                case "nunchucks":
                    var_4 = "camo222";
                    break;
            }
        }

        var_15 = 0;

        if ( isdefined( var_2 ) )
        {
            switch ( var_2 )
            {
                case "spiked":
                case "golf":
                case "two":
                case "axe":
                case "machete":
                    var_15 = 1;
                default:
                    var_15 = 0;
            }
        }
        else
            var_15 = 0;

        var_5 = undefined;

        if ( isdefined( var_2 ) )
        {
            switch ( var_2 )
            {
                case "spiked":
                case "golf":
                case "two":
                case "machete":
                case "katana":
                case "nunchucks":
                    var_5 = "replace_me";
                    break;
                default:
                    if ( isdefined( var_0._id_C8A2[var_2] ) )
                        var_5 = "pap" + var_0._id_C8A2[var_2]._id_B111;
                    else
                        var_5 = "pap1";
            }
        }

        if ( isdefined( var_5 ) && var_5 == "replace_me" )
            var_5 = undefined;

        var_16 = getweaponattachments( var_3 );

        if ( issubstr( var_3, "g18_z" ) )
        {
            foreach ( var_10 in var_16 )
            {
                if ( issubstr( var_10, "akimbo" ) )
                    var_16 = scripts\engine\utility::array_remove( var_16, var_10 );
            }
        }
    }

    var_19 = var_0 _id_0A6B::_id_E469( var_3, var_5, var_6, undefined, var_4 );

    if ( isdefined( var_19 ) )
    {
        var_0._id_C8A2[var_2]._id_B111++;
        var_0 notify( "weapon_level_changed" );
        var_0._id_6670 = getweaponbasename( var_19 );
        var_0 thread _id_5AFA( var_1, var_0, var_19, var_7 );
        var_0 endon( "last_stand" );
        wait( _id_7E25() );
        var_19 = var_0 _id_0A77::_id_12C6( var_19, undefined, undefined, 1 );

        if ( isdefined( var_8 ) )
            var_0 _meth_83B8( var_8 );
        else
            var_0 _meth_83B8( var_3 );

        var_0 _meth_83B5( var_19 );
    }
}

_id_5AFA( var_0, var_1, var_2, var_3 )
{
    level endon( "game_ended" );
    var_1 endon( "disconnect" );
    var_4 = var_1._id_6670;
    var_5 = 0;
    var_6 = _id_0A77::_id_80D8( var_2 );
    var_7 = "pap" + ( var_1._id_C8A2[var_6]._id_B111 - 1 );
    var_8 = var_1._id_C8A2[var_6]._id_B111 - 2;

    switch ( var_6 )
    {
        case "venomx":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_venomx_zm";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_venomx_zm_pap1";
            }

            break;
        case "katana":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_katana_zm";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_katana_zm_pap1";
            }

            break;
        case "nunchucks":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_nunchucks_zm";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_nunchucks_zm_pap1";
            }

            break;
        case "two":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_two_headed_axe_mp";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_two_headed_axe_mp_pap1";
            }

            break;
        case "machete":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_machete_mp";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_machete_mp_pap1";
            }

            break;
        case "golf":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_golf_club_mp";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_golf_club_mp_pap1";
            }

            break;
        case "spiked":
            var_1._id_C8A2[var_6]._id_B111--;

            if ( var_1._id_C8A2[var_6]._id_B111 == 1 )
            {
                var_1.base_weapon = 1;
                var_2 = "iw7_spiked_bat_mp";
            }
            else
            {
                var_1.ephemeral_downgrade = 1;
                var_2 = "iw7_spiked_bat_mp_pap1";
            }

            break;
    }

    var_2 = _id_5AF9( var_1, var_2, var_6, var_7, var_8, var_3 );
    var_1.base_weapon = undefined;
    var_1.ephemeral_downgrade = undefined;
    var_9 = var_1 scripts\engine\utility::_id_13734( "ephemeral_enhancement_timeup", "last_stand" );

    if ( var_9 != "ephemeral_enhancement_timeup" )
        var_1 notify( var_0 + "_exited_early" );

    var_1._id_9FCB = undefined;
    var_10 = _id_0A77::_id_80D8( var_1 _id_0A77::getvalidtakeweapon() );

    if ( var_1 _id_0A6B::_id_8BBB( var_4 ) )
    {
        var_11 = var_1 _meth_8173();

        foreach ( var_13 in var_11 )
        {
            var_14 = _id_0A77::_id_80D8( var_13 );

            if ( var_14 == _id_0A77::_id_80D8( var_4 ) )
            {
                var_1 _meth_83B8( var_13 );
                var_5 = 1;
                var_2 = var_1 _id_0A77::_id_12C6( var_2, undefined, undefined, 1 );

                if ( _id_0A77::_id_80D8( var_2 ) == var_10 )
                    var_1 _meth_83B6( var_2 );

                var_1._id_C8A2[var_6]._id_B111 = int( max( var_1._id_C8A2[var_6]._id_B111 - 1, 1 ) );
                var_1 notify( "weapon_level_changed" );
                break;
            }
        }
    }

    if ( isdefined( var_1._id_4643 ) )
    {
        var_16 = var_1._id_4643;

        foreach ( var_18 in var_16 )
        {
            var_14 = getweaponbasename( var_18 );

            if ( var_14 == var_4 )
            {
                var_19 = var_1._id_4648[var_18];
                var_20 = var_1._id_464A[var_18];
                var_1._id_4643 = scripts\engine\utility::array_remove( var_1._id_4643, var_18 );

                if ( var_14 == getweaponbasename( var_1._id_464B ) )
                    var_1._id_464B = var_2;

                var_1._id_4643 = scripts\engine\utility::_id_2279( var_1._id_4643, var_2 );
                var_1._id_4648[var_2] = var_19;
                var_1._id_464A[var_2] = var_20;
                break;
            }
        }
    }

    if ( isdefined( var_1._id_A913 ) )
    {
        if ( getweaponbasename( var_1._id_A913 ) == var_1._id_6670 )
            var_1._id_A913 = var_2;
    }

    if ( isdefined( var_1.saved_last_stand_pistol ) )
    {
        if ( getweaponbasename( var_1.saved_last_stand_pistol ) == var_1._id_6670 )
            var_1.saved_last_stand_pistol = var_2;
    }

    if ( isdefined( var_1._id_B0A0 ) )
    {
        var_16 = var_1._id_B0A0._id_4643;

        foreach ( var_18 in var_16 )
        {
            var_14 = getweaponbasename( var_18 );

            if ( var_14 == var_4 )
            {
                var_19 = var_1._id_4648[var_18];
                var_20 = var_1._id_464A[var_18];
                var_1._id_B0A0._id_4643 = scripts\engine\utility::array_remove( var_1._id_B0A0._id_4643, var_18 );

                if ( var_14 == getweaponbasename( var_1._id_B0A0._id_464B ) )
                    var_1._id_B0A0._id_464B = var_2;

                var_1._id_B0A0._id_4643 = scripts\engine\utility::_id_2279( var_1._id_B0A0._id_4643, var_2 );
                var_1._id_4648[var_2] = var_19;
                var_1._id_464A[var_2] = var_20;
                break;
            }
        }
    }

    var_1._id_6670 = undefined;
}

_id_5AF9( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_6 = undefined;

    if ( var_4 >= 1 )
    {
        if ( isdefined( level.no_pap_camos ) && scripts\engine\utility::array_contains( level.no_pap_camos, var_2 ) )
            var_6 = undefined;
        else if ( isdefined( level.pap_1_camo ) )
            var_6 = level.pap_1_camo;

        var_7 = "pap" + var_4;

        switch ( var_2 )
        {
            case "dischord":
                var_6 = "camo20";
                break;
            case "facemelter":
                var_6 = "camo22";
                break;
            case "headcutter":
                var_6 = "camo21";
                break;
            case "shredder":
                var_6 = "camo23";
                break;
            case "katana":
            case "nunchucks":
                var_6 = "camo222";
                break;
        }
    }
    else
        var_7 = undefined;

    switch ( var_2 )
    {
        case "katana":
        case "nunchucks":
            var_7 = undefined;
            break;
        case "two":
            var_7 = undefined;
            break;
        case "golf":
            var_7 = undefined;
            break;
        case "machete":
            var_7 = undefined;
            break;
        case "spiked":
            var_7 = undefined;
            break;
    }

    var_8 = getweaponattachments( var_1 );

    if ( scripts\engine\utility::_id_9CEE( var_5 ) )
        var_8 = scripts\engine\utility::_id_2279( var_8, "akimbo" );

    foreach ( var_10 in var_8 )
    {
        if ( issubstr( var_10, var_3 ) )
            var_8 = scripts\engine\utility::array_remove( var_8, var_10 );
    }

    var_12 = var_0 _id_0A6B::_id_E469( var_1, var_7, var_8, undefined, var_6 );
    return var_12;
}

_id_1301A( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "instakill_30", var_0 ) )
        return 1;
    else
    {
        self._id_456B["spawn_instakill"]._id_C4A4 = 0;
        return 0;
    }
}

_id_13018( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "fire_30", var_0 ) )
        return 1;
    else
    {
        self._id_456B["fire_30"]._id_C4A4 = 0;
        return 0;
    }
}

_id_1301C( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "kill_50", var_0 ) )
        return 1;
    else
    {
        self._id_456B["spawn_nuke"]._id_C4A4 = 0;
        return 0;
    }
}

_id_13017( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "cash_2", var_0 ) )
        return 1;
    else
    {
        self._id_456B["spawn_double_money"]._id_C4A4 = 0;
        return 0;
    }
}

_id_1301B( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "ammo_max", var_0 ) )
        return 1;
    else
    {
        self._id_456B["spawn_max_ammo"]._id_C4A4 = 0;
        return 0;
    }
}

_id_1301D( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "board_windows", var_0 ) )
        return 1;
    else
    {
        self._id_456B["spawn_reboard_windows"]._id_C4A4 = 0;
        return 0;
    }
}

_id_13019( var_0 )
{
    var_1 = self;

    if ( _id_107AA( var_1, "infinite_20", var_0 ) )
        return 1;
    else
    {
        self._id_456B["spawn_infinite_ammo"]._id_C4A4 = 0;
        return 0;
    }
}

_id_107AA( var_0, var_1, var_2 )
{
    var_3 = var_0.origin;
    var_4 = ( 0, 40, 0 );
    var_5 = self getplayerangles();
    var_6 = 7;
    var_3 = var_3 + var_4[0] * anglestoright( var_5 );
    var_3 = var_3 + var_4[1] * anglestoforward( var_5 );
    var_3 = var_3 + var_4[2] * anglestoup( var_5 );
    var_7 = rotatepointaroundvector( anglestoup( var_5 ), anglestoforward( var_5 ), var_6 );
    var_8 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_vehicleclip", "physicscontents_item", "physicscontents_detail", "physicscontents_vehicleclip", "physicscontents_vehicle", "physicscontents_canshootclip", "physicscontents_missileclip", "physicscontents_clipshot" ] );
    var_9 = scripts\engine\trace::_id_DCED( var_0 geteye(), var_3 + var_7, self, var_8 );
    var_3 = scripts\engine\utility::_id_5D14( var_9["position"] + var_7 * -18, 32, -2000 );

    if ( !_id_0A6B::_id_9E54( var_3, level._id_9B0B, undefined, undefined, 1 ) )
        var_3 = var_0.origin;

    if ( level _id_0A76::_id_5CF6( var_3, var_0, var_1, undefined, undefined, 1 ) )
    {
        wait 0.25;
        var_0 _id_0A77::_id_C151( var_2 );
        return 1;
    }

    return 0;
}

_id_1302A( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    if ( self _meth_81C2() )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    thread _id_82EF( var_0, "iw7_steeldragon_mp" );
    return 1;
}

_id_12FBB( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    if ( self _meth_81C2() )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    thread _id_82EF( var_0, "iw7_claw_mp" );
    return 1;
}

_id_12FA6( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    if ( self _meth_81C2() )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    thread _id_82EF( var_0, "iw7_atomizer_mp+atomizerscope" );
    return 1;
}

_id_13001( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    if ( self _meth_81C2() )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    thread _id_82EF( var_0, "iw7_penetrationrail_mp+penetrationrailscope" );
    return 1;
}

_id_12FAC( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    if ( self _meth_81C2() )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    thread _id_82EF( var_0, "iw7_blackholegun_mp+blackholegunscope" );
    return 1;
}

_id_82EF( var_0, var_1 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    var_2 = self getcurrentweapon();
    var_3 = 0;

    if ( var_2 == "none" )
        var_3 = 1;
    else if ( scripts\engine\utility::array_contains( level._id_17D7, var_2 ) )
        var_3 = 1;
    else if ( scripts\engine\utility::array_contains( level._id_17D7, getweaponbasename( var_2 ) ) )
        var_3 = 1;
    else if ( _id_0A77::_id_9C42( var_2, 1 ) )
        var_3 = 1;

    if ( var_3 )
    {
        self._id_4643 = self _meth_8173();
        var_2 = _id_0A5B::_id_3E88( level._id_17D7, 1, 1 );
    }

    self._id_A92C = var_2;
    self._id_4643 = undefined;
    thread _id_E18A( var_0, var_1, var_2 );
    self endon( var_0 + "_exited_early" );
    self endon( "last_stand" );
    wait( _id_7E25() );
    var_1 = _id_0A77::_id_12C6( var_1, undefined, undefined, 0 );
    self _meth_83B6( var_1 );
    var_4 = _id_1E39( var_1 );

    while ( self getcurrentweapon() != var_1 )
        wait 0.05;

    self notify( "super_weapon_given" );
    thread _id_12BA6( var_4, var_1 );
}

_id_E18A( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self._id_9FCB = 1;
    self._id_BD6C = var_2;
    scripts\engine\utility::_id_1C62( 0 );
    scripts\engine\utility::_id_13736( _id_7E25() + 1, "super_weapon_given" );
    self _meth_800F( 0 );

    while ( self _meth_81C2() )
        wait 0.05;

    self _meth_800F( 1 );

    if ( self getcurrentweapon() == var_1 && _id_0A77::_id_9BA0( var_0 ) )
        var_3 = scripts\engine\utility::_id_13734( var_0 + "_timeup", "last_stand", "weapon_switch_started", "weapon_purchased", "coaster_ride_beginning", "cards_replenished" );
    else
        var_3 = undefined;

    scripts\engine\utility::_id_1C62( 1 );

    if ( !isdefined( var_3 ) || var_3 != var_0 + "_timeup" )
        self notify( var_0 + "_exited_early" );

    self._id_9FCB = undefined;

    if ( !isdefined( var_3 ) || isdefined( var_3 ) && var_3 != "last_stand" )
    {
        if ( self hasweapon( var_2 ) )
            self _meth_83B5( var_2 );
        else
            self _meth_83B5( self getweaponslistprimaries()[1] );
    }

    if ( self hasweapon( var_1 ) )
        self _meth_83B8( var_1 );

    thread _id_4DB9();
    self._id_BD6C = undefined;
    self._id_A92C = undefined;
}

_id_1E39( var_0 )
{
    self endon( "death" );
    self endon( "disconnect" );
    var_1 = [];

    if ( isdefined( var_0 ) )
        var_1[var_0] = self getammocount( var_0 );
    else
    {
        foreach ( var_0 in self._id_13CA0 )
            var_1[var_0] = self getammocount( var_0 );
    }

    return var_1;
}

_id_12BA6( var_0, var_1 )
{
    self endon( "death" );
    self endon( "disconnect" );

    if ( !isdefined( self._id_13CA0 ) )
        self._id_13CA0 = self getweaponslistprimaries();

    var_2 = self._id_13CA0;

    if ( isdefined( var_1 ) )
        var_2[var_2.size] = var_1;

    self._id_8B7D = 1;
    _id_0A77::enable_infinite_ammo( 1 );

    while ( scripts\engine\utility::_id_9CEE( self._id_8B7D ) )
    {
        var_3 = 0;

        foreach ( var_5 in var_2 )
        {
            if ( var_5 == self getcurrentweapon() && _id_13C30( var_5 ) )
            {
                var_3 = 1;
                self setweaponammoclip( var_5, weaponclipsize( var_5 ), "left" );
            }

            if ( var_5 == self getcurrentweapon() && _id_13C30( var_5 ) )
            {
                var_3 = 1;
                self setweaponammoclip( var_5, weaponclipsize( var_5 ), "right" );
            }

            if ( var_3 == 0 )
                _id_1E39( var_1 );
        }

        wait 0.05;
    }
}

_id_13C30( var_0 )
{
    var_1 = 1;

    foreach ( var_3 in level._id_C6C1 )
    {
        if ( var_0 == var_3 )
            var_1 = 0;
    }

    return var_1;
}

_id_4DB9()
{
    level endon( "disconnect" );
    level endon( "game_ended" );
    self._id_8B7D = undefined;
    wait 0.2;
    _id_0A77::enable_infinite_ammo( 0 );
}

_id_12FB4( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "shot_missed", var_1 );

        if ( !_id_0A6B::_id_9D75( var_1 ) )
            continue;

        if ( _id_0A6B::_id_8BD1( var_1, "g18pap1" ) || _id_0A6B::_id_8BD1( var_1, "g18pap2" ) )
            continue;

        var_2 = self getweaponammoclip( var_1 );
        self setweaponammoclip( var_1, var_2 + 1 );
    }
}

_id_12FED( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "player_damaged" );

        if ( self.health <= 45 )
        {
            thread _id_F63F();
            thread _id_A66A();
            _id_0A77::_id_C151( var_0 );
        }
    }
}

_id_F63F()
{
    self notify( "setAndRemoveInvulnerability" );
    self endon( "setAndRemoveInvulnerability" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    _id_0A77::_id_17C0( "near_death_consumable", 0.0, 0 );
    scripts\engine\utility::_id_13737( 1, "death", "last_stand" );
    _id_0A77::_id_E0E6( "near_death_consumable", 0 );
}

_id_A66A( var_0 )
{
    var_1 = 128;
    var_2 = vectornormalize( anglestoforward( self.angles ) );
    var_3 = var_2 * var_1;
    var_4 = self.origin + var_3;
    physicsexplosionsphere( var_4, var_1, 1, 2.5 );
    var_5 = _id_0A4A::_id_7DB0( "axis" );
    var_6 = scripts\engine\utility::_id_782F( self.origin, var_5, undefined, 24, 256 );

    foreach ( var_8 in var_6 )
    {
        if ( isdefined( var_8.agent_type ) && ( var_8.agent_type == "zombie_sasquatch" || var_8.agent_type == "slasher" || var_8.agent_type == "superslasher" || var_8.agent_type == "zombie_brute" || var_8.agent_type == "zombie_grey" || var_8.agent_type == "zombie_clown" || var_8.agent_type == "alien_rhino" ) )
            continue;

        if ( scripts\engine\utility::_id_9CEE( var_8._id_9342 ) )
        {
            var_8 _id_A672( self, var_8.maxhealth, var_8.origin, self.origin );
            continue;
        }

        var_8 playsound( "zmb_fnf_second_wind_push" );
        var_9 = 0;
        var_10 = var_8.origin;
        var_11 = var_8.maxhealth;
        var_2 = anglestoforward( self.angles );
        var_12 = vectornormalize( var_2 ) * -100;
        var_8 _meth_8366( vectornormalize( var_8.origin - ( self.origin + var_12 ) ) * 800 + ( 0, 0, 300 ) );
        var_8 _id_A672( self, var_11, var_10, self.origin );
    }
}

_id_A672( var_0, var_1, var_2, var_3 )
{
    self._id_5793 = 1;

    if ( var_1 >= self.health )
        self._id_4C87 = 1;

    self _meth_80B0( var_1, var_2, var_0, var_0, "MOD_IMPACT", "zom_repulsor_mp" );
}

torrent_start( var_0, var_1, var_2, var_3, var_4 )
{
    self endon( "death" );
    level endon( "game_ended" );

    if ( var_3 == 0 || var_3 == 3 || var_3 == 6 )
        playloopsound( var_1, "zmb_fnf_timely_torrent_lava" );

    playfx( level._effect["lava_torrent"], self.origin, undefined, anglestoup( ( 0, 0, 90 ) ) );

    foreach ( var_6 in var_2 )
    {
        var_7 = ( var_6.origin[0], var_6.origin[1], 90 );

        if ( var_6 _id_0A77::agentisfnfimmune() )
            continue;

        if ( isdefined( var_6._id_6F73 ) || isdefined( var_6.agent_type ) && ( var_6.agent_type == "zombie_brute" || var_6.agent_type == "zombie_ghost" || var_6.agent_type == "zombie_grey" || var_6.agent_type == "slasher" || var_6.agent_type == "superslasher" ) )
            continue;

        if ( distancesquared( var_6.origin, var_1 ) < 5184 )
        {
            var_6._id_6F73 = 1;
            var_6._id_5793 = 1;
            var_6._id_5502 = 1;
            var_6 _meth_8500( 0 );
            var_6 _meth_8366( ( 0, 0, 600 ) );
            wait 0.1;

            if ( isdefined( var_6 ) )
                var_6 _meth_80B0( 10000, var_1, var_4, var_4, "MOD_EXPLOSIVE" );
        }
    }

    self delete();
}

use_timely_torrent( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    level endon( "game_ended" );
    thread run_timely_torrent( var_0 );
}

select_spot_array( var_0, var_1 )
{
    if ( !isdefined( var_0.array_of_torrent_points ) )
        var_0.array_of_torrent_points = [];

    var_2 = var_0.origin;
    var_3 = ( 0, 128, 0 );
    var_4 = var_0 getplayerangles();
    var_5 = 7;
    var_6 = 0;
    var_2 = var_2 + var_3[0] * anglestoright( var_4 );
    var_2 = var_2 + var_3[1] * anglestoforward( var_4 );
    var_2 = var_2 + var_3[2] * anglestoup( var_4 );
    var_7 = rotatepointaroundvector( anglestoup( var_4 ), anglestoforward( var_4 ), 0 );
    var_8 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_vehicleclip", "physicscontents_item", "physicscontents_detail", "physicscontents_vehicleclip", "physicscontents_vehicle", "physicscontents_canshootclip", "physicscontents_missileclip", "physicscontents_clipshot" ] );
    var_9 = scripts\engine\trace::_id_DCED( var_0 geteye(), var_2 + var_7, var_0, var_8 );
    var_2 = var_9["position"] + var_7;

    if ( var_1 == 0 )
        var_0.array_of_torrent_points[var_1] = var_2 + anglestoforward( var_4 ) * 60;
    else
        var_0.array_of_torrent_points[var_1] = var_2 + anglestoforward( var_4 ) * ( var_1 + 1 ) * 60;

    return var_0.array_of_torrent_points;
}

run_timely_torrent( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_1 = [];
    var_2 = 0;

    for (;;)
    {
        self waittill( "melee_fired" );

        for ( var_3 = 0; var_3 <= 5; var_3++ )
            var_1 = select_spot_array( self, var_3 );

        var_4 = 1200;
        self.closestenemies_array = [];
        var_5 = _id_0A4A::_id_77FD();

        foreach ( var_8, var_7 in var_1 )
            var_1[var_8] = spawn( "script_origin", var_7 );

        foreach ( var_8, var_7 in var_1 )
        {
            if ( !isdefined( var_7 ) )
                continue;

            var_7 thread torrent_start( var_0, var_7.origin, var_5, var_8, self );
        }

        _id_0A77::_id_C151( "timely_torrent" );
    }
}

use_purify( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    level endon( "game_ended" );

    if ( !isdefined( level.purify_active ) )
        level.purify_active = 1;
    else
        level.purify_active++;

    foreach ( var_2 in level.players )
    {
        if ( var_2 _id_0A77::_id_9D05() )
            thread purify_activate( var_2 );
    }

    var_4 = scripts\engine\utility::_id_782F( self.origin, level.players, undefined, 24, 99999, 0 );

    foreach ( var_6 in var_4 )
    {
        var_6 thread dealaoedamage( var_0 );
        wait 0.1;
    }

    _id_0A77::_id_C151( "purify" );
    return 1;
}

purify_activate( var_0 )
{
    var_0 notify( "force_regeneration" );
    thread disablepurifyregenafterdelay();
}

disablepurifyregenafterdelay()
{
    level endon( "game_ended" );
    wait 2;
    level.purify_active--;

    if ( level.purify_active <= 0 )
        level.purify_active = 0;
}

dealaoedamage( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_1 = _id_0A4A::_id_77FD();
    var_2 = scripts\engine\utility::_id_782F( self.origin, var_1, undefined, 24, 128, 0 );

    if ( var_2.size > 0 )
    {
        self notify( "force_regeneration" );

        foreach ( var_4 in var_2 )
        {
            if ( isdefined( var_4.agent_type ) && ( var_4.agent_type == "zombie_brute" || var_4.agent_type == "zombie_ghost" || var_4.agent_type == "zombie_grey" || var_4.agent_type == "slasher" || var_4.agent_type == "alien_rhino" || var_4.agent_type == "superslasher" ) )
                continue;
            else
            {
                playfx( level._effect["penetration_railgun_explosion"], self.origin );
                var_4 _meth_80B0( var_4.health + 100, var_4.origin, self, self, "MOD_EXPLOSIVE", "iw7_explosive_touch_zm" );
            }
        }

        self playsound( "zmb_fnf_purify_explo" );
    }
}

_id_6220( var_0, var_1, var_2, var_3, var_4, var_5 )
{
    var_0 _meth_818F( var_1, var_2, var_3, var_4 );
}

_id_5561( var_0, var_1 )
{
    var_0 _meth_818C( var_1 );
}

_id_1309( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = magicbullet( var_0, var_1, var_2, var_3, var_4 );

    if ( isdefined( var_5 ) && isdefined( var_3 ) )
        var_5 _meth_831F( var_3 );

    return var_5;
}

_id_12FFB( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    level endon( "game_ended" );
    thread _id_E16D( var_0 );

    for (;;)
    {
        self waittill( "player_damaged" );
        _id_0A63::_id_82F9( 100, undefined, undefined, 1, "bonus" );
    }
}

use_explosive_touch( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );
    thread _id_E00B( var_0 );

    for (;;)
    {
        if ( !scripts\engine\utility::_id_9CEE( self.has_explosive_touch ) )
        {
            self.has_explosive_touch = 1;
            thread watch_for_zombie_touch( var_0 );
            _id_0A77::_id_17C0( "health_boost", 0.1, 0 );
            self notify( "force_regeneration" );
            self playlocalsound( "breathing_heartbeat_alt" );
        }

        scripts\engine\utility::waitframe();
    }
}

watch_for_zombie_touch( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );

    while ( scripts\engine\utility::_id_9CEE( self.has_explosive_touch ) )
    {
        var_1 = _id_0A4A::_id_77FD();

        foreach ( var_3 in var_1 )
        {
            if ( scripts\engine\utility::_id_56F4( var_3.origin, self.origin ) <= 5184 )
            {
                if ( var_3 _id_0A77::agentisfnfimmune() )
                    continue;

                if ( var_3 _id_0A77::_id_9D20() && ( var_3.agent_type != "slasher" && var_3.agent_type != "superslasher" && var_3.agent_type != "zombie_brute" && var_3.agent_type != "zombie_grey" ) )
                {
                    var_3.exp_touch = 1;
                    var_3._id_C026 = 1;
                    var_3._id_74B5 = 1;
                    playloopsound( var_3 gettagorigin( "j_spineupper" ), "zmb_fnf_explosive_touch_explo" );
                    wait 0.1;
                    playfx( scripts\engine\utility::_id_7ECB( "exp_touch" ), var_3 gettagorigin( "j_spineupper" ) );
                    self _meth_8253( self.origin, 100, var_3.health + 1000, var_3.health, self, "MOD_EXPLOSIVE", "iw7_explosive_touch_zm" );
                    wait 0.3;
                }
            }
        }

        scripts\engine\utility::waitframe();
    }
}

_id_E00B( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    scripts\engine\utility::waittill_any( var_0 + "_timeup", var_0 + "_exited_early" );
    self.has_explosive_touch = 0;
    _id_0A77::_id_E0E6( "health_boost", 0 );

    if ( isdefined( self._id_6A08 ) )
        self._id_6A08 delete();
}

use_shared_fate( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );
    self.marked_ents = [];
    thread look_at_and_outline_enemies( var_0 );
    thread damage_on_marked_enemies( var_0 );
}

damage_on_marked_enemies( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );

    for (;;)
    {
        self waittill( "weapon_hit_marked_target", var_1, var_2, var_3, var_4, var_5 );
        self.marked_ents = scripts\engine\utility::_id_22BC( self.marked_ents );
        self.marked_ents = scripts\engine\utility::array_remove( self.marked_ents, var_5 );

        foreach ( var_7 in self.marked_ents )
        {
            if ( var_5 == var_7 )
                continue;

            if ( var_7 _id_0A77::agentisfnfimmune() )
                continue;

            if ( var_7.health - var_2 <= 0 )
                var_7 setscriptablepartstate( "shared_fate_fx", "inactive", 1 );

            self.marked_ents = scripts\engine\utility::array_remove( self.marked_ents, var_7 );
            var_7 _meth_80B0( var_2, var_7.origin, var_1, var_1, var_3, "iw7_shared_fate_weapon" );
        }
    }
}

outline_enemeies( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );

    for (;;)
    {
        foreach ( var_2 in self.marked_ents )
        {
            if ( var_2 _id_0A77::agentisfnfimmune() )
                continue;

            if ( isdefined( var_2.agent_type ) && ( var_2.agent_type == "zombie_sasquatch" || var_2.agent_type == "slasher" || var_2.agent_type == "superslasher" || var_2.agent_type == "zombie_brute" || var_2.agent_type == "zombie_grey" || var_2.agent_type == "zombie_clown" || var_2.agent_type == "skater" ) )
                continue;

            if ( _id_0A77::_id_9C42( self getcurrentweapon() ) || _id_0A77::weapon_is_dlc_melee( self getcurrentweapon() ) || _id_0A77::weapon_is_dlc2_melee( self getcurrentweapon() ) )
            {
                scripts\engine\utility::waitframe();
                continue;
            }

            if ( scripts\engine\utility::_id_9CEE( var_2.marked_shared_fate_fnf ) )
            {
                var_2 setscriptablepartstate( "shared_fate_fx", "active", 1 );
                continue;
            }

            if ( isdefined( var_2 ) )
                var_2 setscriptablepartstate( "shared_fate_fx", "inactive", 1 );
        }

        scripts\engine\utility::waitframe();
    }
}

look_at_and_outline_enemies( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );
    var_1 = 0;

    for (;;)
    {
        if ( self adsbuttonpressed() && !var_1 )
        {
            if ( _id_0A77::_id_9C42( self getcurrentweapon() ) || _id_0A77::weapon_is_dlc_melee( self getcurrentweapon() ) )
            {
                scripts\engine\utility::waitframe();
                continue;
            }

            var_1 = 1;
            var_2 = self getplayerangles();
            var_3 = self geteye();
            var_4 = anglestoforward( var_2 );
            var_5 = var_3 + var_4 * 500;
            var_6 = scripts\engine\trace::_id_48BC( 1, 0, 0, 0, 0, 0, 0 );
            var_7 = physics_raycast( var_3, var_5, var_6, self, 0, "physicsquery_closest" );

            if ( var_7.size <= 0 )
            {
                scripts\engine\utility::waitframe();
                continue;
            }

            var_8 = var_7[0]["entity"];

            if ( isdefined( var_8 ) )
            {
                if ( var_8 _id_0A77::agentisfnfimmune() )
                    continue;

                if ( isdefined( var_8.agent_type ) && ( var_8.agent_type == "zombie_sasquatch" || var_8.agent_type == "slasher" || var_8.agent_type == "superslasher" || var_8.agent_type == "zombie_brute" || var_8.agent_type == "zombie_grey" || var_8.agent_type == "zombie_clown" ) )
                    continue;

                if ( var_8 _id_0A77::_id_9D20() )
                {
                    if ( !scripts\engine\utility::array_contains( self.marked_ents, var_8 ) )
                    {
                        self playlocalsound( "zmb_fnf_shared_fate_highlight" );
                        var_8.marked_shared_fate_fnf = 1;
                        self.marked_ents = scripts\engine\utility::_id_2279( self.marked_ents, var_8 );
                        var_8 setscriptablepartstate( "shared_fate_fx", "active", 1 );
                    }
                }
            }

            var_1 = 0;
        }
        else
            var_1 = 0;

        scripts\engine\utility::waitframe();
    }
}

use_fire_chains( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "last_stand" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    self.life_link_active = undefined;
    self._id_AC4B = 1;
    var_1 = "j_spine4";
    var_2 = [ "j_spine4", "j_spineupper", "j_spinelower", "j_head", "j_knee_ri", "j_knee_le", "j_elbow_ri", "j_elbow_le", "j_ankle_le", "j_ankle_ri", "j_wrist_le", "j_wrist_ri" ];
    thread removefirechainsdamagemodifierontimeout( var_0 );
    thread removefirechainsdamagemodifieronlaststand( var_0 );
    var_3 = self;

    for (;;)
    {
        var_4 = getfirechainstarget( self );

        if ( isdefined( var_4 ) )
        {
            self._id_2A9A = var_4;
            self._id_AD2D = 1;
            thread playfirechainsfx( var_4, var_1, var_0 );
            var_3.life_link_active = 1;
            linktoplayer_fire_chains( self, var_4, var_2 );
        }
        else
        {
            var_3.life_link_active = undefined;
            wait 0.5;
        }

        scripts\engine\utility::waitframe();
    }
}

getfirechainstarget( var_0 )
{
    var_1 = scripts\engine\utility::_id_782F( var_0.origin, level.players, [ var_0 ], 4, 512 );
    var_2 = sortbydistance( var_1, var_0.origin );
    var_3 = undefined;

    foreach ( var_5 in var_2 )
    {
        var_6 = sighttracepassed( var_0 geteye(), var_5 geteye(), 0, var_0 );

        if ( !var_6 )
            continue;

        if ( scripts\engine\utility::_id_9CEE( var_5._id_98F3 ) )
            continue;

        var_3 = var_5;
        break;
    }

    return var_3;
}

linktoplayer_fire_chains( var_0, var_1, var_2 )
{
    var_1 endon( "disconnect" );
    var_0 endon( "disconnect" );

    while ( scripts\engine\utility::_id_9CEE( var_0._id_AD2D ) )
    {
        thread deal_damage_to_zombies_entering_the_link( self, var_2 );

        if ( scripts\engine\utility::_id_9CEE( var_1._id_98F3 ) )
        {
            var_0._id_AD2D = undefined;
            var_0 notify( "lost_target_fire_chains" );
            break;
        }
        else if ( distance( var_0.origin, var_1.origin ) > 512 )
        {
            var_0._id_AD2D = undefined;
            var_0 notify( "lost_target_fire_chains" );
            break;
        }

        scripts\engine\utility::waitframe();
    }
}

deal_damage_to_zombies_entering_the_link( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_2 = [];
    var_3 = scripts\engine\trace::_id_48B1();
    var_2 = [ var_0, var_0._id_2A9A ];

    if ( !isdefined( var_0._id_2A9A ) )
        return;

    foreach ( var_5 in var_1 )
    {
        var_6 = scripts\engine\trace::_id_DCED( var_0 gettagorigin( var_5 ), var_0._id_2A9A gettagorigin( var_5 ), var_2, var_3 );

        if ( isdefined( var_6["entity"] ) )
        {
            if ( var_6["entity"] _id_0A77::agentisfnfimmune() )
                continue;

            var_7 = scripts\engine\utility::_id_9CEE( var_6["entity"].is_skeleton );

            if ( level.script == "cp_final" )
                var_7 = 0;

            if ( var_6["entity"] _id_0A77::_id_9D20() && ( var_6["entity"].agent_type != "slasher" && var_6["entity"].agent_type != "superslasher" && var_6["entity"].agent_type != "zombie_brute" && var_6["entity"].agent_type != "zombie_grey" ) )
            {
                scripts\engine\utility::_id_2279( var_2, var_6["entity"] );
                var_6["entity"]._id_C026 = 1;
                var_6["entity"]._id_74B5 = 1;
                var_6["entity"] _meth_80B0( 1000000, var_6["entity"].origin, var_0, var_0 );
            }
        }
    }
}

playfirechainsfx( var_0, var_1, var_2 )
{
    var_3 = [];

    foreach ( var_5 in level.players )
        var_3[var_3.size] = playfxontagsbetweenclients( level._effect["fire_chains"], self, var_1, var_0, var_1, var_5 );

    self.fx_array_fire_chains = var_3;
    self playloopsound( "zmb_fnf_fire_chains_lp" );
    var_0 playloopsound( "zmb_fnf_fire_chains_lp" );
    var_7 = _id_0A77::_id_1372D( self, "disconnect", self, "lost_target_fire_chains", self, "last_stand", self, var_2 + "_timeup", var_0, "disconnect", var_0, "last_stand", level, "game_ended" );

    if ( isdefined( self ) )
        self stoploopsound();

    if ( isdefined( var_0 ) )
        var_0 stoploopsound();

    foreach ( var_9 in var_3 )
    {
        if ( isdefined( var_9 ) )
            var_9 delete();
    }
}

removefirechainsdamagemodifieronlaststand( var_0 )
{
    self endon( var_0 + "_timeup" );
    self waittill( "last_stand" );
    self._id_AC4B = undefined;
    self.life_link_active = undefined;

    if ( isdefined( self._id_AD2D ) )
        self._id_AD2D = undefined;

    self notify( var_0 + "_exited_early" );
}

removefirechainsdamagemodifierontimeout( var_0 )
{
    self endon( "last_stand" );
    self waittill( var_0 + "_timeup" );
    self._id_AC4B = undefined;
    self.life_link_active = undefined;

    if ( isdefined( self._id_AD2D ) )
        self._id_AD2D = undefined;
}

use_irish_luck( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "last_stand" );
    self endon( "disconnect" );
    level endon( "game_ended" );
}

irish_luck_choose_random_consumable( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( !isdefined( var_0.stored_fnf ) )
        var_0.stored_fnf = [];

    foreach ( var_3, var_2 in var_0._id_456B )
        var_0.stored_fnf[var_3] = var_3;

    for (;;)
    {
        var_4 = scripts\engine\utility::_id_DC6B( level.irish_luck_consumables );

        if ( getdvar( "irish_luck_debug", "" ) != "" )
        {
            var_0.stored_fnf = [];
            var_5 = getdvar( "irish_luck_debug", "" );

            foreach ( var_8, var_7 in level.irish_luck_consumables )
            {
                if ( var_8 == var_5 )
                    var_4 = level.irish_luck_consumables[var_8];
            }
        }

        if ( scripts\engine\utility::array_contains( var_0.stored_fnf, var_4.name ) )
        {
            scripts\engine\utility::waitframe();
            continue;
        }
        else
        {
            scripts\engine\utility::waitframe();
            return var_4;
        }

        scripts\engine\utility::waitframe();
    }
}

clear_omnvar( var_0 )
{
    self endon( "disconnect" );
    wait 5;
    self setclientomnvar( var_0, 0 );
}

consumable_activate_internal_irish( var_0, var_1, var_2, var_3, var_4, var_5, var_6 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "dpad_end_" + var_0 );
    self endon( "give_new_deck" );
    self endon( "last_stand" );
    level.random_consumable_chosen = irish_luck_choose_random_consumable( self );

    if ( self._id_456B[var_0]._id_130D1 > 0 && self._id_456B[var_0]._id_C4A4 == 0 && !_id_0A5B::_id_D0EF( self ) )
    {
        self._id_456B[level.random_consumable_chosen.name] = spawnstruct();
        self._id_456B[level.random_consumable_chosen.name]._id_130D1 = level._id_456B[level.random_consumable_chosen.name]._id_130D1;
        self._id_456B[level.random_consumable_chosen.name]._id_C4A4 = 1;
        self._id_456B[level.random_consumable_chosen.name]._id_11925 = 0;
        self._id_456B[level.random_consumable_chosen.name]._id_1307B = var_4;
        level.random_consumable_chosen._id_DE3F = int( tablelookup( "cp/loot/iw7_zombiefatefortune_loot_master.csv", 1, level.random_consumable_chosen.name, 0 ) );
        self setclientomnvar( "zm_ui_irish_luck", level.random_consumable_chosen._id_DE3F );
        thread clear_omnvar( "zm_ui_irish_luck" );
        self setclientomnvar( "zm_fate_card_used", var_5 );
        self._id_456B[var_0]._id_D9A1 = 1;
        var_7 = undefined;
        var_8 = "fired_super";
        thread _id_F306( var_0 );

        if ( isdefined( level._id_456B[level.random_consumable_chosen.name]._id_13089 ) )
        {
            if ( isdefined( level._id_456B[level.random_consumable_chosen.name]._id_1174E ) )
                var_7 = self [[ level._id_456B[level.random_consumable_chosen.name]._id_13089 ]]( level.random_consumable_chosen.name );
            else
                var_7 = self thread [[ level._id_456B[level.random_consumable_chosen.name]._id_13089 ]]( level.random_consumable_chosen.name );
        }

        self._id_456B[var_0]._id_C4A4 = 0;

        if ( !isdefined( var_7 ) || isdefined( var_7 ) && var_7 )
        {
            _id_4574( self, var_0 );
            self._id_456B[var_0]._id_11925++;
            _id_0D45::_id_AF6C( 1, var_0, level._id_13BD3, self );
            _id_0A5E::_id_D9AD( "mt_faf_uses" );
            thread _id_0A6A::_id_12885( "wonder_consume", "zmb_comment_vo", "low", 10, 0, 1, 0, 40 );

            if ( self._id_456B[var_0]._id_11925 == 1 )
                thread decrement_counter_of_consumables( var_0 );

            thread _id_ACAF();
            self setclientomnvar( "zm_dpad_up_activated", 5 );
            self _meth_82BE( "zm_card_fill_display", var_5, 1 );
            self setclientomnvar( "zm_consumable_selection_ready", 0 );
            _id_DFD4( var_6 );
            thread _id_B69D();
            self playlocalsound( "ui_consumable_select" );
            _id_CCCC( self );
            self notify( "consumable_selected" );
            self setweaponammostock( self._id_6BA3, 1 );
            self _meth_84FF( self._id_6BA3 );
            self._id_4561 = undefined;
            thread _id_0A6A::_id_E01F( "nag_use_fateandfort" );
            var_9 = level._id_456B[level.random_consumable_chosen.name].type;

            if ( var_9 == "timedactivations" )
                thread _id_5B02( level.random_consumable_chosen.name, level._id_456B[level.random_consumable_chosen.name]._id_12F9A, var_1, var_8, var_2, var_3, var_4, var_5 );
            else if ( var_9 == "wave" )
                thread _id_5B04( level.random_consumable_chosen.name, level._id_456B[level.random_consumable_chosen.name]._id_12F9A, var_1, var_8, var_2, var_3, var_4, var_5 );
            else if ( var_9 == "triggernow" || level._id_456B[level.random_consumable_chosen.name].type == "triggerwait" )
                thread _id_5B01( level.random_consumable_chosen.name, level._id_456B[level.random_consumable_chosen.name].type, self._id_456B[level.random_consumable_chosen.name]._id_130D1, var_1, var_8, var_2, var_3, var_4, var_5 );
            else if ( var_9 == "triggerpassive" )
                thread _id_5B03( level.random_consumable_chosen.name, level._id_456B[level.random_consumable_chosen.name]._id_C948, var_1, var_8, var_2, var_3, var_4, var_5 );

            if ( isdefined( var_7 ) )
            {
                _id_0A77::_id_C151( var_0 );
                return;
            }
        }
        else
        {
            self playlocalsound( "ui_consumable_deny" );
            self._id_456B[var_0]._id_D9A1 = undefined;
        }
    }
}

use_temporal_increase( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );
    self endon( "last_stand" );

    if ( isdefined( level.temporal_increase ) )
        return 0;

    level.temporal_increase = 2;
    thread remove_temporal_increase( var_0 );
}

remove_temporal_increase( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    scripts\engine\utility::waittill_any( var_0 + "_timeup", "disconnect", "death", var_0 + "_exited_early" );
    level.temporal_increase = undefined;
    return 1;
}

use_twister( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    self endon( "death" );
    self endon( "last_stand" );
    level endon( "game_ended" );
    var_1 = self getplayerangles();
    var_2 = self geteye();
    var_3 = ( 0, 0, 0 );
    var_4 = anglestoforward( var_1 );
    var_5 = var_2 + var_4 * 100;
    thread remove_twister( var_0, self );
    thread activate_twister_homing( self.origin, var_0 );
}

remove_twister( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 scripts\engine\utility::waittill_any( var_0 + "_timeup", var_0 + "_exited_early", "disconnect" );
    level notify( "stop_twister_sfx" );

    if ( isdefined( var_1._id_757B ) )
        var_1._id_757B delete();

    if ( isdefined( var_1.trigger_move_ent ) )
        var_1.trigger_move_ent delete();
}

activate_twister_homing( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( var_1 + "_timeup" );
    self endon( var_1 + "_exited_early" );
    level endon( "game_ended" );

    if ( !isdefined( self.twister_array_zombie ) )
        self.twister_array_zombie = [];

    self.trigger_move_ent = spawn( "script_model", var_0, 0, 512, 128 );
    self.trigger_move_ent setmodel( "tag_origin" );
    level.trigger_move_ent_sfx = spawn( "script_model", var_0, 0, 512, 128 );
    level.trigger_move_ent_sfx linkto( self.trigger_move_ent );
    wait 0.5;
    level.trigger_move_ent_sfx thread twister_sfx();
    playfxontag( level._effect["twister"], self.trigger_move_ent, "tag_origin" );
    self.trigger_move_ent _meth_831F( self );
    self.trigger_move_ent thread deal_damage_to_enemies( self, var_1 );
    thread move_ent_function( self.trigger_move_ent, var_1 );
}

twister_sfx()
{
    self playsound( "fnf_tornado_start_lr" );
    wait 0.4;
    self playloopsound( "fnf_tornado_lr_lp" );
    level waittill( "stop_twister_sfx" );
    level thread scripts\engine\utility::_id_CE2B( "fnf_tornado_stop_lr", self.origin );
    wait 0.15;
    self stoploopsound();
    self delete();
}

get_zombie_targets( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_0 endon( var_1 + "_timeup" );
    var_0 endon( var_1 + "_exited_early" );
    level endon( "game_ended" );

    for (;;)
    {
        var_2 = _id_0A4A::_id_77FD();
        var_3 = scripts\engine\utility::_id_782F( var_0.origin, var_2, undefined, 24, 2048 );

        if ( isdefined( level.dlc4_boss ) )
        {
            if ( scripts\engine\utility::array_contains( var_3, level.dlc4_boss ) )
                var_3 = scripts\engine\utility::array_remove( var_3, level.dlc4_boss );
        }

        if ( var_3.size <= 0 )
        {
            scripts\engine\utility::waitframe();
            var_0.twister_array_zombie = [];
            var_0.twister_array_zombie[var_0.twister_array_zombie.size] = getclosestpointonnavmesh( self.origin ) + ( 0, 10, 0 );
            continue;
        }
        else
        {
            foreach ( var_5 in var_3 )
            {
                if ( var_5 _id_0A77::agentisfnfimmune() && var_5.agent_type != "alien_rhino" )
                {
                    scripts\engine\utility::waitframe();
                    continue;
                }

                if ( scripts\engine\utility::_id_9CEE( level.meph_fight_started ) )
                {
                    if ( var_5 _id_0A77::agentisfnfimmune() )
                    {
                        scripts\engine\utility::waitframe();
                        continue;
                    }
                    else
                        var_0.twister_array_zombie = var_0 _meth_8428( var_0.origin, scripts\engine\utility::_id_5D14( var_3[var_3.size - 1].origin, 1, 1 ) );

                    continue;
                }

                if ( isdefined( level.rhino_array ) && level.rhino_array.size > 0 )
                {
                    var_0.twister_array_zombie = var_0 _meth_8428( var_0.origin, scripts\engine\utility::_id_5D14( var_3[var_3.size - 1].origin, 1, 1 ) );
                    continue;
                }

                if ( scripts\engine\utility::_id_9CEE( var_5._id_6622 ) )
                    var_0.twister_array_zombie = var_0 _meth_8428( var_0.origin, scripts\engine\utility::_id_5D14( var_3[var_3.size - 1].origin, 1, 1 ) );
            }
        }

        wait 2.5;
    }
}

deal_damage_to_enemies( var_0, var_1 )
{
    self endon( "death" );
    var_0 endon( "disconnect" );
    var_0 endon( var_1 + "_timeup" );
    var_0 endon( var_1 + "_exited_early" );
    level endon( "game_ended" );

    for (;;)
    {
        var_2 = _id_0A4A::_id_77FD();

        foreach ( var_4 in var_2 )
        {
            if ( !isdefined( var_4 ) )
                continue;

            if ( !var_4 _id_0A77::_id_9D20() )
                continue;

            if ( distance2dsquared( self.origin, var_4.origin ) < 22500 )
            {
                if ( var_4 _id_0A77::agentisfnfimmune() )
                {
                    var_4 _meth_80B0( 5, var_4.origin, var_0, var_0, "MOD_UNKNOWN" );
                    continue;
                }

                if ( isdefined( var_4.agent_type ) && ( var_4.agent_type == "slasher" || var_4.agent_type == "superslasher" ) )
                {
                    var_4 _meth_80B0( 1000, var_4.origin, var_0, var_0, "MOD_UNKNOWN" );
                    continue;
                }

                var_4 thread fling_zombie_thundergun_harpoon( var_4.health + 1000, var_4, var_0, self );
            }
        }

        wait 1;
    }
}

fling_zombie_thundergun_harpoon( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    var_3 endon( "death" );

    if ( !isdefined( var_3 ) )
        return;

    var_4 = var_1.origin - var_3.origin;
    var_5 = anglestoup( self.angles );
    self _meth_8366( vectornormalize( ( var_3.origin - self.origin ) * 400 ) + ( 0, 0, 800 ) );
    wait 0.16;

    if ( isdefined( var_2 ) )
    {
        var_1._id_5793 = 1;
        var_1._id_5502 = 1;
        var_1._id_4C87 = 1;
        wait 0.1;
        var_1._id_C026 = 1;
        var_1._id_74B5 = 1;
        self _meth_80B0( self.health + 1000, var_1.origin, var_2, var_2, "MOD_UNKNOWN", "iw7_twister_zm" );
    }
    else
    {
        self._id_C026 = 1;
        self._id_74B5 = 1;
        self _meth_80B0( self.health + 1000, var_1.origin, var_1, var_1, "MOD_UNKNOWN", "iw7_twister_zm" );
    }
}

move_ent_function( var_0, var_1 )
{
    self endon( "disconnect" );
    self endon( var_1 + "_timeup" );
    self endon( var_1 + "_exited_early" );
    var_2 = 0;
    thread get_zombie_targets( self, var_1 );

    for (;;)
    {
        if ( !isdefined( self.twister_array_zombie[var_2] ) && var_2 >= self.twister_array_zombie.size )
        {
            if ( self.twister_array_zombie.size > 0 )
            {
                if ( isdefined( self.twister_array_zombie[0] ) )
                {
                    if ( [[ level._id_164B ]]( self.twister_array_zombie[0] ) )
                        var_0 moveto( self.twister_array_zombie[0], 0.5, 0.25, 0 );
                    else
                    {
                        var_3 = getclosestpointonnavmesh( self.twister_array_zombie[0] ) + ( 0, 10, 0 );
                        var_0 moveto( var_3, 0.5 );
                    }

                    var_2--;
                }
            }
            else
                var_2 = 0;

            scripts\engine\utility::waitframe();
            continue;
        }
        else
            var_0 moveto( self.twister_array_zombie[var_2], 0.5, 0, 0 );

        var_2 = var_2 + 1;
        scripts\engine\utility::waitframe();
    }
}

use_dodge_mode( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    self endon( "last_stand" );
    self endon( "death" );
    level endon( "game_ended" );
    self _meth_842E( 1, 50 );
    self _meth_842C( 1, 50 );
    self _meth_8434( 1, 25 );
    self _meth_8430( 1, 0 );
    self _meth_8412( 1 );
    self _meth_8454( 5 );
    thread _id_139F9( var_0 );
    thread remove_dodge_mode( var_0 );
}

remove_dodge_mode( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    scripts\engine\utility::waittill_any( var_0 + "_timeup", var_0 + "_exited_early", "death", "last_stand" );
    self _meth_8412( 0 );
    self notify( var_0 + "_timeup" );
    self notify( var_0 + "_exited_early" );
}

watchforzombiecollisions( var_0 )
{
    self endon( "death" );
    self endon( "disconnect" );
    self notify( "setDodge" );
    self endon( "setDodge" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    level endon( "game_ended" );
    self endon( "last_stand" );

    while ( scripts\engine\utility::_id_9CEE( self._id_5812 ) )
    {
        var_1 = _id_0A4A::_id_77FD();

        foreach ( var_3 in var_1 )
        {
            if ( scripts\engine\utility::_id_56F4( var_3.origin, self.origin ) <= 5184 )
            {
                if ( var_3 _id_0A77::agentisfnfimmune() )
                    continue;

                if ( var_3 _id_0A77::_id_9D20() && ( var_3.agent_type != "slasher" && var_3.agent_type != "superslasher" && var_3.agent_type != "zombie_brute" && var_3.agent_type != "zombie_grey" ) )
                {
                    var_3.exp_touch = 1;
                    var_3._id_C026 = 1;
                    var_3._id_74B5 = 1;
                    var_3.hit_by_dodging_player = 1;
                    playloopsound( var_3 gettagorigin( "j_spineupper" ), "zmb_fnf_explosive_touch_explo" );
                    wait 0.1;
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_touch" ), var_3 gettagorigin( "j_spineupper" ) );
                    var_3 _meth_80B0( var_3.health + 100, var_3.origin, self, self, "MOD_EXPLOSIVE", "iw7_pickup_zm" );
                }
            }
        }

        scripts\engine\utility::waitframe();
    }
}

_id_139F9( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    level endon( "game_ended" );
    self endon( "last_stand" );
    self endon( "death" );

    for (;;)
    {
        self waittill( "dodgeBegin" );

        if ( isdefined( self._id_45D6 ) && self._id_45D6 == 1 )
            continue;

        self._id_5812 = 1;
        thread _id_139FB( var_0 );
        thread watchforzombiecollisions( var_0 );
        var_1 = self _meth_814C();

        for (;;)
        {
            if ( var_1[0] > 0 )
            {
                if ( var_1[1] <= 0.7 && var_1[1] >= -0.7 )
                {
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_fwd_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                    break;
                }

                if ( var_1[0] > 0.5 && var_1[1] > 0.7 )
                {
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_fwd_right_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                    break;
                }

                if ( var_1[0] > 0.5 && var_1[1] < -0.7 )
                {
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_fwd_left_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                    break;
                }
            }

            if ( var_1[0] < 0 )
            {
                if ( var_1[1] < 0.4 && var_1[1] > -0.4 )
                {
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_back_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                    break;
                }

                if ( var_1[0] < -0.5 && var_1[1] > 0.5 )
                {
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_back_right_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                    break;
                }

                if ( var_1[0] < -0.5 && var_1[1] < -0.5 )
                {
                    playfx( scripts\engine\utility::_id_7ECB( "dodge_back_left_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                    break;
                }
            }

            if ( var_1[1] > 0.4 )
            {
                playfx( scripts\engine\utility::_id_7ECB( "dodge_right_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                break;
            }

            if ( var_1[1] < -0.4 )
            {
                playfx( scripts\engine\utility::_id_7ECB( "dodge_left_screen" ), self gettagorigin( "tag_eye" ), anglestoforward( self.angles ), anglestoup( self.angles ), self );
                break;
            }
            else
                break;
        }

        self playlocalsound( "zmb_fnf_evade" );
        self playsound( "zmb_fnf_evade_npc" );
    }
}

_id_139FB( var_0 )
{
    level endon( "game_ended" );
    scripts\engine\utility::waittill_any( "dodgeEnd", "death", "disconnect", "last_stand" );
    self._id_5812 = 0;

    if ( isdefined( self._id_5809 ) )
        self._id_5809 delete();
}

use_ammo_crate( var_0 )
{
    if ( isdefined( level.ammo_crate ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    create_ammo_crate_interaction( var_0 );
}

create_ammo_crate_interaction( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    self endon( "death" );
    self endon( "last_stand" );
    level endon( "game_ended" );
    var_1 = scripts\engine\utility::_id_5D14( self.origin, 0, -2000 );
    var_2 = spawn( "script_model", var_1 );
    var_2 setmodel( "tag_origin_ammo_crate" );
    level.ammo_crate = var_2;
    level.ammo_crate thread give_ammo_to_players_standing_nearby( self, var_0 );
    thread remove_ammo_crate( var_0 );
}

give_ammo_to_players_standing_nearby( var_0, var_1 )
{
    var_0 endon( "death" );
    var_0 endon( "last_stand" );
    self endon( "death" );
    var_0 endon( "disconnect" );
    var_0 endon( var_1 + "_timeup" );
    var_0 endon( var_1 + "_exited_early" );
    level endon( "game_ended" );

    for (;;)
    {
        foreach ( var_0 in level.players )
        {
            if ( !isdefined( var_0 ) )
                continue;

            if ( distance2dsquared( self.origin, var_0.origin ) < 22500 )
            {
                if ( var_0 cangive_ammo() )
                {
                    playfx( level._effect["ammo_crate_ping"], self.origin, anglestoforward( self.angles ), anglestoup( self.angles ) );
                    var_0 give_ammo_to_player_through_crate();
                    var_0 notify( "consumable_charge", 150 );
                    var_0 thread _id_0A6A::_id_12885( "pillage_ammo", "zmb_comment_vo", "low", 10, 0, 1, 0, 50 );
                    scripts\engine\utility::waitframe();
                    continue;
                }

                var_0 _id_0A77::_id_F78C( "max_ammo", &"COOP_GAME_PLAY_AMMO_MAX", 3 );
            }
        }

        wait 5;
    }
}

cangive_ammo()
{
    var_0 = _id_0A77::getvalidtakeweapon();
    var_1 = self getweaponammoclip( var_0 );
    var_2 = weaponclipsize( var_0 );
    var_3 = weaponmaxammo( var_0 );
    var_4 = self getweaponammostock( var_0 );

    if ( var_4 < var_3 || var_1 < var_2 )
        return 1;
    else
        return 0;
}

give_ammo_to_player_through_crate()
{
    var_0 = self getweaponslistprimaries();

    foreach ( var_2 in var_0 )
    {
        if ( !_id_0A77::_id_9D05() )
            continue;

        if ( weapontype( var_2 ) == "riotshield" )
            continue;

        if ( _id_0A6B::_id_9C22( var_2 ) )
            continue;

        var_3 = weaponclipsize( var_2 );
        adjust_clip_ammo_from_stock( self, var_2, "right", var_3, 0 );

        if ( self _meth_819C() )
            adjust_clip_ammo_from_stock( self, var_2, "left", var_3, 1 );
    }

    self playlocalsound( "weap_ammo_pickup" );
}

adjust_clip_ammo_from_stock( var_0, var_1, var_2, var_3, var_4 )
{
    if ( !scripts\engine\utility::_id_9CEE( var_4 ) )
    {
        var_5 = weaponmaxammo( var_1 );
        var_6 = var_0 getweaponammostock( var_1 );
        var_7 = var_5 - var_6;
        var_8 = scripts\engine\utility::ter_op( var_7 >= var_3, var_6 + var_3, var_5 );
        var_0 setweaponammostock( var_1, var_8 );
    }

    var_9 = var_0 getweaponammoclip( var_1, var_2 );
    var_10 = var_3 - var_9;
    var_11 = min( var_9 + var_10, var_3 );
    var_0 setweaponammoclip( var_1, int( var_11 ), var_2 );
}

remove_ammo_crate( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    scripts\engine\utility::waittill_any( var_0 + "_timeup", var_0 + "_exited_early", "last_stand", "death" );
    _id_0A77::_id_C151( "ammo_crate" );

    if ( isdefined( level.ammo_crate ) )
        level.ammo_crate delete();
}

use_stimulus( var_0 )
{
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self endon( var_0 + "_exited_early" );
    self endon( "death" );
    self endon( "last_stand" );
    level endon( "game_ended" );
    self.stimulus_active = 1;
    thread remove_stimulus( var_0 );
}

revive_downed_entities( var_0 )
{
    var_0 _id_0D44::_id_1794();
    _id_0A5B::_id_992F( var_0 );
    var_0 thread _id_0D44::_id_E0AE( 0.1 );
}

remove_stimulus( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    scripts\engine\utility::waittill_any( var_0 + "_timeup", var_0 + "_exited_early", "last_stand", "death" );

    if ( scripts\engine\utility::_id_9CEE( self.stimulus_active ) )
        self.stimulus_active = undefined;
}

applyvisionsettoallplayers( var_0 )
{
    level.current_vision_set = var_0;
    level._id_13445 = level.current_vision_set;

    foreach ( var_2 in level.players )
    {
        if ( !var_2 _id_0A77::_id_9D05() )
            continue;

        if ( !isalive( var_2 ) )
            continue;

        var_2 visionsetnakedforplayer( var_0, 1 );
    }

    switch ( var_0 )
    {
        case "cp_town_bw_r":
            var_0 = "cp_town_bw_r";

            if ( level.bomb_compound._id_00B9 == "red" )
            {
                setomnvar( "zm_chem_value_choice", level.bomb_compound.choice );
                setomnvar( "zm_chem_bvalue_choice", 0 );
            }
            else
            {
                setomnvar( "zm_chem_bvalue_choice", level.bad_choice_index_color_red );
                setomnvar( "zm_chem_value_choice", 0 );
            }

            setomnvar( "zm_chem_current_color", 1 );
            break;
        case "cp_town_bw_g":
            var_0 = "cp_town_bw_g";

            if ( level.bomb_compound._id_00B9 == "green" )
            {
                setomnvar( "zm_chem_value_choice", level.bomb_compound.choice );
                setomnvar( "zm_chem_bvalue_choice", 0 );
            }
            else
            {
                setomnvar( "zm_chem_bvalue_choice", level.bad_choice_index_color_green );
                setomnvar( "zm_chem_value_choice", 0 );
            }

            setomnvar( "zm_chem_current_color", 2 );
            break;
        case "cp_town_bw_b":
            var_0 = "cp_town_bw_b";

            if ( level.bomb_compound._id_00B9 == "blue" )
            {
                setomnvar( "zm_chem_value_choice", level.bomb_compound.choice );
                setomnvar( "zm_chem_bvalue_choice", 0 );
            }
            else
            {
                setomnvar( "zm_chem_bvalue_choice", level.bad_choice_index_color_blue );
                setomnvar( "zm_chem_value_choice", 0 );
            }

            setomnvar( "zm_chem_current_color", 3 );
            break;
        case "cp_town_color":
            var_0 = "cp_town_color";
            setomnvar( "zm_chem_current_color", 0 );
            setomnvar( "zm_chem_bvalue_choice", level.bad_choice_index_default );
            setomnvar( "zm_chem_value_choice", 0 );
            break;
    }
}

use_activate_gns_machine( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    foreach ( var_2 in level.players )
    {
        if ( self != var_2 )
        {
            if ( var_2 _id_0A77::_id_9BA0( var_0 ) )
            {
                self playlocalsound( "ui_consumable_deny" );
                return 0;
            }
        }
    }

    level.skulls_before_activation = getomnvar( "zm_num_ghost_n_skull_coin" );

    if ( level.skulls_before_activation == 6 || level.skulls_before_activation == -1 )
        return 0;

    self.activate_gns_machine = 1;
    level thread _id_135F6( self );
    thread remove_activate_gns_machine( var_0 );
    self waittill( "end_this_gns_fnf_card" );

    if ( isdefined( level.gns_game_console_vfx ) )
        level.gns_game_console_vfx delete();

    if ( isdefined( level.entered_thru_card ) )
        level.entered_thru_card = undefined;

    _id_0A77::_id_C151( var_0 );
    self notify( var_0 + "_timeup" );
    self notify( var_0 + "_exited_early" );
}

remove_activate_gns_machine( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "end_this_gns_fnf_card" );

    for (;;)
    {
        var_1 = _id_0A77::_id_1372D( self, "last_stand", self, var_0 + "_timeup", self, var_0 + "_exited_early", level, "end_this_thread_of_gns_fnf_card" );

        if ( isdefined( var_1 ) )
        {
            if ( var_1 == "last_stand" )
            {
                if ( !scripts\engine\utility::_id_9CEE( level.entered_thru_card ) )
                    cleanup_gns_scriptstuff();

                continue;
            }

            cleanup_gns_scriptstuff();
        }
    }
}

cleanup_gns_scriptstuff()
{
    if ( scripts\engine\utility::_id_9CEE( self.activate_gns_machine ) )
        self.activate_gns_machine = undefined;

    scripts\cp\maps\cp_zmb\cp_zmb_ghost_wave::_id_12DF8( level.skulls_before_activation );

    if ( level.script == "cp_town" )
    {
        if ( !isdefined( level.film_grain_off ) )
            level thread applyvisionsettoallplayers( "cp_town_bw" );
        else
            level thread applyvisionsettoallplayers( level.current_vision_set );
    }

    self notify( "end_this_gns_fnf_card" );
}

get_activated_vfx_postion_based_on_map( var_0 )
{
    switch ( var_0 )
    {
        case "cp_zmb":
            return ( 5459, -4767, 29 );
        case "cp_rave":
            return ( -282, -1483, 437 );
        case "cp_disco":
            return ( -713, 2609, 943 );
        case "cp_town":
            return ( 5459, -4767, 29 );
        case "cp_final":
            return ( 5638, -6260, 103 );
    }
}

get_corner_position_based_on_map( var_0 )
{
    switch ( var_0 )
    {
        case "cp_zmb":
            return ( 2874, -542, 242 );
        case "cp_rave":
            return ( -294, -1469, 396 );
        case "cp_disco":
            return ( -731, 2611, 898 );
        case "cp_town":
            return ( 5444, -4760, -14 );
        case "cp_final":
            return ( 5652, -6231, 71 );
    }
}

get_activation_radius_square_based_on_map( var_0 )
{
    switch ( var_0 )
    {
        case "cp_zmb":
            return 2500;
        case "cp_rave":
            return 2500;
        case "cp_disco":
            return 2500;
        case "cp_town":
            return 10000;
        case "cp_final":
            return 10000;
    }
}

_id_135F6( var_0 )
{
    self endon( "last_stand" );
    self endon( "end_this_gns_fnf_card" );
    level endon( "player_debug_activate_cabinet" );
    level endon( "end_this_thread_of_gns_fnf_card" );
    var_1 = get_activated_vfx_postion_based_on_map( level.script );
    var_2 = undefined;

    if ( level.script == "cp_zmb" )
    {
        var_2 = disable_arcade_cabinet_next_to_ghost_n_skull();
        var_3 = getent( "ghost_arcade_activation_area", "targetname" );
    }

    level.gns_game_console_vfx = spawnfx( level._effect["GnS_activation"], var_1 );
    triggerfx( level.gns_game_console_vfx );
    var_4 = get_corner_position_based_on_map( level.script );
    var_5 = get_activation_radius_square_based_on_map( level.script );

    for (;;)
    {
        var_6 = 1;

        foreach ( var_8 in level.players )
        {
            if ( scripts\engine\utility::_id_9CEE( var_8._id_98F3 ) )
            {
                var_6 = 0;
                break;
            }

            if ( scripts\engine\utility::_id_9CEE( var_8._id_9D81 ) )
            {
                var_6 = 0;
                break;
            }

            if ( scripts\engine\utility::_id_9CEE( var_8._id_9FCB ) )
            {
                var_6 = 0;
                break;
            }

            if ( distancesquared( var_8.origin, var_4 ) > var_5 )
            {
                var_6 = 0;
                break;
            }

            if ( !var_8 usebuttonpressed() )
            {
                var_6 = 0;
                break;
            }

            if ( !scripts\engine\utility::_id_9CEE( var_0.activate_gns_machine ) )
            {
                var_6 = 0;
                break;
            }
        }

        wait 0.25;

        if ( var_6 )
        {
            var_6 = 1;

            foreach ( var_8 in level.players )
            {
                if ( scripts\engine\utility::_id_9CEE( var_8._id_98F3 ) )
                {
                    var_6 = 0;
                    break;
                }

                if ( scripts\engine\utility::_id_9CEE( var_8._id_9D81 ) )
                {
                    var_6 = 0;
                    break;
                }

                if ( scripts\engine\utility::_id_9CEE( var_8._id_9FCB ) )
                {
                    var_6 = 0;
                    break;
                }

                if ( distancesquared( var_8.origin, var_4 ) > var_5 )
                {
                    var_6 = 0;
                    break;
                }

                if ( !var_8 usebuttonpressed() )
                {
                    var_6 = 0;
                    break;
                }

                if ( !scripts\engine\utility::_id_9CEE( var_0.activate_gns_machine ) )
                {
                    var_6 = 0;
                    break;
                }

                if ( level.script == "cp_disco" )
                {
                    if ( isdefined( level.clock_interaction ) && isdefined( level.clock_interaction.clock_owner ) && level.clock_interaction.clock_owner == var_8 )
                        var_6 = 0;

                    if ( isdefined( level.clock_interaction_q2 ) && isdefined( level.clock_interaction_q2.clock_owner ) && level.clock_interaction_q2.clock_owner == var_8 )
                        var_6 = 0;

                    if ( isdefined( level.clock_interaction_q3 ) && isdefined( level.clock_interaction_q3.clock_owner ) && level.clock_interaction_q3.clock_owner == var_8 )
                        var_6 = 0;

                    if ( scripts\engine\utility::_id_9CEE( var_8.start_breaking_clock ) )
                        var_6 = 0;

                    if ( scripts\engine\utility::_id_9CEE( var_8.is_using_gourd ) )
                        var_6 = 0;

                    if ( scripts\engine\utility::_id_9CEE( var_8.kung_fu_mode ) )
                        var_6 = 0;
                }
            }
        }

        if ( var_6 )
        {
            if ( isdefined( level.gns_game_console_vfx ) )
            {
                level.gns_game_console_vfx delete();

                if ( level.script == "cp_zmb" )
                    enable_arcade_cabinet_next_to_ghost_n_skull( var_2 );

                level thread _id_447F();
                return;
            }
        }

        scripts\engine\utility::waitframe();
    }
}

_id_447F()
{
    level.entered_thru_card = 1;
    scripts\cp\maps\cp_zmb\cp_zmb_ghost_wave::_id_C127( level.skulls_before_activation, 0.5 );
    scripts\cp\maps\cp_zmb\cp_zmb_ghost_wave::_id_10C61();
}

disable_arcade_cabinet_next_to_ghost_n_skull()
{
    var_0 = get_arcade_interaction_next_to_ghost_n_skull();
    _id_0A59::_id_E019( var_0 );
    return var_0;
}

enable_arcade_cabinet_next_to_ghost_n_skull( var_0 )
{
    _id_0A59::_id_175C( var_0 );
}

get_arcade_interaction_next_to_ghost_n_skull()
{
    var_0 = ( 2829, -538, 241 );

    foreach ( var_2 in level._id_4B88 )
    {
        if ( distancesquared( var_2.origin, var_0 ) < 100 )
            return var_2;
    }
}

use_get_pap2_gun( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );

    if ( self isonladder() )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        self playlocalsound( "perk_machine_deny" );
        return 0;
    }

    if ( scripts\engine\utility::_id_9CEE( self.is_in_pap ) )
        return 0;

    if ( scripts\engine\utility::_id_9CEE( level.gns_active ) )
        return 0;

    if ( scripts\engine\utility::_id_9CEE( self._id_9FCB ) )
    {
        self._id_456B[var_0]._id_C4A4 = 0;
        return 0;
    }

    var_1 = choose_random_weapon_from_list( var_0 );
    _id_0A77::_id_C151( var_0 );
    return var_1;
}

choose_random_weapon_from_list( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    self endon( var_0 + "_timeup" );

    for (;;)
    {
        var_1 = scripts\engine\utility::_id_DC6B( level._id_C8A2 );
        var_2 = self getcurrentweapon();
        var_3 = _id_0A77::_id_80D8( var_1 );

        if ( can_upgrade_via_pap2fnfcard( var_1, 1 ) )
        {
            thread _id_834A( self, var_0, var_3, var_1 );
            self._id_9FCB = 0;
            return 1;
        }
        else
        {
            scripts\engine\utility::waitframe();
            continue;
        }
    }
}

_id_834A( var_0, var_1, var_2, var_3 )
{
    var_4 = 0;
    var_5 = undefined;
    var_6 = undefined;
    var_7 = undefined;
    var_8 = undefined;
    var_9 = self getweaponslistprimaries();
    var_10 = self getweaponslistprimaries().size;
    var_11 = 3;
    var_12 = var_2;
    var_13 = spawnstruct();
    var_13._id_B111 = 2;
    var_0._id_C8A2[var_12] = var_13;

    if ( !var_0 _id_0A6B::_id_8BBB( var_3 ) )
    {
        var_14 = var_0 _id_0A77::getvalidtakeweapon();
        var_0._id_4B32 = var_14;

        if ( isdefined( var_14 ) )
        {
            var_5 = 1;
            var_15 = _id_0A77::_id_80D8( var_14 );

            if ( var_0 _id_0A77::_id_8BAE() && var_10 < var_11 + 1 )
                var_5 = 0;

            foreach ( var_17 in var_9 )
            {
                if ( _id_0A77::_id_9F7C( var_17, "alt_" ) )
                    var_11++;
            }

            if ( _id_0A77::_id_8BBE( "perk_machine_more" ) )
                var_11++;

            if ( var_9.size < var_11 )
                var_5 = 0;

            if ( var_5 )
            {
                if ( isdefined( var_0._id_C8A2[var_15] ) )
                {
                    var_0._id_C8A2[var_15] = undefined;
                    var_0 notify( "weapon_level_changed" );
                }

                var_0 _meth_83B8( var_14 );
            }
        }

        if ( isdefined( var_0._id_13C00[var_12] ) )
            var_6 = var_0._id_13C00[var_12];
        else
            var_6 = var_3;

        if ( isdefined( var_2 ) )
        {
            if ( isdefined( level.no_pap_camos ) && scripts\engine\utility::array_contains( level.no_pap_camos, var_2 ) )
                var_8 = undefined;
            else if ( isdefined( level.pap_1_camo ) && var_0._id_C8A2[var_2]._id_B111 == 1 )
                var_8 = level.pap_1_camo;
            else if ( isdefined( level.pap_2_camo ) && var_0._id_C8A2[var_2]._id_B111 == 2 )
                var_8 = level.pap_2_camo;

            var_19 = var_0 _id_0A6B::_id_7D62( var_3 );
        }

        var_20 = 0;
        var_21 = undefined;

        if ( isdefined( var_2 ) )
        {
            if ( isdefined( var_0._id_C8A2[var_2] ) )
                var_21 = "pap" + var_0._id_C8A2[var_2]._id_B111;
            else
                var_21 = "pap1";
        }

        if ( isdefined( var_21 ) && var_21 == "replace_me" )
            var_21 = undefined;

        var_22 = getweaponattachments( var_6 );
        var_23 = _id_0A6B::_id_E469( var_6, var_21, var_22, undefined, var_8 );
        var_23 = _id_0A77::_id_12C6( var_23, undefined, undefined, 1 );
        self.pap2_card_weapon = var_23;
        var_0._id_A035 = var_23;
        var_0 _id_0A77::take_fists_weapon( self );
        var_0 notify( "weapon_purchased" );
        var_0._id_C8A2[var_2]._id_B111 = 3;
        var_0 givemaxammo( var_23 );
        var_0 notify( "weapon_level_changed" );
        var_0 _meth_83B5( var_23 );

        while ( var_0 _meth_81C2() )
            wait 0.05;
    }
    else
    {
        var_0._id_DB02 = 1;
        var_12 = undefined;
        var_24 = var_0 _meth_8173();
        var_25 = var_0 getcurrentweapon();
        var_26 = _id_0A77::_id_80D8( var_3 );
        var_27 = undefined;

        foreach ( var_3 in var_24 )
        {
            var_12 = _id_0A77::_id_80D8( var_3 );

            if ( var_12 == var_26 )
            {
                var_27 = var_3;
                break;
            }
        }

        var_30 = weaponmaxammo( var_27 );
        var_31 = var_0 _id_0CFF::_id_D876();
        var_32 = int( var_31 * var_30 );
        var_33 = var_0 getweaponammostock( var_27 );

        if ( var_33 < var_32 )
            var_0 setweaponammostock( var_27, var_32 );
    }

    wait 0.05;
    var_0 notify( "weapon_purchased" );
    var_0._id_DB02 = undefined;
}

can_upgrade_via_pap2fnfcard( var_0, var_1 )
{
    var_2 = self _meth_8173();

    foreach ( var_4 in var_2 )
    {
        var_5 = _id_0A77::_id_80D8( var_0 );
        var_6 = _id_0A77::_id_80D8( var_4 );

        if ( var_5 == var_6 )
            return 0;
    }

    if ( _id_0A77::weapon_is_dlc_melee( var_0 ) || _id_0A77::weapon_is_dlc2_melee( var_0 ) || issubstr( var_0, "knife" ) || issubstr( var_0, "slasher" ) || issubstr( var_0, "axe" ) || issubstr( var_0, "lawnmower" ) || issubstr( var_0, "harpoon" ) )
        return 0;

    if ( isdefined( level.weapon_upgrade_path ) && isdefined( level.weapon_upgrade_path[getweaponbasename( var_0 )] ) )
        return 0;

    if ( issubstr( var_0, "forgefreeze" ) || issubstr( var_0, "cutie" ) || issubstr( var_0, "nunchucks" ) || issubstr( var_0, "katana" ) || issubstr( var_0, "headcutter" ) || issubstr( var_0, "dischord" ) || issubstr( var_0, "facemelter" ) || issubstr( var_0, "shredder" ) )
        return 0;

    if ( !isdefined( level._id_C8A2 ) )
        return 0;

    if ( isdefined( var_0 ) )
        var_5 = _id_0A77::_id_80D8( var_0 );
    else
        return 0;

    if ( !isdefined( var_5 ) )
        return 0;

    if ( !isdefined( level._id_C8A2[var_5] ) )
    {
        var_4 = getsubstr( var_5, 0, var_5.size - 1 );

        if ( !isdefined( level._id_C8A2[var_4] ) )
            return 0;
    }

    if ( isdefined( self._id_C8A2[var_5] ) && self._id_C8A2[var_5]._id_B111 >= 3 )
        return 0;
    else
        return 1;

    if ( scripts\engine\utility::_id_9CEE( var_1 ) && isdefined( self._id_C8A2[var_5] ) && self._id_C8A2[var_5]._id_B111 <= min( level._id_C8A4 + 1, 2 ) )
        return 1;

    return 1;
}

_id_1300E( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_exited_early" );
    _id_0A5B::_id_6235( self );
    thread _id_E167( var_0 );

    for (;;)
    {
        self waittill( "player_has_self_revive", var_1 );

        if ( var_1 )
            continue;

        self waittill( "revive" );
        self stopolcalsound( "zmb_laststand_music" );
        _id_0A5B::_id_557F( self );

        if ( _id_0A77::_id_8BBE( "perk_machine_tough" ) )
        {
            self.maxhealth = 200;
            self.health = self.maxhealth;
        }

        _id_0A77::_id_C151( var_0 );
        break;
    }
}

_id_E167( var_0 )
{
    self endon( var_0 + " activated" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    self waittill( var_0 + "_exited_early" );
    _id_0A5B::_id_557F( self );
}

_id_13038( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    var_1 = _id_0A63::_id_7B8B();
    var_2 = int( var_1 / level.players.size );
    _id_0A63::_id_F525( var_2 );

    foreach ( var_4 in level.players )
    {
        if ( var_4 == self )
            continue;

        var_4 _id_0A63::_id_82F9( var_2, undefined, undefined, 1, "bonus" );
    }

    _id_0A77::_id_C151( var_0 );
    return 1;
}

_id_12FF5( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "disconnect" );

    if ( !isdefined( level._id_455C ) )
        level._id_455C = 0;

    thread _id_12E39( var_0 );
    thread _id_40E2( var_0 );
    setomnvar( "zom_escape_combo_multiplier", 1 );

    for (;;)
    {
        var_1 = scripts\engine\utility::_id_13734( "shot_missed", "weapon_hit_enemy" );

        if ( var_1 == "shot_missed" )
            level._id_455C = level._id_455C - 0.02;
        else
            level._id_455C = level._id_455C + 0.02;

        if ( level._id_455C < 0 )
            level._id_455C = 0;

        self notify( "update_team_efficiency" );
    }
}

_id_12E39( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "disconnect" );

    while ( isdefined( level._id_455C ) )
    {
        self waittill( "update_team_efficiency" );
        var_1 = 1 + level._id_455C;
        setomnvar( "zom_escape_combo_multiplier", var_1 );
    }

    setomnvar( "zom_escape_combo_multiplier", -1 );
}

_id_40E2( var_0 )
{
    var_1 = scripts\engine\utility::_id_13734( var_0 + "_timeup", var_0 + "_exited_early", "disconnect" );
    level._id_455C = undefined;
}

_id_13012( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "disconnect" );
    thread _id_E16D( var_0 );

    foreach ( var_2 in _id_0A4A::_id_7DB0( "axis" ) )
        var_2 thread _id_1887( var_2, var_0, self );

    for (;;)
    {
        level waittill( "agent_spawned", var_4 );
        var_4 thread _id_1887( var_4, var_0, self, 1 );
    }
}

_id_1887( var_0, var_1, var_2, var_3 )
{
    var_0 endon( "death" );

    if ( isdefined( var_0.agent_type ) && ( var_0.agent_type == "zombie_brute" || var_0.agent_type == "zombie_grey" || var_0.agent_type == "zombie_ghost" ) )
        return;

    if ( isdefined( var_0.agent_type ) && ( var_0.agent_type == "crab_brute" || var_0.agent_type == "crab_mini" ) )
        return;

    if ( var_0 _id_0A77::agentisfnfimmune() )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_0._id_9CDD ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_3 ) )
        wait 0.5;

    if ( !isdefined( var_0._id_2303._id_4B12 ) )
        var_4 = var_0._id_01F5;
    else
        var_4 = var_0._id_2303._id_4B12;

    switch ( var_4 )
    {
        case "slow_walk":
            break;
        case "walk":
        case "sprint":
        case "run":
            var_0 scripts\asm\asm_bb::_id_2968( "slow_walk" );
            break;
    }

    var_2 scripts\engine\utility::waittill_any( var_1 + "_timeup", "last_stand", "disconnect" );
    var_0 scripts\asm\asm_bb::_id_2968( var_4 );
}

_id_E16D( var_0 )
{
    self endon( var_0 + "_timeup" );
    self waittill( "last_stand" );
    self notify( var_0 + "_exited_early" );
}

_id_12FF8( var_0 )
{
    self endon( var_0 + "_timeup" );
    self endon( "last_stand" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    self.life_link_active = undefined;
    self._id_AC4B = 1;
    var_1 = "j_spine4";
    thread _id_E0E8( var_0 );
    thread _id_E0E7( var_0 );
    var_2 = self;

    for (;;)
    {
        var_3 = _id_7F72( self );

        if ( isdefined( var_3 ) )
        {
            self notify( "lost_target", var_3 );
            self._id_AD2D = 1;
            thread _id_D4BC( var_3, var_1, var_0 );
            var_2.life_link_active = 1;
            _id_AD4A( self, var_3 );
            continue;
        }

        var_2.life_link_active = undefined;
        wait 0.5;
    }
}

_id_7F72( var_0 )
{
    var_1 = scripts\engine\utility::_id_782F( var_0.origin, level.players, [ var_0 ], 4, 512 );
    var_2 = sortbydistance( var_1, var_0.origin );
    var_3 = undefined;

    foreach ( var_5 in var_2 )
    {
        var_6 = sighttracepassed( var_0 geteye(), var_5 geteye(), 0, var_0 );

        if ( !var_6 )
            continue;

        if ( scripts\engine\utility::_id_9CEE( var_5._id_98F3 ) )
            continue;

        var_3 = var_5;
        break;
    }

    return var_3;
}

_id_AD4A( var_0, var_1 )
{
    var_0 endon( "disconnect" );

    while ( scripts\engine\utility::_id_9CEE( var_0._id_AD2D ) )
    {
        if ( scripts\engine\utility::_id_9CEE( var_1._id_98F3 ) )
        {
            var_0._id_AD2D = undefined;
            var_0 notify( "lost_target" );
            break;
        }
        else if ( distance( var_0.origin, var_1.origin ) > 512 )
        {
            var_0._id_AD2D = undefined;
            var_0 notify( "lost_target" );
            break;
        }
        else
        {
            var_2 = sighttracepassed( var_0 geteye(), var_1 geteye(), 0, var_0 );

            if ( !var_2 )
            {
                var_0._id_AD2D = undefined;
                var_0 notify( "lost_target" );
            }
        }

        wait 0.25;
    }
}

_id_D4BC( var_0, var_1, var_2 )
{
    var_0 endon( "disconnect" );
    self endon( "disconnect" );
    var_3 = [];
    playfxontag( level._effect["life_link_target"], var_0, var_1 );

    foreach ( var_5 in level.players )
        var_3[var_3.size] = playfxontagsbetweenclients( level._effect["life_link"], self, var_1, var_0, var_1, var_5 );

    self playloopsound( "zmb_fnf_lifelink_heal_lp" );
    var_0 playloopsound( "zmb_fnf_lifelink_heal_lp" );
    var_7 = _id_0A77::_id_1372D( self, "disconnect", self, "lost_target", self, "last_stand", self, var_2 + "_timeup", var_0, "disconnect", var_0, "last_stand", level, "game_ended" );

    if ( isdefined( self ) )
        self stoploopsound();

    if ( isdefined( var_0 ) )
        var_0 stoploopsound();

    foreach ( var_9 in var_3 )
    {
        if ( isdefined( var_9 ) )
            var_9 delete();
    }

    if ( isdefined( var_0 ) )
        _func_121( level._effect["life_link_target"], var_0, var_1 );
}

_id_E0E7( var_0 )
{
    self endon( var_0 + "_timeup" );
    self waittill( "last_stand" );
    self._id_AC4B = undefined;
    self.life_link_active = undefined;

    if ( isdefined( self._id_AD2D ) )
        self._id_AD2D = undefined;

    self notify( var_0 + "_exited_early" );
}

_id_E0E8( var_0 )
{
    self endon( "last_stand" );
    self waittill( var_0 + "_timeup" );
    self._id_AC4B = undefined;
    self.life_link_active = undefined;

    if ( isdefined( self._id_AD2D ) )
        self._id_AD2D = undefined;
}

_id_13002( var_0 )
{
    var_1 = level.players;
    var_2 = 0;

    foreach ( var_4 in var_1 )
    {
        var_5 = var_4;

        if ( isdefined( var_4.owner ) )
            var_5 = var_4.owner;

        if ( _id_0A5B::_id_D0EF( var_5 ) )
        {
            var_2 = 1;

            if ( scripts\engine\utility::_id_9CEE( var_5._id_A623 ) )
            {
                thread delayed_instant_revive( var_5 );
                continue;
            }

            _id_0A5B::_id_992F( var_5 );
            _id_0A5B::_id_DDEA( self, var_5 );
        }
    }

    if ( !var_2 )
    {
        self._id_456B["phoenix_up"]._id_C4A4 = 0;
        scripts\engine\utility::waitframe();
        return 0;
    }

    wait 0.25;
    _id_0A77::_id_C151( "phoenix_up" );
    return 1;
}

delayed_instant_revive( var_0 )
{
    var_0 endon( "disconnect" );
    var_0 endon( "revive" );
    wait 4;
    _id_0A5B::_id_992F( var_0 );
    _id_0A5B::_id_DDEA( self, var_0 );
}

_id_12FF6( var_0 )
{
    level endon( "game_ended" );

    if ( isdefined( level.meph_fight_started ) )
        return 0;

    foreach ( var_2 in level.players )
    {
        if ( !isdefined( var_2.killing_time ) )
            var_2.killing_time = 0;

        var_2.killing_time++;
    }

    scripts\engine\utility::waitframe();
    _id_0A77::_id_C151( "killing_time" );
    scripts\engine\utility::_id_13736( 20, "death", "last_stand", "disconnect" );

    foreach ( var_2 in level.players )
    {
        if ( isdefined( var_2.killing_time ) )
        {
            var_2.killing_time--;

            if ( var_2.killing_time <= 0 )
                var_2.killing_time = undefined;
        }
    }
}

_id_12FFF( var_0 )
{
    level endon( "game_ended" );
    self endon( "last_stand" );
    self endon( "disconnect" );
    thread _id_E141( var_0 );

    foreach ( var_2 in level.players )
    {
        if ( var_2 == self )
        {
            if ( var_2 _id_0A77::_id_9E3A() )
                var_2 _id_0A77::_id_1C5C( 0 );

            continue;
        }

        var_2 _id_0A77::_id_1C5C( 1 );
    }

    wait 10;

    foreach ( var_2 in level.players )
    {
        if ( var_2 _id_0A77::_id_9E3A() )
            var_2 _id_0A77::_id_1C5C( 0 );
    }
}

_id_E141( var_0 )
{
    var_1 = scripts\engine\utility::_id_13734( "last_stand", "disconnect", var_0 + "_timeup", var_0 + "_exited_early" );

    foreach ( var_3 in level.players )
    {
        if ( var_3 _id_0A77::_id_9E3A() )
            var_3 _id_0A77::_id_1C5C( 0 );
    }

    if ( isdefined( var_1 ) && var_1 == "last_stand" )
        self notify( var_0 + "_exited_early" );
}

_id_12FA2( var_0 )
{
    if ( !_id_0A77::_id_9FA2() || scripts\engine\utility::_id_9CEE( self.is_in_pap ) )
    {
        self._id_456B["anywhere_but_here"]._id_C4A4 = 0;
        return 0;
    }

    if ( scripts\cp\zombies\direct_boss_fight::should_directly_go_to_boss_fight() )
    {
        self._id_456B["anywhere_but_here"]._id_C4A4 = 0;
        return 0;
    }

    var_1 = level._id_163E;
    var_1 = scripts\engine\utility::_id_22AF( var_1 );

    foreach ( var_3 in level._id_163E )
    {
        var_4 = _id_0D61::_id_7C82( 0, 1, self );

        foreach ( var_6 in var_4 )
        {
            if ( ispointinvolume( var_3.origin, var_6 ) )
                var_1 = scripts\engine\utility::array_remove( var_1, var_3 );
        }
    }

    if ( var_1.size < 1 )
        var_1 = level._id_163E;

    var_9 = scripts\cp\gametypes\zombie::_id_7C0B( level.players, var_1 );

    if ( !isdefined( var_9 ) )
    {
        self._id_456B["anywhere_but_here"]._id_C4A4 = 0;
        return 0;
    }

    if ( _id_0A77::map_check( 4 ) )
    {
        var_10 = _id_0D61::_id_7C82( 0, 1, self );

        foreach ( var_12 in var_10 )
        {
            if ( isdefined( level.facilityvolumes ) && scripts\engine\utility::array_contains( level.facilityvolumes, var_12._id_28AB ) )
            {
                self.currentlocation = "facility";
                continue;
            }

            self.currentlocation = "theater";
        }
    }

    _id_0D12::_id_5AA3();
    _id_0A59::_id_DE6E();
    _id_0D15::_id_D72E();
    self _meth_80F3();
    self setorigin( var_9.origin );
    self setplayerangles( var_9.angles );
    self notify( "left_hidden_room_early" );
    _id_0A77::_id_C151( "anywhere_but_here" );
    self._id_1514 = gettime();
    return 1;
}

_id_A4F5( var_0 )
{
    level endon( "game_ended" );
    level.players[0] endon( "death" );
    level.players[0] endon( "last_stand" );

    foreach ( var_2 in level._id_163E )
    {
        level.players[0] _id_0D12::_id_5AA3();
        level.players[0] _id_0A59::_id_DE6E();
        level.players[0] _id_0D15::_id_D72E();
        level.players[0] _meth_80F3();
        level.players[0] setorigin( var_2.origin );
        level.players[0] setplayerangles( var_2.angles );
        wait 2;
    }
}

_id_12FF2( var_0 )
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self endon( var_0 + "_timeup" );
    self._id_8C9E = gettime();
}

_id_8C9D( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( !_id_0A77::_id_9BA0( "headshot_reload" ) )
        return 0;

    if ( !scripts\engine\utility::_id_9D74( var_3 ) )
        return 0;

    if ( !_id_0A77::isheadshot( var_4, var_6, var_3, var_1 ) )
        return 0;

    if ( isdefined( var_9 ) && var_9 _id_0A77::agentisfnfimmune() )
        return 0;

    var_4 = self getcurrentweapon();
    var_10 = self getweaponammostock( var_4 );
    var_11 = weaponclipsize( var_4 );
    var_12 = self getweaponammoclip( var_4 );
    var_13 = var_11 - var_12;

    if ( var_10 >= var_13 )
        self setweaponammostock( var_4, var_10 - var_13 );
    else
    {
        var_11 = var_10;
        self setweaponammostock( var_4, 0 );
    }

    var_14 = var_11;
    var_15 = min( var_12 + var_14, var_11 );
    self setweaponammoclip( var_4, int( var_15 ) );

    if ( self _meth_819C() )
    {
        var_12 = self getweaponammoclip( var_4, "left" );
        var_15 = min( var_12 + var_14, var_11 );
        self setweaponammoclip( var_4, int( var_15 ), "left" );
    }
}

_id_12FF1( var_0 )
{
    self._id_D721 = 1;
    _id_0D15::_id_D71A( 1, "primary" );
    var_1 = getarraykeys( self._id_D782 );

    foreach ( var_3 in var_1 )
        self._id_D782[var_3]._id_461B = 1;
}

_id_12955( var_0 )
{
    self._id_D721 = 0;
}

_id_13DFE( var_0, var_1 )
{
    if ( !isdefined( var_0._id_456B ) )
        return;

    var_2 = 0;

    foreach ( var_6, var_4 in var_0.consumables_pre_irish_luck_usage )
    {
        var_5 = _id_78DE( var_6 );
        setclientmatchdata( "player", var_1, "cardsUsed", var_2, "loot_ID", int( var_5 ) );
        setclientmatchdata( "player", var_1, "cardsUsed", var_2, "num_of_times_used", var_4._id_11925 );
        var_2++;
    }
}

_id_78DE( var_0 )
{
    return tablelookup( "cp/loot/iw7_zombiefatefortune_loot_master.csv", 1, var_0, 0 );
}

_id_F306( var_0 )
{
    return self [[ level._id_456B[var_0]._id_F286 ]]( var_0 );
}

_id_12BF6( var_0 )
{
    self [[ level._id_456B[var_0]._id_12BF4 ]]( var_0 );
}
