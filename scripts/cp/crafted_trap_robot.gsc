// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level.robot_trap_settings = [];
    var_0 = spawnstruct();
    var_0._id_039B = "zmb_robotprojectile_mp";
    var_0._id_B91A = "cp_disco_rocket_robot";
    var_0._id_B924 = "cp_disco_rocket_robot";
    var_0._id_B925 = "cp_disco_rocket_robot_bad";
    var_0._id_017B = &"COOP_CRAFTABLES_PICKUP";
    var_0._id_CC28 = &"COOP_CRAFTABLES_PLACE";
    var_0._id_38E3 = &"COOP_CRAFTABLES_CANNOT_PLACE";
    var_0._id_CC0A = &"COOP_CRAFTABLES_PLACE_CANCELABLE";
    var_0._id_AC71 = 120.0;
    var_0._id_DDAC = 2;
    var_0._id_C228 = 12;
    var_0._id_6A03 = "cp_disco_rocket_ammo_tag";
    var_0._id_CC22 = 30.0;
    var_0._id_CC25 = 16.0;
    var_0._id_3AA7 = ( 0, 0, 15 );
    var_0._id_3AA6 = ( 0, 90, 0 );
    level.robot_trap_settings["crafted_ims"] = var_0;
}

give_crafted_robot_trap( var_0, var_1 )
{
    var_1 thread _id_13932();
    var_1 notify( "new_power", "crafted_robot" );
    var_1 setclientomnvar( "zom_crafted_weapon", 12 );
    var_1 thread _id_0A77::_id_1308C( var_1, "iw7_pickup_zm" );
    _id_0A77::_id_F313( "crafted_ims", ::give_crafted_robot_trap, var_1 );
}

_id_13932()
{
    self endon( "death" );
    self endon( "disconnect" );
    self notify( "craft_dpad_watcher" );
    self endon( "craft_dpad_watcher" );
    self notifyonplayercommand( "pullout_ims", "+actionslot 3" );

    for (;;)
    {
        self waittill( "pullout_ims" );

        if ( scripts\engine\utility::_id_9CEE( self._id_9D81 ) )
            continue;

        if ( scripts\engine\utility::_id_9CEE( self._id_AD2C ) )
            continue;

        if ( isdefined( self.allow_carry ) && self.allow_carry == 0 )
            continue;

        if ( _id_0A77::_id_9D05() )
            break;
    }

    thread give_robot_trap( "crafted_ims" );
}

give_robot_trap( var_0 )
{
    self endon( "disconnect" );
    _id_0A77::_id_41C4( "msg_power_hint" );
    var_1 = create_robot_trap_for_player( var_0, self );
    self._id_A039 = var_1.name;
    _id_0A77::_id_E077();
    self.carried_robot_trap = var_1;
    var_1._id_6DEC = 1;
    var_2 = _id_F684( var_1, 1 );
    self.carried_robot_trap = undefined;
    thread _id_0A77::_id_E2CC();
    return var_2;
}

_id_F684( var_0, var_1, var_2 )
{
    self endon( "disconnect" );
    var_0 thread robot_trap_setcarried( self );
    scripts\engine\utility::_id_1C71( 0 );
    self notifyonplayercommand( "place_ims", "+attack" );
    self notifyonplayercommand( "place_ims", "+attack_akimbo_accessible" );
    self notifyonplayercommand( "cancel_ims", "+actionslot 3" );

    if ( !level._id_4542 )
    {
        self notifyonplayercommand( "cancel_ims", "+actionslot 5" );
        self notifyonplayercommand( "cancel_ims", "+actionslot 6" );
        self notifyonplayercommand( "cancel_ims", "+actionslot 7" );
    }

    for (;;)
    {
        var_3 = scripts\engine\utility::_id_13734( "place_ims", "cancel_ims", "force_cancel_placement", "player_action_slot_restart" );

        if ( !isdefined( var_3 ) )
            var_3 = "force_cancel_placement";

        if ( var_3 == "cancel_ims" || var_3 == "force_cancel_placement" || var_3 == "player_action_slot_restart" )
        {
            if ( !var_1 && var_3 == "cancel_ims" )
                continue;

            var_0 robot_trap_setcancelled( var_3 == "force_cancel_placement" && !isdefined( var_0._id_6DEC ) );

            if ( var_3 != "force_cancel_placement" )
                thread _id_13932();
            else if ( var_1 )
                _id_0A77::_id_DFE0( self );

            return 0;
        }

        if ( !var_0._id_3872 )
            continue;

        if ( var_1 )
            _id_0A77::_id_DFE0( self );

        var_0 thread robot_trap_setplaced( var_2 );
        self notify( "IMS_placed" );
        scripts\engine\utility::delaythread( 0.5, scripts\engine\utility::_id_1C71, 1 );
        return 1;
    }
}

create_robot_trap_for_player( var_0, var_1 )
{
    if ( isdefined( var_1._id_9D81 ) && var_1._id_9D81 )
        return;

    var_2 = spawnturret( "misc_turret", var_1.origin + ( 0, 0, 25 ), "sentry_minigun_mp" );
    var_2.angles = var_1.angles;
    var_2.robot_trap_type = var_0;
    var_2.owner = var_1;
    var_2.name = "crafted_ims";
    var_2.carried_robot_trap = spawn( "script_model", var_2.origin );
    var_2.carried_robot_trap.angles = var_1.angles;
    var_2 maketurretinoperable();
    var_2 _meth_835B( 1 );
    var_2 _meth_830F( "sentry_offline" );
    var_2 makeunusable();
    var_2 _meth_8336( var_1 );
    return var_2;
}

create_robot_trap( var_0, var_1 )
{
    var_2 = var_0.owner;
    var_3 = var_0.robot_trap_type;
    var_4 = spawn( "script_model", var_0.origin + ( 0, 0, 2 ) );
    var_4 setmodel( level.robot_trap_settings[var_3]._id_B91A );
    var_4._id_EB9C = 3;
    var_4.angles = ( 0, var_0.carried_robot_trap.angles[1], 0 );
    var_4.robot_trap_type = var_3;
    var_4.owner = var_2;
    var_4 _meth_831F( var_2 );
    var_4.team = var_2.team;
    var_4.name = "crafted_ims";
    var_4._id_10085 = 0;
    var_4._id_8E5A = 0;
    var_4._id_252E = 1;
    var_4._id_8BF0 = [];
    var_4._id_451C = level.robot_trap_settings[var_3];
    var_4 thread robot_trap_handleuse();

    if ( isdefined( var_1 ) )
        var_4 thread _id_0A77::_id_A030( var_1 );
    else
        var_4 thread _id_0A77::_id_A030( undefined, level.robot_trap_settings[self.robot_trap_type]._id_AC71 );

    return var_4;
}

_id_936D( var_0 )
{
    self._id_933C = 1;
    self notify( "death" );
}

_id_9367( var_0 )
{
    self endon( "carried" );
    self waittill( "death" );

    if ( !isdefined( self ) )
        return;

    robot_trap_setinactive();

    if ( isdefined( self._id_9B05 ) )
    {
        self._id_9B05 _id_0A77::_id_E2CC();
        self notify( "deleting" );
        wait 1.0;
    }

    _id_66A7();
    self delete();
}

_id_66A7()
{
    self setscriptablepartstate( "main", "anim_death" );
    wait 3.0;
    playloopsound( self.origin + ( 0, 0, 60 ), "disco_toy_robot_explo" );
    wait 0.1;
    radiusdamage( self.origin + ( 0, 0, 40 ), 200, 500, 250, self, "MOD_EXPLOSIVE", "zmb_imsprojectile_mp" );
    self hide();
    wait 0.65;
    physicsexplosionsphere( self.origin, 256, 256, 2 );
}

robot_trap_handleuse()
{
    self endon( "death" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "trigger", var_0 );

        if ( !var_0 _id_0A77::_id_9D05() )
            continue;

        if ( scripts\engine\utility::_id_9CEE( var_0._id_9D81 ) )
            continue;

        if ( scripts\engine\utility::_id_9CEE( var_0.kung_fu_mode ) )
            continue;

        var_1 = create_robot_trap_for_player( self.robot_trap_type, var_0 );

        if ( !isdefined( var_1 ) )
            continue;

        robot_trap_setinactive();

        if ( isdefined( self _meth_8138() ) )
            self unlink();

        var_0 thread _id_F684( var_1, 0, self._id_AC71 );
        self delete();
        break;
    }
}

robot_trap_setplaced( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );

    if ( isdefined( self._id_3A9D ) )
        self._id_3A9D _meth_80F3();

    self._id_3A9D = undefined;

    if ( isdefined( self.owner ) )
        self.owner._id_9D81 = 0;

    self._id_6DEC = undefined;
    var_1 = create_robot_trap( self, var_0 );
    var_1._id_9EE4 = 1;
    var_1 thread _id_9367( self.owner );
    self playsound( "trap_boom_box_drop" );
    self notify( "placed" );
    var_1 thread robot_trap_setactive();
    var_2 = spawnstruct();

    if ( isdefined( self._id_BD3B ) )
        var_2._id_AD39 = self._id_BD3B;

    var_2._id_6371 = "carried";
    var_2._id_4E53 = ::_id_936D;
    var_1 thread _id_0A60::_id_892F( var_2 );
    self.carried_robot_trap delete();
    self delete();
}

robot_trap_setcancelled( var_0 )
{
    if ( isdefined( self._id_3A9D ) )
    {
        var_1 = self._id_3A9D;
        var_1 _meth_80F3();
        var_1._id_9D81 = undefined;
        var_1._id_3AA0 = undefined;
        var_1 scripts\engine\utility::_id_1C71( 1 );
    }

    if ( isdefined( var_0 ) && var_0 )
        _id_66A7();

    self.carried_robot_trap delete();
    self delete();
}

robot_trap_setcarried( var_0 )
{
    self _meth_8335( var_0 );
    self _meth_82C7( 0 );
    self setcandamage( 0 );
    self._id_3A9D = var_0;
    var_0._id_9D81 = 1;
    var_0 thread _id_0A77::_id_12E3F( self, self.carried_robot_trap, level.robot_trap_settings["crafted_ims"] );
    thread _id_0A77::_id_A025( var_0 );
    thread _id_936F( var_0 );
    thread _id_9371( var_0 );

    if ( isdefined( level._id_5CF2 ) )
        self thread [[ level._id_5CF2 ]]( var_0 );

    self notify( "carried" );
}

_id_936F( var_0 )
{
    self endon( "placed" );
    self endon( "death" );
    var_0 endon( "last_stand" );
    var_0 waittill( "disconnect" );
    robot_trap_setcancelled();
}

_id_9371( var_0 )
{
    self endon( "placed" );
    self endon( "death" );
    var_0 endon( "last_stand" );
    level waittill( "game_ended" );
    robot_trap_setcancelled();
}

robot_trap_setactive()
{
    self endon( "death" );
    self setcursorhint( "HINT_NOICON" );
    self sethintstring( level.robot_trap_settings[self.robot_trap_type]._id_017B );
    _id_0A77::_id_1861();
    var_0 = self.owner;
    var_0 _meth_80F3();
    self _meth_84A5( 120 );
    self _meth_84A2( 96 );
    wait 0.05;
    self._id_2514 = self gettagorigin( "tag_rocket_tube_01" ) + ( 0, 0, 72 );
    self.alt_attackheightpos = self._id_2514;
    var_1 = bullettrace( self._id_2514, self._id_2514 + ( 0, 0, 500 ), 0, self );
    var_2 = var_1["position"] - ( 0, 0, 20 ) - self.origin;

    if ( var_2[2] > 250 )
        self._id_2514 = self gettagorigin( "tag_rocket_tube_01" ) + ( 0, 0, 250 );

    self.attacklaunchpos = [];
    self.attacklaunchpos[0] = self gettagorigin( "tag_rocket_tube_01" ) + ( 0, 0, -10 );
    self.attacklaunchpos[1] = self gettagorigin( "tag_rocket_tube_02" ) + ( 0, 0, -10 );
    var_3 = spawn( "trigger_radius", self.origin, 0, 300, 100 );
    self._id_2536 = var_3;
    self._id_2536 _meth_80D2();
    self._id_2536 linkto( self );
    self._id_2528 = 0.72;
    wait 0.75;
    self setscriptablepartstate( "main", "anim_idle" );
    self setscriptablepartstate( "head_coils", "on" );
    self setscriptablepartstate( "LED_Panel", "Idle" );
    thread rotate_robot();

    if ( isdefined( self.owner ) )
        thread robot_usability_monitor( self.owner );

    thread robot_trap_attackzombies();
    thread _id_0A77::_id_A021( "robot_disconnect" );
}

rotate_robot()
{
    self endon( "death" );
    self playloopsound( "disco_toy_robot_mvmt_lp" );

    for (;;)
    {
        self _meth_8271( 15, 2 );
        wait 2;
    }
}

robot_trap_setinactive()
{
    self makeunusable();
    self stoploopsound();

    if ( isdefined( self._id_2536 ) )
        self._id_2536 delete();

    if ( isdefined( self._id_69F6 ) )
    {
        self._id_69F6 delete();
        self._id_69F6 = undefined;
    }

    _id_0A77::_id_E11E();
}

robot_usability_monitor( var_0 )
{
    self endon( "death" );
    var_0 endon( "disconnect" );

    for (;;)
    {
        foreach ( var_2 in level.players )
        {
            if ( var_2 == var_0 )
            {
                if ( scripts\engine\utility::_id_9CEE( var_0.kung_fu_mode ) )
                {
                    self makeunusable();
                    self disableplayeruse( var_0 );
                }
                else
                {
                    self sethintstring( level.robot_trap_settings[self.robot_trap_type]._id_017B );
                    self _meth_84A5( 120 );
                    self _meth_84A2( 112 );
                    self makeusable();
                    self enableplayeruse( var_0 );
                }

                continue;
            }

            self disableplayeruse( var_2 );
        }

        wait 1;
    }
}

robot_trap_attackzombies()
{
    self endon( "death" );
    level endon( "game_ended" );
    self setscriptablepartstate( "LED_Face", "Smile" );

    for (;;)
    {
        if ( !isdefined( self._id_2536 ) )
            break;

        self._id_2536 waittill( "trigger", var_0 );

        if ( isplayer( var_0 ) )
            continue;

        if ( !_id_0A77::_id_FF18( var_0, 0, 1 ) )
            continue;

        if ( var_0.agent_type == "ratking" )
            continue;

        if ( isdefined( var_0.robot_target ) )
            continue;

        if ( distancesquared( var_0.origin, self.origin ) < 9216 )
        {
            var_0.robot_target = 1;
            self setscriptablepartstate( "LED_Face", "Sad" );
            self setscriptablepartstate( "LED_Panel", "ZAP" );
            thread robot_zap( var_0 );
            wait 0.5;
            self setscriptablepartstate( "LED_Face", "Smile" );
            self setscriptablepartstate( "LED_Panel", "Idle" );
            continue;
        }

        var_1 = var_0.origin + ( 0, 0, 50 );
        var_2 = 0;

        if ( !sighttracepassed( self._id_2514, var_1, 0, self ) )
        {
            if ( !sighttracepassed( self.alt_attackheightpos, var_1, 0, self ) )
                continue;

            var_2 = 1;
        }

        if ( !isdefined( self._id_2536 ) )
            break;

        if ( !isdefined( self._id_8BF0[self._id_252E] ) )
        {
            var_0.robot_target = 1;
            self._id_8BF0[self._id_252E] = 1;
            self._id_252E++;
            thread launch_rocket( var_0, self._id_252E, var_2 );
        }

        if ( self._id_252E % 2 )
            self waittill( "firework_exploded" );

        wait( self._id_451C._id_DDAC );

        if ( !isdefined( self.owner ) )
            break;

        if ( self._id_252E >= level.robot_trap_settings["crafted_ims"]._id_C228 )
            break;
    }

    if ( isdefined( self._id_3A9D ) && isdefined( self.owner ) && self._id_3A9D == self.owner )
        return;

    self notify( "death" );
}

robot_zap( var_0 )
{
    var_0.dontmutilate = 1;
    var_0.electrocuted = 1;
    thread _id_601A( var_0 );
    var_0 setscriptablepartstate( "electrocuted", "on" );

    if ( isdefined( self.owner ) )
        var_1 = self.owner;
    else
        var_1 = undefined;

    var_0 _meth_80B0( var_0.health + 100, self.origin, var_1, self, "MOD_UNKNOWN", "iw7_robotzap_zm" );
}

_id_601A( var_0 )
{
    var_0 endon( "death" );
    var_1 = [ "J_SpineLower", "J_Chest", "J_Head", "J_Neck", "J_Crotch" ];
    var_2 = self gettagorigin( "tag_fx_laser_dish" );
    var_3 = scripts\engine\utility::_id_DC6B( var_1 );
    var_4 = var_0 gettagorigin( var_3 );
    playloopsound( self.origin, "trap_electric_shock" );
    playfxbetweenpoints( level._effect["robot_zap"], var_2, vectortoangles( var_4 - var_2 ), var_4 );
}

launch_rocket( var_0, var_1, var_2 )
{
    if ( !isdefined( self.last_launch_tube ) )
        self.last_launch_tube = 0;

    if ( self.last_launch_tube == 0 )
    {
        var_3 = self.attacklaunchpos[1];
        self setscriptablepartstate( "right_launch", "launch" );
    }
    else
    {
        self setscriptablepartstate( "left_launch", "launch" );
        var_3 = self.attacklaunchpos[0];
    }

    thread launch_anim();

    if ( self.last_launch_tube == 0 )
        self.last_launch_tube = 1;
    else
        self.last_launch_tube = 0;

    var_4 = spawn( "script_model", var_3 );
    var_4 setmodel( self._id_451C._id_6A03 );
    var_4.angles = self.angles;
    var_5 = self._id_451C._id_039B;
    var_6 = self.owner;
    var_7 = self._id_2514;

    if ( var_2 )
        var_7 = self.alt_attackheightpos;

    var_4 moveto( var_7, self._id_2528, self._id_2528 * 0.5, 0 );
    wait( self._id_2528 );
    var_4 setscriptablepartstate( "rocket", "explode" );

    if ( isdefined( var_6 ) )
        var_8 = magicbullet( var_5, var_4.origin, ( var_0.origin[0], var_0.origin[1], var_4.origin[2] - 5 ), var_6 );
    else
        var_8 = magicbullet( var_5, var_4.origin, var_0.origin, level.players[0] );

    var_8 thread watch_for_death();
    wait 0.1;
    var_4 delete();
    var_8 _meth_8206( var_0 );
    wait 1.5;
    self notify( "firework_exploded" );
}

launch_anim()
{
    self endon( "death" );
    self setscriptablepartstate( "main", "anim_launch" );
    self setscriptablepartstate( "LED_Panel", "Boom" );
    self setscriptablepartstate( "LED_Face", "Sad" );
    wait 1;

    if ( self._id_252E % 2 )
    {
        self setscriptablepartstate( "main", "anim_headspin" );
        wait 1;
    }

    self setscriptablepartstate( "LED_Panel", "Idle" );
    self setscriptablepartstate( "LED_Face", "Smile" );
    self setscriptablepartstate( "main", "anim_idle" );
}

watch_for_death()
{
    self waittill( "death" );
    earthquake( 0.35, 1, self.origin, 196 );
    playrumbleonentity( "artillery_rumble", self.origin );
}
