// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    level._effect["holyWater_ring_idle"] = loadfx( "vfx/iw7/levels/cp_disco/vfx_holywater_ring_idle" );
    level._effect["holyWater_explode"] = loadfx( "vfx/core/expl/grenade_flash" );
    scripts\engine\utility::_id_6E39( "power_holyWater_enabled" );
    scripts\engine\utility::_id_6E39( "flag_player_holding_holyWater" );
    level._id_D782["power_holyWater"]._id_AD4E = [];
}

giveholywater()
{
    self.holywater = spawnstruct();
    self.holywater.hold_time = 0;
    thread holywater_projectile_watcher();
    scripts\engine\utility::_id_6E3E( "power_holyWater_enabled" );
}

takeholywater()
{
    level notify( "cleanup_holyWater_weapon" );
    scripts\engine\utility::_id_6E2A( "power_holyWater_enabled" );
    self.holywater = undefined;
}

holywater_projectile_watcher()
{
    level endon( "cleanup_holyWater_weapon" );

    for (;;)
    {
        self waittill( "grenade_fire", var_0 );

        if ( !isdefined( var_0._id_13C2E ) )
            continue;

        if ( var_0._id_13C2E != "holywater_cp" )
            continue;

        scripts\engine\utility::_id_6E2A( "flag_player_holding_holyWater" );
        level notify( "holyWater_thrown" );
        var_0.owner = self;
        var_0 thread holywater_projectile_instance();
    }
}

holywater_projectile_instance()
{
    self endon( "death" );
    level._id_D782["power_holyWater"]._id_AD4E = scripts\engine\utility::_id_2279( level._id_D782["power_holyWater"]._id_AD4E, self );
    var_0 = gettime();
    level.zbg_active = 1;
    self waittill( "missile_stuck" );
    self hide();
    var_1 = 10 - ( gettime() - var_0 ) / 1000;
    var_2 = undefined;

    if ( var_1 > 0 )
    {
        level notify( "holyWater_landed", self );
        var_2 = spawn( "script_model", self.origin );
        var_2 setmodel( "cp_holywater_trap" );
        var_2 linkto( self );
        wait 1;
        var_2 setscriptablepartstate( "fx", "start" );
        var_2 thread create_aod( var_0 );
        wait( var_1 );
    }

    self notify( "aod_removed" );
    level._id_D782["power_holyWater"]._id_AD4E = scripts\engine\utility::array_remove( level._id_D782["power_holyWater"]._id_AD4E, self );

    if ( isdefined( var_2 ) )
        var_2 delete();

    level.zbg_active = undefined;
    self delete();
}

create_aod( var_0 )
{
    var_1 = _id_0A4A::_id_7DB0( "axis" );
    var_2 = scripts\engine\utility::_id_782F( self.origin, var_1, undefined, undefined, 64, 0 );

    foreach ( var_4 in var_2 )
    {
        var_4.dontmutilate = 1;
        var_4 _meth_80B0( var_4.health + 100, self.origin, self, self, "MOD_UNKNOWN", "iw7_electrictrap_zm" );
    }

    var_6 = _func_27A( self.origin, ( 72, 72, 12 ), ( 0, 0, 0 ), "axis" );

    while ( isdefined( self ) )
        wait 0.05;

    _func_27C( var_6 );
}
