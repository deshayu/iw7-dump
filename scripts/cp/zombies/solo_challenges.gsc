// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init_solo_challenges()
{
    _id_956D();
    _id_97B0();
}

_id_956D()
{
    var_0 = getdvar( "ui_mapname" );
    level._id_13F16 = "cp/zombies/" + var_0 + "_challenges.csv";

    if ( !_func_1F6( level._id_13F16 ) )
        level._id_13F16 = undefined;

    level._id_3C17 = [];

    if ( isdefined( level._id_3C1E ) )
        [[ level._id_3C1E ]]();
}

_id_12D9C( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    if ( isplayer( self ) )
    {
        if ( !_id_4B4D( var_0 ) )
            return;

        var_10 = self._id_4B4A;
        self thread [[ var_10._id_12E9C ]]( var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );
    }
    else
    {
        if ( !var_9 _id_4B4D( var_0 ) )
            return;

        var_10 = var_9._id_4B4A;
        var_9 thread [[ var_10._id_12E9C ]]( var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );
    }
}

_id_62C6()
{
    if ( _id_4B4B() && _id_0A77::_id_462B( "challenge" ) )
        _id_4DAE();
}

_id_4DAE( var_0 )
{
    if ( !_id_4B4B() )
        return;

    var_1 = var_0._id_4B4A;
    var_0 _id_12BF7();

    if ( var_1 [[ var_1._id_9F82 ]]( var_0 ) )
    {
        _id_56AD( "challenge_success", 0, undefined, var_0 );
        var_1 [[ var_1._id_E4C5 ]]();
        var_2 = "challenge";

        if ( isdefined( level._id_3C24 ) )
            var_2 = level._id_3C24;

        if ( _id_9F17( var_1 ) )
        {
            if ( var_0._id_134FD == "p5_" || var_0._id_134FD == "p6_" )
                var_0 thread _id_0A6A::_id_12885( "challenge_success", "zmb_comment_vo" );
        }
    }
    else
    {
        _id_56AD( "challenge_failed", 0, undefined, var_0 );

        if ( _id_9F17( var_1 ) )
        {
            if ( isdefined( level._id_3C2B[var_1._id_DE3F] ) && _id_9F17( var_1 ) )
                level._id_3C2B[var_1._id_DE3F]++;

            if ( var_1._id_DE3F == "no_laststand" || var_1._id_DE3F == "no_bleedout" || var_1._id_DE3F == "protect_player" )
                _id_0D45::_id_AF64( var_1._id_DE3F, level._id_13BD3, 0, level._id_3C2B[var_1._id_DE3F] );
            else
                _id_0D45::_id_AF64( var_1._id_DE3F, level._id_13BD3, var_1._id_4BA0 / var_1._id_0155 * 100, level._id_3C2B[var_1._id_DE3F] );

            foreach ( var_0 in level.players )
            {
                if ( !_id_0A77::_id_9F02() && level.players.size > 1 )
                {
                    _id_0A6A::_id_12886( "challenge_fail_team" );
                    continue;
                }

                var_0 thread _id_0A6A::_id_12885( "challenge_fail_solo", "zmb_comment_vo" );
            }
        }

        var_1 [[ var_1._id_6AD0 ]]();
        level._id_1BE8 = 0;
        _id_0A63::_id_12DDB( 0 );
        _id_0A4B::_id_12D9F( var_1._id_DE3F, 0 );
    }

    level notify( "challenge_deactivated" );
    var_1 [[ var_1._id_4DDE ]]( var_0 );
}

_id_9F17( var_0 )
{
    switch ( var_0._id_DE3F )
    {
        case "challenge_success":
        case "challenge_failed":
        case "next_challenge":
            return 0;
        default:
            return 1;
    }
}

copy_challenge_struct( var_0 )
{
    var_1 = level._id_3C17[var_0];
    var_2 = spawnstruct();
    var_2._id_DE3F = var_1._id_DE3F;
    var_2._id_0155 = var_1._id_0155;
    var_2._id_5021 = var_1._id_5021;
    var_2._id_9F82 = var_1._id_9F82;
    var_2._id_386E = var_1._id_386E;
    var_2._id_1609 = var_1._id_1609;
    var_2._id_4DDE = var_1._id_4DDE;
    var_2._id_6ACB = var_1._id_6ACB;
    var_2._id_12E9C = var_1._id_12E9C;
    var_2._id_E4C5 = var_1._id_E4C5;
    var_2._id_6AD0 = var_1._id_6AD0;
    return var_2;
}

_id_15D7( var_0, var_1 )
{
    var_1._id_4B4A = copy_challenge_struct( var_0 );

    if ( var_1._id_4B4A [[ var_1._id_4B4A._id_386E ]]() )
    {
        var_2 = _id_7897( var_0 );

        if ( isdefined( var_2 ) )
            var_1._id_4B4A._id_0155 = var_2;
        else
            level._id_4B52 = -1;

        _id_56AD( var_0, 1, var_2, var_1 );
        var_1 _id_F31A( var_0 );
        var_1 notify( "new_challenge_started" );
        var_1._id_4B4A [[ var_1._id_4B4A._id_1609 ]]( var_1 );
    }
    else
        var_1._id_4B4A [[ var_1._id_4B4A._id_6ACB ]]();
}

_id_7897( var_0 )
{
    return [[ level._id_3C23 ]]( var_0 );
}

_id_56AD( var_0, var_1, var_2, var_3 )
{
    var_4 = tablelookup( level._id_13F16, 1, var_0, 0 );

    if ( var_1 )
    {
        if ( var_0 == "next_challenge" )
            var_3 playlocalsound( "zmb_challenge_config" );
        else
            var_3 playlocalsound( "zmb_challenge_start" );

        var_3 setclientomnvar( "zm_show_challenge", -1 );
        wait 0.05;

        if ( level.script != "cp_disco" )
            var_3 setclientomnvar( "ui_intel_active_index", -1 );

        var_3 setclientomnvar( "ui_intel_progress_current", -1 );
        wait 0.05;
        var_3 setclientomnvar( "ui_intel_progress_max", -1 );
        var_3 setclientomnvar( "ui_intel_percent", -1 );
        wait 0.05;
        var_3 setclientomnvar( "ui_intel_target_player", -1 );
        var_3 setclientomnvar( "ui_intel_prechallenge", 0 );
        wait 0.05;
        var_3 setclientomnvar( "ui_intel_timer", -1 );
        var_3 setclientomnvar( "ui_intel_challenge_scalar", -1 );
        wait 0.3;

        if ( isdefined( var_2 ) )
        {
            var_5 = var_2;

            if ( isdefined( var_3.kung_fu_progression ) && isdefined( var_3.kung_fu_progression.active_discipline ) )
                var_5 = var_2 - var_3.kung_fu_progression.challenge_progress[var_3.kung_fu_progression.active_discipline];

            var_3 setclientomnvar( "ui_intel_challenge_scalar", var_2 );
            var_3 setclientomnvar( "ui_intel_progress_max", var_2 );
            var_3 setclientomnvar( "ui_intel_progress_current", var_5 );
        }
        else
            var_3 setclientomnvar( "ui_intel_challenge_scalar", -1 );

        var_3 setclientomnvar( "ui_intel_prechallenge", 1 );
        var_3 setclientomnvar( "ui_intel_active_index", int( var_4 ) );
        var_3._id_4B4C = int( var_4 );
        var_3 setclientomnvar( "ui_intel_timer", -1 );
        var_3 setclientomnvar( "zm_show_challenge", 4 );
        return;
    }

    level thread _id_100CB( var_0, var_4, var_3 );
}

_id_100CB( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_2 endon( "disconnect" );
    wait 1;

    if ( var_0 == "challenge_failed" )
    {
        var_2 playlocalsound( "zmb_challenge_fail" );
        var_2 setclientomnvar( "zm_show_challenge", 2 );
    }
    else
    {
        var_2 playlocalsound( "zmb_challenge_complete" );
        var_2 setclientomnvar( "zm_show_challenge", 3 );
    }

    if ( isdefined( level.show_challenge_outcome_func ) )
    {
        [[ level.show_challenge_outcome_func ]]( var_0, var_1, var_2 );
        return;
    }

    wait 3.0;
    var_2 thread _id_E20D();
    setomnvar( "zm_challenge_progress", 0 );
}

_id_E20D()
{
    self notify( "challenge_complete" );
    wait 0.5;

    if ( level.script != "cp_disco" )
        self setclientomnvar( "ui_intel_active_index", -1 );

    self setclientomnvar( "ui_intel_progress_current", -1 );
    self setclientomnvar( "ui_intel_progress_max", -1 );
    self setclientomnvar( "ui_intel_percent", -1 );
    self setclientomnvar( "ui_intel_target_player", -1 );
    self setclientomnvar( "ui_intel_prechallenge", 0 );
    self setclientomnvar( "ui_intel_timer", -1 );
    self setclientomnvar( "ui_intel_challenge_scalar", -1 );
    self setclientomnvar( "zm_show_challenge", -1 );
}

_id_DEA1( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 )
{
    var_11 = spawnstruct();
    var_11._id_DE3F = var_0;
    var_11._id_0155 = var_1;
    var_11._id_5021 = var_2;
    var_11._id_9F82 = ::_id_4FFA;

    if ( isdefined( var_3 ) )
        var_11._id_9F82 = var_3;

    var_11._id_386E = ::_id_4FDD;

    if ( isdefined( var_4 ) )
        var_11._id_386E = var_4;

    var_11._id_1609 = var_5;
    var_11._id_4DDE = var_6;
    var_11._id_6ACB = ::_id_4FED;

    if ( isdefined( var_7 ) )
        var_11._id_6ACB = var_7;

    var_11._id_12E9C = var_8;
    var_11._id_E4C5 = ::_id_5011;

    if ( isdefined( var_9 ) )
        var_11._id_E4C5 = var_9;

    var_11._id_6AD0 = ::_id_4FEE;

    if ( isdefined( var_10 ) )
        var_11._id_6AD0 = var_10;

    level._id_3C17[var_0] = var_11;
}

_id_12D9E( var_0, var_1 )
{
    self setclientomnvar( "zm_show_challenge", 1 );
    self setclientomnvar( "ui_intel_progress_current", var_0 );
}

_id_4FDD()
{
    return 1;
}

_id_4FED()
{

}

_id_4FFA()
{
    if ( isdefined( self.success ) )
        return self.success;
    else
        return 0;
}

_id_5022()
{
    if ( isdefined( self.success ) )
        return self.success;
    else
        return self._id_5021;
}

_id_4FEE()
{

}

_id_5010()
{
    self._id_4B4A.success = self._id_4B4A._id_5021;
}

_id_5011()
{

}

_id_4B4B()
{
    return isdefined( self._id_4B4A );
}

_id_4B4D( var_0 )
{
    return _id_4B4B() && self.current_player_challenge == var_0;
}

_id_12BF7()
{
    self._id_4B4A = undefined;
}

_id_F31A( var_0 )
{
    self.current_player_challenge = var_0;
}

_id_97B0()
{
    if ( !isdefined( level._id_13F16 ) )
        return;

    var_0 = level._id_13F16;
    var_1 = 0;
    var_2 = 1;
    var_3 = 99;
    var_4 = 1;
    var_5 = 2;
    var_6 = 6;
    var_7 = 7;
    var_8 = 8;

    for ( var_9 = var_2; var_9 <= var_3; var_9++ )
    {
        var_10 = tablelookup( var_0, var_1, var_9, var_4 );

        if ( var_10 == "" )
            break;

        var_11 = tablelookup( var_0, var_1, var_9, var_5 );
        var_12 = tablelookup( var_0, var_1, var_9, var_8 );

        if ( isdefined( level._id_3C17[var_10] ) )
        {
            level._id_3C17[var_10]._id_1C81 = var_11;
            level._id_3C17[var_10]._id_1C8C = int( tablelookup( var_0, var_1, var_9, var_6 ) );
            level._id_3C17[var_10]._id_1649 = strtok( var_12, " " );
        }
    }
}

_id_4FE2( var_0 )
{
    return 1;
}

_id_12DA9( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_54CB ) )
        return;

    var_9 = var_1;

    if ( isdefined( var_1.playerowner ) && var_1.playerowner _id_0A77::_id_9D05( 1 ) )
        var_9 = var_1.playerowner;

    if ( !isplayer( var_9 ) )
        return;

    if ( !isdefined( var_9._id_4B4A ) )
        return;

    var_10 = var_9._id_4B4A;

    if ( isdefined( level._id_4C46 ) )
    {
        var_11 = self [[ level._id_4C46 ]]( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 );

        if ( !scripts\engine\utility::_id_9CEE( var_11 ) )
            return;
    }
}
