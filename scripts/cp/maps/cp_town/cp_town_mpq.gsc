// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

cp_town_mpq_init()
{
    _id_0D52::_id_DED3( "deathray", 0, ::_id_4FF9, ::deathray_step_1, ::complete_deathray_step_1, ::debug_deathray_step_1, 1 );
    _id_0D52::_id_DED3( "deathray", 1, ::_id_4FF9, ::deathray_step_2, ::complete_deathray_step_2, ::debug_deathray_step_2, 1 );
    _id_0D52::_id_DED3( "deathray", 2, ::_id_4FF9, ::deathray_step_3, ::complete_deathray_step_3, ::debug_deathray_step_3, 1 );
    _id_0D52::_id_DED3( "deathray", 3, ::_id_4FF9, ::deathray_step_4, ::complete_deathray_step_4, ::debug_deathray_step_4, 1 );
    _id_0D52::_id_DED3( "deathray", 4, ::_id_4FF9, ::deathray_step_5, ::complete_deathray_step_5, ::debug_deathray_step_5, 1 );
    _id_0D52::_id_DED3( "deathray", 5, ::_id_4FF9, ::deathray_step_6, ::complete_deathray_step_6, ::debug_deathray_step_6, 1 );
    _id_0D52::_id_DED3( "deathray", 6, ::_id_4FF9, ::deathray_step_7, ::complete_deathray_step_7, ::debug_deathray_step_7, 1 );
    _id_0D52::_id_DED3( "chemistry", 0, ::init_chemistry_step_1, ::chemistry_step_1, ::complete_chemistry_step_1, ::debug_chemistry_step_1, 2 );
    _id_0D52::_id_DED3( "chemistry", 1, ::init_chemistry_step_2, ::chemistry_step_2, ::complete_chemistry_step_2, ::debug_chemistry_step_2, 2 );
    _id_0D52::_id_DED3( "chemistry", 2, ::init_chemistry_step_3, ::chemistry_step_3, ::complete_chemistry_step_3, ::debug_chemistry_step_3, 2, " Create & carry Chem Mix " );
    _id_0D52::_id_DED3( "chemistry", 3, ::init_chemistry_step_4, ::chemistry_step_4, ::complete_chemistry_step_4, ::debug_chemistry_step_4, 2, " Add Chem Mix to bomb" );
    _id_0D52::_id_DED3( "launchcode", 0, ::init_launchcode_step_1, ::launchcode_step_1, ::launchcode_step_1_complete, ::launchcode_step_1_debug, 3, " Open safe" );
    _id_0D52::_id_DED3( "launchcode", 1, ::_id_4FF9, ::launchcode_step_2, ::launchcode_step_2_complete, ::launchcode_step_2_debug, 3, " Take codes" );
    _id_0D52::_id_DED3( "launchcode", 2, ::_id_4FF9, ::launchcode_step_3, ::launchcode_step_3_complete, ::launchcode_step_3_debug, 3, " Build bomb" );
    _id_0D52::_id_DED3( "launchcode", 3, ::_id_4FF9, ::launchcode_step_4, ::complete_launchcode_step_4, ::debug_launchcode_step_4, 3 );
    level.mpq_arm_func = ::set_quake_flag_if_close_to_arm;
    level._effect["locker_key"] = loadfx( "vfx/iw7/levels/cp_disco/Requests/vfx_locker_key.vfx" );
    level._effect["ufo_glow_death"] = loadfx( "vfx/iw7/levels/cp_town/alien/vfx_atomize_zombie.vfx" );
    level._effect["life_ray_beam"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_life_beam.vfx" );
    level._effect["life_ray_burst"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_revive_burst.vfx" );
    level._effect["death_ray_beam"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_death_beam.vfx" );
    level._effect["death_ray_vaporize"] = loadfx( "vfx/iw7/_requests/mp/vfx_atomize_body.vfx" );
    level._effect["torso_glow"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_part_torso_glow.vfx" );
    level._effect["head_glow"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_part_head_glow.vfx" );
    level._effect["meat_freeze"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_meat_freeze.vfx" );
    level._effect["mirror_break"] = loadfx( "vfx/iw7/levels/cp_town/skq/vfx_mirror_break.vfx" );
    level._effect["turnstile_teleport"] = loadfx( "vfx/iw7/levels/cp_town/vfx_town_telep_diss.vfx" );
    init_zom_body();
    level thread spawn_film_reel_hints();
    level thread listen_for_zombie_spawn();
    level thread listen_for_death_by_cleaver();
    level thread listen_for_toilet_head();
    level thread listen_for_turnstile_damage();
    level thread listen_for_photo_change();
    level thread shuffle_film_reels();
    scripts\engine\utility::_id_6E39( "deathray_step1" );
    scripts\engine\utility::_id_6E39( "deathray_step2" );
    scripts\engine\utility::_id_6E39( "deathray_step3" );
    scripts\engine\utility::_id_6E39( "deathray_step4" );
    scripts\engine\utility::_id_6E39( "deathray_step5" );
    scripts\engine\utility::_id_6E39( "deathray_step6" );
    scripts\engine\utility::_id_6E39( "deathray_step7" );
    scripts\engine\utility::_id_6E39( "chemistry_step1" );
    scripts\engine\utility::_id_6E39( "chemistry_step2" );
    scripts\engine\utility::_id_6E39( "chemistry_step3" );
    scripts\engine\utility::_id_6E39( "chemistry_step4" );
    scripts\engine\utility::_id_6E39( "launchcode_step1" );
    scripts\engine\utility::_id_6E39( "launchcode_step2" );
    scripts\engine\utility::_id_6E39( "launchcode_step3" );
    scripts\engine\utility::_id_6E39( "launchcode_step4" );
    scripts\engine\utility::_id_6E39( "frozen_meat_gone" );
    scripts\engine\utility::_id_6E39( "quake_lifts_arm" );
    scripts\engine\utility::_id_6E39( "allow_quake_lifts_arm" );
}

debug_bounce_laser()
{
    wait 10;

    for (;;)
    {
        bounce_laser( "tag_origin_death_ray_fx", "life_ray_beam", "life_ray_burst" );
        wait 10;
        bounce_laser( "tag_origin_death_ray_fx", "death_ray_beam", "death_ray_vaporize" );
        wait 10;
    }
}

set_backstory_interaction_active_for_players()
{
    foreach ( var_1 in level.players )
    {
        if ( scripts\engine\utility::_id_9CEE( var_1.played_backstory_vo ) )
        {
            _id_0A59::_id_175D( level.backstory_interactions[0], var_1 );
            var_1.played_backstory_vo = 0;
        }
    }
}

deathray_step_1()
{
    scripts\engine\utility::_id_6E4C( "deathray_step1" );
}

deathray_step_2()
{
    scripts\engine\utility::_id_6E4C( "deathray_step2" );
}

deathray_step_3()
{
    scripts\engine\utility::_id_6E4C( "deathray_step3" );
}

deathray_step_4()
{
    scripts\engine\utility::_id_6E4C( "deathray_step4" );
}

deathray_step_5()
{
    scripts\engine\utility::_id_6E4C( "deathray_step5" );
}

deathray_step_6()
{
    scripts\engine\utility::_id_6E4C( "deathray_step6" );
}

deathray_step_7()
{
    scripts\engine\utility::_id_6E4C( "deathray_step7" );
}

complete_deathray_step_1()
{
    scripts\engine\utility::_id_6E3E( "deathray_step1" );
    level thread set_backstory_interaction_active_for_players();
}

complete_deathray_step_2()
{
    scripts\engine\utility::_id_6E3E( "deathray_step2" );
    level thread set_backstory_interaction_active_for_players();
}

complete_deathray_step_3()
{
    scripts\engine\utility::_id_6E3E( "deathray_step3" );
    level thread set_backstory_interaction_active_for_players();
}

complete_deathray_step_4()
{
    scripts\engine\utility::_id_6E3E( "deathray_step4" );
    level thread set_backstory_interaction_active_for_players();
}

complete_deathray_step_5()
{
    scripts\engine\utility::_id_6E3E( "deathray_step5" );
    level thread set_backstory_interaction_active_for_players();
}

complete_deathray_step_6()
{
    scripts\engine\utility::_id_6E3E( "deathray_step6" );
    level thread set_backstory_interaction_active_for_players();
}

complete_deathray_step_7()
{
    scripts\engine\utility::_id_6E3E( "deathray_step7" );
    level thread set_backstory_interaction_active_for_players();
}

debug_deathray_step_1()
{
    foreach ( var_1 in level.mpq_zom_body_parts )
    {
        set_quest_omnvar_by_targetname( var_1 );
        var_1 hide();
        wait 0.1;
    }

    level.leg_knocked_down = 1;
    var_3 = getent( "mpq_zom_l_leg_part_ground", "targetname" );

    if ( isdefined( var_3 ) )
        var_3 hide();

    foreach ( var_5, var_1 in level.mpq_zom_parts )
    {
        if ( !isdefined( var_1._id_757B ) )
            level thread glow_bed_part( var_5, var_1 );

        var_1 show();
        wait 0.1;
    }

    level.mpq_zom_parts_picked_up["head"] = 1;
    level.mpq_zom_parts_picked_up["torso"] = 1;
    level.mpq_zom_parts_picked_up["left_arm"] = 1;
    level.mpq_zom_parts_picked_up["right_arm"] = 1;
    level.mpq_zom_parts_picked_up["left_leg"] = 1;
    level.mpq_zom_parts_picked_up["right_leg"] = 1;
    level.mpq_zom_parts_index = level.mpq_zom_parts_picked_up.size;
}

debug_deathray_step_2()
{
    var_0 = getent( "mpq_punch_card", "targetname" );
    var_0 hide();
    set_quest_omnvar_by_targetname( var_0 );
    level.punch_card_acquired = 1;
}

debug_deathray_step_3()
{
    var_0 = getent( "elvira_mirror", "targetname" );
    var_0 hide();
    level.mirrors_picked_up["elvira_mirror"] = 1;
    set_quest_omnvar_by_targetname( var_0 );
    var_0 = getent( "car_mirror", "targetname" );
    var_0 hide();
    var_0 = getent( "car_mirror_ground", "targetname" );
    var_0 hide();
    level.mirrors_picked_up["car_mirror_ground"] = 1;
    set_quest_omnvar_by_targetname( var_0 );
    var_0 = getent( "bathroom_mirror_piece", "targetname" );
    var_0 hide();
    level.mirrors_picked_up["bathroom_mirror_piece"] = 1;
    set_quest_omnvar_by_targetname( var_0 );
    var_1 = scripts\engine\utility::_id_8180( "mirror_placement", "script_noteworthy" );

    foreach ( var_3 in var_1 )
    {
        var_4 = scripts\engine\utility::_id_817E( var_3._id_0334, "targetname" );
        var_0 = spawn( "script_model", var_4.origin );
        var_0.angles = var_4.angles;
        var_0 setmodel( var_4.script_noteworthy );
    }

    level.mirrors_placed["car_mirror"] = 1;
    level.mirrors_placed["bathroom_mirror"] = 1;
    level.mirrors_placed["elvira_mirror"] = 1;
}

debug_deathray_step_4()
{
    foreach ( var_1 in level.mpq_zom_parts )
        var_1 hide();

    level.knife_throw_target_body show();
    level.body_made = 1;
    level.terminal_unlocked = 1;
}

debug_deathray_step_5()
{
    level.polarity_reversed = 1;
}

debug_deathray_step_6()
{
    level.knife_throw_target_body hide();
    spawn_garage_key( level.knife_throw_target_body.origin );
    level.key_spawned = 1;
}

debug_deathray_step_7()
{
    foreach ( var_1 in level.mpq_zom_body_parts )
    {
        set_quest_omnvar_by_targetname( var_1 );
        var_1 hide();
        wait 0.1;
    }

    level _id_0A77::set_completed_quest_mark( 1 );
    level.garage_key_found = 1;
}

init_chemistry_step_1()
{

}

init_chemistry_step_2()
{

}

init_chemistry_step_3()
{

}

init_chemistry_step_4()
{

}

chemistry_step_1()
{
    scripts\engine\utility::_id_6E4C( "chemistry_step1" );
}

chemistry_step_2()
{
    scripts\engine\utility::_id_6E4C( "chemistry_step2" );
}

chemistry_step_3()
{
    scripts\engine\utility::_id_6E4C( "chemistry_step3" );
}

chemistry_step_4()
{
    scripts\engine\utility::_id_6E4C( "chemistry_step4" );
}

complete_chemistry_step_1()
{
    scripts\engine\utility::_id_6E3E( "chemistry_step1" );
    level thread set_backstory_interaction_active_for_players();
}

complete_chemistry_step_2()
{
    scripts\engine\utility::_id_6E3E( "chemistry_step2" );
    level thread set_backstory_interaction_active_for_players();
}

complete_chemistry_step_3()
{
    scripts\engine\utility::_id_6E3E( "chemistry_step3" );
    level thread set_backstory_interaction_active_for_players();
}

complete_chemistry_step_4()
{
    scripts\engine\utility::_id_6E3E( "chemistry_step4" );
    level thread set_backstory_interaction_active_for_players();
}

debug_chemistry_step_1()
{

}

debug_chemistry_step_2()
{

}

debug_chemistry_step_3()
{

}

debug_chemistry_step_4()
{

}

init_launchcode_step_1()
{
    scripts\engine\utility::_id_6E39( "teleporter_charged" );
    scripts\engine\utility::_id_6E39( "teleporter_charging" );
    level.teleporter_pieces_found = 0;
    level.teleporter_pieces_placed = 0;
    level.safe = getent( "town_safe", "targetname" );
    level.gauge_trigs = getentarray( "mpq_gauge_trig", "targetname" );
    level thread phase3_launchcode_interaction();
}

launchcode_step_1()
{
    scripts\engine\utility::_id_22D2( level.gauge_trigs, ::phase3_watch_gauge_trigs );
    level thread phase3_create_safe_combo();
    scripts\engine\utility::_id_6E4C( "launchcode_step1" );
}

launchcode_step_1_complete()
{
    scripts\engine\utility::_id_6E3E( "launchcode_step1" );
    phase3_open_safe();
    level thread set_backstory_interaction_active_for_players();
}

launchcode_step_1_debug()
{

}

launchcode_step_2()
{
    scripts\engine\utility::_id_6E4C( "launchcode_step2" );
}

launchcode_step_2_complete()
{
    scripts\engine\utility::_id_6E3E( "launchcode_step2" );
    _id_0A77::_id_F55F( 20 );
    level thread set_backstory_interaction_active_for_players();
}

launchcode_step_2_debug()
{

}

launchcode_step_3()
{
    scripts\cp\maps\cp_town\cp_town_crab_boss_fight::advance_pre_combat_stage();
    scripts\engine\utility::_id_6E4C( "launchcode_step3" );
}

launchcode_step_3_debug()
{

}

launchcode_step_3_complete()
{
    scripts\engine\utility::_id_6E3E( "launchcode_step3" );
    level.teleporter_pieces_placed = 3;
    level.teleporter_pieces_found = 3;
    _id_0A77::_id_F55F( 16 );
    _id_0A77::_id_F55F( 17 );
    _id_0A77::_id_F55F( 18 );
    scripts\engine\utility::_id_6E3E( "launchcode_step3" );
    level thread set_backstory_interaction_active_for_players();
}

launchcode_step_4()
{
    scripts\engine\utility::_id_6E4C( "launchcode_step4" );
}

complete_launchcode_step_4()
{
    scripts\engine\utility::_id_6E3E( "launchcode_step4" );
    level thread set_backstory_interaction_active_for_players();
}

debug_launchcode_step_4()
{

}

init_mpq_interactions()
{
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "mpq_zom_body", undefined, undefined, ::zom_body_bed_hint_func, ::zom_body_bed_activation_func, 0, 0, ::zom_body_bed_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "mpq_zom_body_part", undefined, undefined, ::zom_body_part_hint_func, ::zom_body_part_activation_func, 0, 0, ::zom_body_part_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "mirror", undefined, undefined, ::mirror_hint_func, ::mirror_activation_func, 0, 0, ::mirror_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "mirror_placement", undefined, undefined, ::mirror_placement_hint_func, ::mirror_placement_activation_func, 0, 0, ::mirror_placement_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "punch_card", undefined, undefined, ::punch_card_hint_func, ::punch_card_activation_func, 0, 0, ::punch_card_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "ray_gun_start", undefined, undefined, ::ray_gun_hint_func, ::ray_gun_activation_func, 0, 0, ::ray_gun_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "garage_door", undefined, undefined, ::garage_door_hint_func, ::garage_door_activation_func, 0, 0, ::garage_door_init_func, undefined );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "mpq_ray_gun", undefined, undefined, ::ray_gun_hint_func, ::ray_gun_hint_func, 0, 0, ::ray_gun_hint_func, undefined );
    level._id_9A12["take_launchcodes"] = "";
    level._id_9A12["bomb_teleporter_part"] = "";
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "take_launchcodes", undefined, undefined, undefined, ::phase3_take_launch_codes, 0, 0 );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "bomb_teleporter_part", undefined, undefined, undefined, ::phase3_take_bomb_part, 0, 0 );
    scripts\cp\maps\cp_town\cp_town_interactions::town_register_interaction( 1, "place_bomb_parts", undefined, undefined, ::phase3_place_bomb_parts_hint, ::phase3_place_bomb_parts, 0, 0 );
}

init_zom_body()
{
    var_0 = spawnstruct();
    var_0.origin = ( 4113.5, -4577.5, 20 );
    var_0.angles = ( 333.461, 131.629, -2.74148 );
    level.knife_throw_target_body = spawn( "script_model", var_0.origin );
    level.knife_throw_target_body setmodel( "fullbody_zmb_soldier" );
    level.knife_throw_target_body.angles = var_0.angles;
    level.knife_throw_target_body scriptmodelplayanim( "IW7_cp_zom_wheel_idle_01", 1 );
    level.knife_throw_target_body hide();
    level.zom_parts_placed = [];
}

zom_body_bed_hint_func( var_0, var_1 )
{
    return "";
}

zom_body_bed_activation_func( var_0, var_1 )
{
    if ( isdefined( level.body_made ) && isdefined( level.key_spawned ) )
    {
        if ( isdefined( level.key_fx ) )
        {
            level _id_0A77::set_completed_quest_mark( 1 );
            level.key_fx delete();
            level.garage_key_found = 1;
        }
    }
    else if ( level.mpq_zom_parts_picked_up.size > level.mpq_zom_parts_index )
    {
        foreach ( var_5, var_3 in level.mpq_zom_parts_picked_up )
        {
            level.zom_parts_placed[var_5] = 1;
            var_4 = level.mpq_zom_parts[var_5];

            if ( !isdefined( var_4._id_757B ) )
                level thread glow_bed_part( var_5, var_4 );

            var_4 show();
        }

        level.mpq_zom_parts_index = level.mpq_zom_parts_picked_up.size;
    }
}

glow_bed_part( var_0, var_1 )
{
    var_1._id_757B = spawn( "script_model", var_1.origin );

    switch ( var_0 )
    {
        case "torso":
            var_1._id_757B.origin = var_1._id_757B.origin + ( 17, -17, 50 );
            var_1.fx_ent_2 = spawn( "script_model", var_1.origin );
            var_1.fx_ent_2.origin = var_1.fx_ent_2.origin + ( 12, -12, 35 );
            var_1.fx_ent_2 setmodel( "tag_origin_limb_glow_fx" );
            break;
        case "head":
            var_1._id_757B.origin = var_1._id_757B.origin + ( 2, -2, 15 );
            break;
        case "left_arm":
            var_1._id_757B.origin = var_1._id_757B.origin + ( -9, -9, 3 );
            break;
        case "right_arm":
            var_1._id_757B.origin = var_1._id_757B.origin + ( 8, 8, 6 );
            break;
        case "left_leg":
            var_1._id_757B.origin = var_1._id_757B.origin + ( -17, -5, -5 );
            break;
        case "right_leg":
            var_1._id_757B.origin = var_1._id_757B.origin + ( -5, 10, -5 );
            break;
    }

    var_1._id_757B setmodel( "tag_origin_limb_glow_fx" );
}

zom_body_bed_init_func( var_0, var_1 )
{
    level.mpq_zom_parts_index = 0;
    level.mpq_zom_parts = [];
    level.mpq_zom_parts["head"] = getent( "mpq_zom_head", "targetname" );
    level.mpq_zom_parts["torso"] = getent( "mpq_zom_torso", "targetname" );
    level.mpq_zom_parts["left_arm"] = getent( "mpq_zom_l_arm", "targetname" );
    level.mpq_zom_parts["right_arm"] = getent( "mpq_zom_r_arm", "targetname" );
    level.mpq_zom_parts["left_leg"] = getent( "mpq_zom_l_leg", "targetname" );
    level.mpq_zom_parts["right_leg"] = getent( "mpq_zom_r_leg", "targetname" );
    level.mpq_zom_parts_picked_up = [];

    foreach ( var_3 in level.mpq_zom_parts )
        var_3 hide();

    level.life_ray_end = spawnstruct();
    level.life_ray_end.origin = ( 4116, -4575, 60 );
}

zom_body_bed_can_use_override_func( var_0, var_1 )
{

}

spawn_garage_key( var_0 )
{
    level.key_fx = spawnfx( level._effect["locker_key"], var_0 + ( 0, 0, 32 ) );
    wait 0.2;
    triggerfx( level.key_fx );
}

zom_body_part_init_func( var_0, var_1 )
{
    if ( !isdefined( level.mpq_zom_body_parts ) )
        level.mpq_zom_body_parts = [];

    level.mpq_zom_body_parts["head"] = getent( "mpq_zom_head_part", "targetname" );
    level.mpq_zom_body_parts["torso"] = getent( "mpq_zom_torso_part", "targetname" );
    level.mpq_zom_body_parts["left_arm"] = getent( "mpq_zom_l_arm_part", "targetname" );
    level.mpq_zom_body_parts["right_arm"] = getent( "mpq_zom_r_arm_part", "targetname" );
    level.mpq_zom_body_parts["left_leg"] = getent( "mpq_zom_l_leg_part", "targetname" );
    level.mpq_zom_body_parts["right_leg"] = getent( "mpq_zom_r_leg_part", "targetname" );
    var_2 = getent( "mpq_zom_l_leg_part_ground", "targetname" );

    if ( isdefined( var_2 ) )
        var_2 hide();

    level thread listen_for_power_handle();
    level thread listen_for_leg_damage();
    level thread play_glow_on_parts();
    level thread update_struct_positions();
}

update_struct_positions()
{
    wait 10;
    var_0 = scripts\engine\utility::_id_8180( "mirror", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_7E2E( ( 5579, 363.5, 342 ), var_0, 1000 );
    var_1.origin = ( 5579, 363.5, 342 );
    var_0 = scripts\engine\utility::_id_8180( "mpq_zom_body_part", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_7E2E( ( 6242, -526, 378 ), var_0, 1000 );
    var_1.origin = var_1.origin + ( 0, 0, 60 );
    var_1 = scripts\engine\utility::_id_7E2E( ( -317, 3665, 475 ), var_0, 1000 );
    var_1.origin = ( -327, 3661, 475 );
    var_1 = scripts\engine\utility::_id_7E2E( ( 3230, 1868, -90 ), var_0, 1000 );
    var_1.origin = ( 3236, 1878, -86 );
}

play_glow_on_parts()
{
    wait 5;

    foreach ( var_2, var_1 in level.mpq_zom_body_parts )
    {
        var_1._id_757B = spawn( "script_model", var_1.origin );
        wait 1;

        switch ( var_2 )
        {
            case "torso":
                var_1._id_757B.origin = var_1._id_757B.origin + ( 0, -5, 50 );
                break;
            case "head":
                var_1._id_757B.origin = var_1._id_757B.origin + ( 0, 0, 12 );
                break;
            case "left_arm":
                var_1._id_757B.origin = var_1._id_757B.origin + ( 0, 0, 20 );
                break;
            case "right_arm":
                var_1._id_757B.origin = var_1._id_757B.origin + ( 0, 0, 5 );
                break;
            case "left_leg":
                var_1._id_757B.origin = var_1._id_757B.origin + ( -20, -20, 0 );
                break;
            case "right_leg":
                break;
        }

        var_1._id_757B setmodel( "tag_origin_limb_glow_fx" );
        wait 1;
    }
}

zom_body_part_hint_func( var_0, var_1 )
{
    return "";
}

zom_body_part_activation_func( var_0, var_1 )
{
    var_2 = scripts\engine\utility::_id_7E2E( var_0.origin, level.mpq_zom_body_parts, 500 );
    var_3 = "none";

    foreach ( var_6, var_5 in level.mpq_zom_body_parts )
    {
        if ( var_2 == var_5 )
            var_3 = var_6;
    }

    if ( scripts\engine\utility::_id_9CEE( level.mpq_zom_parts_picked_up[var_3] ) )
        return;

    if ( var_3 == "left_arm" )
    {
        if ( !scripts\engine\utility::_id_6E25( "found_missing_handle" ) )
            return;

        if ( !scripts\engine\utility::_id_6E25( "quake_lifts_arm" ) )
            return;
    }
    else if ( var_3 == "torso" )
    {
        if ( !scripts\engine\utility::_id_6E25( "frozen_meat_gone" ) )
            return;
    }
    else if ( var_3 == "left_leg" )
    {
        if ( !isdefined( level.leg_knocked_down ) )
            return;

        var_7 = getent( "mpq_zom_l_leg_part_ground", "targetname" );
        var_7 hide();
    }

    set_quest_omnvar_by_targetname( var_2 );
    var_1 playlocalsound( "part_pickup" );
    playfx( level._effect["generic_pickup"], var_2.origin );
    var_2 hide();
    level.mpq_zom_parts_picked_up[var_3] = 1;

    switch ( var_2._id_0336 )
    {
        case "mpq_zom_head_part":
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_head", "town_comment_vo" );
            break;
        case "mpq_zom_torso_part":
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_torso", "town_comment_vo" );
            break;
        case "mpq_zom_l_arm_part":
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_arms", "town_comment_vo" );
            break;
        case "mpq_zom_r_arm_part":
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_arms", "town_comment_vo" );
            break;
        case "mpq_zom_l_leg_part":
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_legs", "town_comment_vo" );
            break;
        case "mpq_zom_r_leg_part":
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_legs", "town_comment_vo" );
            break;
    }

    var_2._id_757B setscriptablepartstate( "muzzle_fx", "inactive" );
    wait 0.1;

    if ( isdefined( var_2._id_757B ) )
        var_2._id_757B delete();
}

set_quest_omnvar_by_targetname( var_0 )
{
    var_1 = 0;

    switch ( var_0._id_0336 )
    {
        case "mpq_zom_head_part":
            var_1 = 1;
            break;
        case "mpq_zom_torso_part":
            var_1 = 6;
            break;
        case "mpq_zom_l_arm_part":
            var_1 = 2;
            break;
        case "mpq_zom_r_arm_part":
            var_1 = 3;
            break;
        case "mpq_zom_l_leg_part":
            var_1 = 4;
            break;
        case "mpq_zom_r_leg_part":
            var_1 = 5;
            break;
        case "mpq_punch_card":
            var_1 = 10;
            break;
        case "car_mirror_ground":
        case "mirror":
            var_1 = 7;
            break;
        case "elvira_mirror":
            var_1 = 8;
            break;
        case "bathroom_mirror_piece":
            var_1 = 9;
            break;
    }

    if ( var_1 > 0 )
        _id_0A77::_id_F55F( var_1 );
}

listen_for_power_handle()
{
    level.mpq_zom_body_parts["left_arm"].high_point = level.mpq_zom_body_parts["left_arm"].origin[2];
    var_0 = scripts\engine\utility::_id_8180( "mpq_zom_body_part", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_7E2E( level.mpq_zom_body_parts["left_arm"].origin, var_0 );
    _id_0A59::_id_E019( var_1 );
    scripts\engine\utility::_id_6E4C( "found_missing_handle" );
    level thread play_arm_fx( 0.25 );
    level.mpq_zom_body_parts["left_arm"] _meth_8212( -16, 1 );
    scripts\engine\utility::_id_6E3E( "allow_quake_lifts_arm" );
    scripts\engine\utility::_id_6E4C( "quake_lifts_arm" );
}

play_arm_fx( var_0 )
{
    playfx( level._effect["vfx_mini_stuck_impact"], level.mpq_zom_body_parts["left_arm"].origin );
}

listen_for_leg_damage()
{
    var_0 = level.mpq_zom_body_parts["left_leg"];
    var_0 setcandamage( 1 );
    var_1 = 0;

    while ( !var_1 )
    {
        var_0 waittill( "damage", var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 );

        if ( isdefined( var_6 ) && is_explosive( var_6, var_8 ) )
        {
            var_1 = 1;
            break;
        }

        wait 0.1;
    }

    knock_leg_down( var_0 );
    level.leg_knocked_down = 1;
}

knock_leg_down( var_0 )
{
    var_1 = getent( "mpq_zom_l_leg_part_ground", "targetname" );

    if ( isdefined( var_1 ) )
    {
        var_0 moveto( var_1.origin, 1 );
        var_0 rotateto( var_1.angles, 1 );
        wait 1;
        var_1._id_757B = var_0._id_757B;
        var_1 show();
        var_1._id_757B.origin = var_1.origin + ( 25, 10, 0 );
        var_1._id_757B setmodel( "tag_origin_limb_glow_fx" );
        var_0 hide();
    }
}

is_explosive( var_0, var_1 )
{
    return var_0 == "MOD_EXPLOSIVE_BULLET" || var_0 == "MOD_EXPLOSIVE" || var_0 == "MOD_GRENADE_SPLASH" || var_0 == "MOD_PROJECTILE" || var_0 == "MOD_PROJECTILE_SPLASH";
}

set_quake_flag_if_close_to_arm()
{
    self endon( "death" );

    if ( scripts\engine\utility::_id_6E25( "quake_lifts_arm" ) )
        return;

    var_0 = 10000;
    var_1 = level.mpq_zom_body_parts["left_arm"];

    if ( distancesquared( self.origin, var_1.origin ) < var_0 )
        lift_arm_out_of_ground( var_1 );
}

lift_arm_out_of_ground( var_0 )
{
    self endon( "death" );
    wait 1;
    var_1 = 0;
    var_2 = var_0.origin + ( 0, 0, 16 );

    while ( var_0.origin[2] < var_0.high_point )
    {
        if ( scripts\engine\utility::_id_6E25( "allow_quake_lifts_arm" ) )
        {
            playfx( level._effect["vfx_mini_stuck_release"], var_2 );
            var_0 _meth_8212( 4, 0.25 );
        }

        wait 3;
    }

    if ( scripts\engine\utility::_id_6E25( "allow_quake_lifts_arm" ) )
        scripts\engine\utility::_id_6E3E( "quake_lifts_arm" );
}

mirror_init_func( var_0, var_1 )
{
    level.mirrors_picked_up = [];
}

mirror_hint_func( var_0, var_1 )
{
    return "";
}

mirror_activation_func( var_0, var_1 )
{
    if ( level.mirrors_picked_up.size > 2 )
        return;

    var_2 = var_0.name;

    if ( isdefined( level.mirrors_picked_up[var_2] ) )
        return;

    if ( var_2 == "car_mirror" )
    {
        if ( level.car_mirror_hit )
        {
            var_3 = getent( "car_mirror_ground", "targetname" );
            set_quest_omnvar_by_targetname( var_3 );
            var_1 playlocalsound( "part_pickup" );
            playfx( level._effect["generic_pickup"], var_3.origin );
            var_3 delete();
            level.mirrors_picked_up[var_2] = 1;
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_mirror", "town_comment_vo" );
        }
    }
    else if ( var_2 == "bathroom_mirror" )
    {
        if ( level.bathroom_mirror_hit )
        {
            var_3 = getent( "bathroom_mirror_piece", "targetname" );
            set_quest_omnvar_by_targetname( var_3 );
            var_1 playlocalsound( "part_pickup" );
            playfx( level._effect["generic_pickup"], var_3.origin );
            var_3 delete();
            level.mirrors_picked_up[var_2] = 1;
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_mirror", "town_comment_vo" );
        }
    }
}

elvira_is_up()
{
    if ( isdefined( level.elvira_ai ) )
        return 0;

    return 1;
}

mirror_placement_init_func( var_0, var_1 )
{
    level.mirrors_placed = [];
    level thread listen_for_mirror_damage();
}

mirror_placement_hint_func( var_0, var_1 )
{
    return "";
}

mirror_placement_activation_func( var_0, var_1 )
{
    if ( level.mirrors_placed.size > 2 )
        return;

    var_2 = var_0.name;

    if ( !isdefined( level.mirrors_picked_up[var_2] ) )
        return;

    if ( isdefined( level.mirrors_placed[var_2] ) )
        return;

    var_3 = scripts\engine\utility::_id_817E( var_0._id_0334, "targetname" );
    var_4 = spawn( "script_model", var_3.origin );
    var_4.angles = var_3.angles;
    var_4 setmodel( var_3.script_noteworthy );
    level.mirrors_placed[var_2] = 1;
}

get_model_for_mirror( var_0 )
{
    var_1 = "";

    switch ( var_0.name )
    {
        case "car_mirror":
            var_1 = "veh_civ_lnd_39_coupe_mirror_lft_frt_dmg";
            break;
        case "bathroom_mirror":
            var_1 = "cp_town_broken_mirror_shard";
            break;
        case "elvira_mirror":
            var_1 = "cp_town_elvira_mirror";
            break;
        default:
            break;
    }

    return var_1;
}

listen_for_mirror_damage()
{
    var_0 = getent( "mirror_car", "targetname" );
    var_0 _meth_8187( "tag_mirror_right" );
    var_1 = getent( "car_mirror", "targetname" );
    var_1 thread hide_on_damage();
    var_2 = getent( "bathroom_mirror", "targetname" );
    var_2 thread break_mirror_in_bathroom();
    var_3 = getent( "frozen_meat", "targetname" );
    var_3 thread freeze_meat_in_locker();
}

hide_on_damage()
{
    level.car_mirror_hit = 0;
    self setcandamage( 1 );
    var_0 = getent( "car_mirror_ground", "targetname" );
    var_0 hide();

    for (;;)
    {
        self waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

        if ( isdefined( var_2 ) && isplayer( var_2 ) && var_5 == "MOD_MELEE" && var_2._id_4BF5 == "iw7_knife_zm_crowbar" )
        {
            self hide();
            level.car_mirror_hit = 1;
            var_0 = getent( "car_mirror_ground", "targetname" );
            var_0 show();
            break;
        }
    }

    wait 0.1;
    self delete();
}

break_mirror_in_bathroom()
{
    level.bathroom_mirror_hit = 0;
    self setcandamage( 1 );
    var_0 = getent( "bathroom_mirror_broken", "targetname" );
    var_0 hide();
    var_1 = getent( "bathroom_mirror_piece", "targetname" );
    var_1 hide();

    for (;;)
    {
        self waittill( "damage", var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 );

        if ( isdefined( var_3 ) && isplayer( var_3 ) && var_6 == "MOD_MELEE" && var_3._id_4BF5 == "iw7_knife_zm_crowbar" )
        {
            playfx( level._effect["mirror_break"], ( -1060.77, 3661.85, 463.01 ), ( 0, 0, -30 ) );
            playloopsound( ( -1060, 3661, 463 ), "mpq_mirror_shatter" );
            self hide();
            level.bathroom_mirror_hit = 1;
            var_0 = getent( "bathroom_mirror_broken", "targetname" );
            var_0 show();
            var_12 = getent( "bathroom_mirror_piece", "targetname" );
            var_12 show();
            break;
        }
    }
}

freeze_meat_in_locker()
{
    level waittill( "start_freeze_trap" );
    self setcandamage( 1 );
    playfx( level._effect["meat_freeze"], ( 6263.18, -512, 418.71 ), ( 0, 0, -30 ) );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

        if ( isdefined( var_1 ) && isplayer( var_1 ) && var_4 == "MOD_MELEE" && var_1._id_4BF5 == "iw7_knife_zm_crowbar" )
        {
            playfx( level._effect["zombie_freeze_shatter"], ( 6263.18, -512, 418.71 ) );
            self hide();
            break;
        }
    }

    scripts\engine\utility::_id_6E3E( "frozen_meat_gone" );
}

punch_card_init_func()
{

}

punch_card_hint_func( var_0, var_1 )
{
    return "";
}

punch_card_activation_func( var_0, var_1 )
{
    var_2 = getent( "mpq_punch_card", "targetname" );
    var_2 hide();
    var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_punchcard_pc", "town_comment_vo" );
    set_quest_omnvar_by_targetname( var_2 );
    level.punch_card_acquired = 1;
}

garage_door_init_func()
{
    wait 5;
    var_0 = getent( "garage_door", "targetname" );
    var_0 _meth_8212( -96, 3, 0.5, 0.1 );
}

garage_door_hint_func( var_0, var_1 )
{
    return "";
}

garage_door_activation_func( var_0, var_1 )
{
    if ( !isdefined( level.garage_key_found ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( level.garage_door_open ) )
        return;

    var_2 = getent( "garage_door", "targetname" );
    var_2 _meth_8212( 96, 3, 0.5, 0.1 );
    playloopsound( ( 4767, 1233, 431 ), "town_roll_up_garage_door" );
    wait 1;
    var_3 = getent( "garage_door_clip", "targetname" );
    var_3 notsolid();
    level.garage_door_open = 1;
    var_1 thread _id_0A6A::_id_12885( "key_phase_1_success_garage", "town_comment_vo" );
    var_4 = _id_0D61::create_spawner( "gas_station_street", ( 4795.6, 1395.2, 344 ), ( 0, 163, 0 ), "ground_spawn_no_boards", "spawn_ground", "dirt" );
    var_4 _id_0D61::_id_B287();
}

ray_gun_init_func()
{
    level.ray_gun_interaction_structs = [];
    var_0 = scripts\engine\utility::_id_8180( "ray_gun_start", "script_noteworthy" );

    foreach ( var_2 in var_0 )
    {
        var_3 = scripts\engine\utility::_id_8180( var_2._id_0334, "targetname" );

        foreach ( var_5 in var_3 )
        {
            switch ( var_5.script_noteworthy )
            {
                case "bomb_counter":
                    var_2.bomb_counter = var_5;
                    var_5.origin = var_5.origin + ( -0.1, -0.1, -23.9 );

                    if ( !isdefined( var_5.angles ) )
                        var_2.bomb_counter.angles = ( 0, 0, 0 );

                    break;
                case "bomb_status":
                    var_2.bomb_status = var_5;

                    if ( !isdefined( var_5.angles ) )
                        var_2.bomb_status.angles = ( 0, 0, 0 );

                    break;
            }
        }
    }
}

ray_gun_hint_func( var_0, var_1 )
{
    return "";
}

ray_gun_activation_func( var_0, var_1 )
{
    if ( !isdefined( var_0.angles ) )
        var_0.angles = ( 0, 0, 0 );

    if ( !isdefined( level.punch_card_added ) )
    {
        if ( isdefined( level.punch_card_acquired ) )
        {
            var_2 = getent( "mpq_punch_card", "targetname" );
            var_2 show();
            var_3 = scripts\engine\utility::_id_817E( "punch_card_slot", "targetname" );
            var_2.origin = var_3.origin;
            var_2.angles = var_3.angles;
            level.punch_card_added = 1;
            var_1 thread _id_0A6A::_id_12885( "key_phase_1_collect_punchcard_generic", "town_comment_vo" );
        }
    }
    else
    {
        if ( level.mpq_zom_parts_picked_up.size < level.mpq_zom_parts.size )
            return;

        if ( !isdefined( level.terminal_unlocked ) )
        {
            ray_gun_terminal( var_0, var_1 );

            if ( !isdefined( level.terminal_unlocked ) )
                level thread ray_fail_vo( var_1 );
        }
        else if ( !isdefined( level.body_made ) )
        {
            var_4 = scripts\engine\utility::_id_817E( "mirror_laser_start", "targetname" );
            playloopsound( var_4.origin, "cp_town_life_death_ray" );
            wait 1;
            wait 1;
            wait 1;
            bounce_laser( "tag_origin_life_ray_fx", "life_ray_beam", "life_ray_burst" );
            var_5 = level.mirrors_placed.size > 2;
            var_6 = level.zom_parts_placed.size > 5;

            if ( var_5 && var_6 )
            {
                foreach ( var_8 in level.mpq_zom_parts )
                {
                    var_8 hide();

                    if ( isdefined( var_8._id_757B ) )
                        var_8._id_757B delete();

                    if ( isdefined( var_8.fx_ent_2 ) )
                        var_8.fx_ent_2 delete();
                }

                level.knife_throw_target_body show();
                level _id_0A77::set_completed_quest_mark( 5 );
                level.body_made = 1;
                var_10 = scripts\engine\utility::_id_DC6B( level.players );

                if ( isdefined( var_10._id_134FD ) )
                {
                    switch ( var_10._id_134FD )
                    {
                        case "p1_":
                            level thread _id_0A6A::_id_12885( "sally_life_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        case "p2_":
                            level thread _id_0A6A::_id_12885( "pdex_life_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        case "p3_":
                            level thread _id_0A6A::_id_12885( "andre_life_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        case "p4_":
                            level thread _id_0A6A::_id_12885( "aj_life_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        default:
                            break;
                    }

                    return;
                }

                return;
            }
        }
        else if ( !isdefined( level.polarity_reversed ) )
        {
            ray_gun_terminal( var_0, var_1 );

            if ( !isdefined( level.polarity_reversed ) )
                level thread ray_fail_vo( var_1 );
        }
        else if ( !isdefined( level.key_spawned ) )
        {
            var_11 = 1;

            if ( var_11 )
            {
                level.key_spawned = 1;
                var_4 = scripts\engine\utility::_id_817E( "mirror_laser_start", "targetname" );
                playloopsound( var_4.origin, "cp_town_life_death_ray" );
                wait 1;
                wait 1;
                wait 1;
                bounce_laser( "tag_origin_death_ray_fx", "death_ray_beam", "death_ray_vaporize" );
                level thread ray_fail_vo( var_1 );
                level.knife_throw_target_body hide();
                spawn_garage_key( level.knife_throw_target_body.origin );
                var_10 = scripts\engine\utility::_id_DC6B( level.players );

                if ( isdefined( var_10._id_134FD ) )
                {
                    switch ( var_10._id_134FD )
                    {
                        case "p1_":
                            level thread _id_0A6A::_id_12885( "sally_death_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        case "p2_":
                            level thread _id_0A6A::_id_12885( "pdex_death_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        case "p3_":
                            level thread _id_0A6A::_id_12885( "andre_death_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        case "p4_":
                            level thread _id_0A6A::_id_12885( "aj_death_ray_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                            break;
                        default:
                            break;
                    }
                }
            }
        }
        else
        {

        }
    }
}

ray_fail_vo( var_0 )
{
    var_0 thread _id_0A6A::_id_12885( "key_phase_1_fail_liferay", "town_comment_vo" );
}

bounce_laser( var_0, var_1, var_2 )
{
    var_3 = scripts\engine\utility::_id_817E( "mirror_laser_start", "targetname" );
    var_4 = spawn( "script_model", var_3.origin );
    var_4.angles = var_3.angles;
    var_4 setmodel( var_0 );
    wait 1;
    var_5 = scripts\engine\utility::_id_817E( "mirror_spot_1", "targetname" );

    if ( !scripts\engine\utility::_id_9CEE( level.mirrors_placed["bathroom_mirror"] ) )
    {
        var_5 = scripts\engine\utility::_id_817E( "mirror_spot_1", "targetname" );

        if ( !isdefined( var_3.angles ) )
            var_3.angles = ( 0, 0, 0 );

        playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
        wait 0.1;
        var_4 delete();
        return;
    }

    if ( !isdefined( var_3.angles ) )
        var_3.angles = ( 0, 0, 0 );

    playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
    wait 0.1;
    var_3 = var_5;
    var_5 = scripts\engine\utility::_id_817E( "mirror_spot_2", "targetname" );

    if ( !scripts\engine\utility::_id_9CEE( level.mirrors_placed["elvira_mirror"] ) )
    {
        var_5 = scripts\engine\utility::_id_817E( "mirror_spot_2", "targetname" );

        if ( !isdefined( var_3.angles ) )
            var_3.angles = ( 0, 0, 0 );

        playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
        wait 0.1;
        var_4 delete();
        return;
    }

    if ( !isdefined( var_3.angles ) )
        var_3.angles = ( 0, 0, 0 );

    playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
    wait 0.1;
    var_3 = var_5;
    var_5 = scripts\engine\utility::_id_817E( "mirror_spot_3", "targetname" );

    if ( !scripts\engine\utility::_id_9CEE( level.mirrors_placed["car_mirror"] ) )
    {
        var_5 = scripts\engine\utility::_id_817E( "mirror_spot_3", "targetname" );

        if ( !isdefined( var_3.angles ) )
            var_3.angles = ( 0, 0, 0 );

        playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
        wait 0.1;
        var_4 delete();
        return;
    }

    if ( !isdefined( var_3.angles ) )
        var_3.angles = ( 0, 0, 0 );

    playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
    wait 0.1;
    var_3 = var_5;
    var_5 = level.life_ray_end;

    if ( !isdefined( var_3.angles ) )
        var_3.angles = ( 0, 0, 0 );

    playfxbetweenpoints( level._effect[var_1], var_3.origin, var_3.angles, var_5.origin );
    wait 0.1;
    playfx( level._effect[var_2], var_5.origin );
    var_4 delete();
}

stop_and_fire()
{
    var_0 = 1440000;
    var_1 = level._id_1084F;
    var_2 = undefined;

    foreach ( var_4 in var_1 )
    {
        if ( distance2dsquared( var_4.origin, self.origin ) < var_0 )
        {
            var_2 = var_4;
            break;
        }
    }

    if ( !isdefined( var_2 ) )
        return;

    wait 5;
    playfxontag( level._effect["death_ray_cannon_muzzle_flash"], self, "tag_origin" );
    var_6 = self gettagorigin( "tag_origin" );
    var_7 = self gettagangles( "tag_origin" );
    playfxbetweenpoints( level._effect["death_ray_cannon_beam"], var_6, var_7, var_2.origin );
    playfx( level._effect["death_ray_cannon_rock_impact"], var_2.origin );
    level thread make_glowing_zombies( var_2.origin );
    wait 5;
}

make_glowing_zombies( var_0 )
{
    var_1 = 160000;
    var_2 = sortbydistance( level._id_1084F, var_0 );

    for ( var_3 = 0; var_3 < var_2.size; var_3++ )
    {
        if ( distance2dsquared( var_2[var_3].origin, var_0 ) > var_1 )
            break;

        var_2[var_3] set_glow_attributes();
    }
}

listen_for_zombie_spawn()
{
    for (;;)
    {
        level waittill( "agent_spawned", var_0 );

        if ( isdefined( var_0 ) && isdefined( var_0.agent_type ) && var_0.agent_type == "generic_zombie" )
        {
            if ( scripts\engine\utility::_id_9CEE( var_0.is_soldier ) )
                var_0 set_glow_attributes();
        }
    }
}

set_glow_attributes()
{
    self.glowing = 1;
    self._id_74B5 = 1;
    self._id_C026 = 1;
    self._id_828A = "ufo_glow_death";
    self setscriptablepartstate( "ufo_glow", "active", 1 );
    self._id_01F5 = "sprint";
}

listen_for_death_by_cleaver()
{
    level.death_by_cleaver = 0;

    while ( !level.death_by_cleaver )
        scripts\engine\utility::waitframe();

    var_0 = scripts\engine\utility::_id_8180( "mpq_zom_body_part", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_7E2E( level.mpq_zom_body_parts["right_leg"].origin, var_0 );
    level.mpq_zom_body_parts["right_leg"] notsolid();
    level.mpq_zom_body_parts["right_leg"].origin = level.death_by_cleaver_org + ( 0, 0, -5 );
    var_1.origin = level.death_by_cleaver_org + ( -20, 10, 10 );
    level.mpq_zom_body_parts["right_leg"]._id_757B = spawn( "script_model", level.death_by_cleaver_org + ( -20, 10, 0 ) );
    level.mpq_zom_body_parts["right_leg"]._id_757B setmodel( "tag_origin_limb_glow_fx" );
}

spawn_film_reel_hints()
{
    var_0 = spawn( "script_model", ( 4070, -4190, 16 ) );
    wait 0.1;
    var_0 setmodel( "cp_town_film_reel_case" );
}

listen_for_toilet_head()
{
    level endon( "game_ended" );

    while ( !isdefined( level.players ) )
        wait 0.1;

    var_0 = scripts\engine\utility::_id_817E( "toilet_head", "targetname" );
    var_1 = var_0.origin;
    var_2 = var_0.angles;
    level.toilet_head = spawn( "script_model", var_1 );
    level.toilet_head setmodel( "zmb_male_head_01" );
    level.toilet_head.angles = var_2;
    var_3 = scripts\engine\utility::_id_817E( "toilet_head_spot", "targetname" );
    var_4 = 0;
    var_5 = 1600;

    while ( !var_4 )
    {
        foreach ( var_7 in level.players )
        {
            if ( distance2dsquared( var_3.origin, var_7.origin ) < var_5 )
            {
                var_8 = 0;
                var_9 = var_7 getstance();

                if ( isdefined( var_7.chemical_base_picked ) && var_7.chemical_base_picked == "animalfat" && var_9 == "prone" )
                {
                    var_8 = 1;
                    level.toilet_head playsound( "zmb_vo_base_male_pain" );
                    var_7 setclientomnvar( "zm_chem_element_index", 0 );
                    var_7.chemical_base_picked = undefined;
                }

                lift_head( var_8, var_7 );
                var_4 = 1;
                break;
            }
        }

        wait 0.1;
    }

    level.toilet_head delete();
}

lift_head( var_0, var_1 )
{
    level.toilet_head _meth_8212( 5, 2, 0.1, 0.1 );
    wait 5;

    if ( var_0 == 1 )
        var_1 _id_0A5E::_id_D9AD( "mt_dlc3_troll2" );

    level.toilet_head _meth_8212( -8, 2, 0.1, 0.1 );
    wait 3;
}

ray_gun_terminal( var_0, var_1 )
{
    enter_detonate_bomb_sequence( var_0, var_1 );
    enter_bomb_code_internal( var_0, var_1 );
}

assign_nuclear_code( var_0, var_1, var_2 )
{
    var_0.ray_gun_code = [];

    if ( var_2 )
    {
        for ( var_3 = 5; var_3 > 0; var_3-- )
            var_0.ray_gun_code[5 - var_3] = var_1[var_3 - 1];
    }
    else
    {
        for ( var_3 = 0; var_3 < 5; var_3++ )
            var_0.ray_gun_code[var_3] = var_1[var_3];
    }
}

shuffle_film_reels()
{
    var_0 = [ 3, 4, 5, 6, 8 ];
    var_1 = scripts\engine\utility::_id_22A7( var_0 );

    for ( var_2 = 1; var_2 < 6; var_2++ )
    {
        var_3 = getent( "film_reel_" + var_2, "targetname" );
        var_3 setmodel( "cp_town_film_reel_case_" + var_1[var_2 - 1] );
        wait 0.1;
    }

    level.liferaycode = var_1;
}

enter_detonate_bomb_sequence( var_0, var_1 )
{
    turn_off_other_hud( var_1 );
    turn_on_bomb_status_light( var_0 );
    var_1 _meth_800F( 0 );
    var_1 _meth_80AA();
    var_1 scripts\engine\utility::_id_1C76( 0 );
}

enter_bomb_code_internal( var_0, var_1 )
{
    _id_0A59::_id_E019( var_0 );
    var_1.bomb_interaction_struct = var_0;

    if ( !isdefined( level.terminal_unlocked ) )
        assign_nuclear_code( var_1, level.liferaycode, 0 );
    else
        assign_nuclear_code( var_1, level.liferaycode, 1 );

    reset_nuclear_code_progress( var_1 );
    transition_into_enter_bomb_code( var_0, var_1 );
    turn_on_enter_bomb_code_hud( var_1, var_0 );
    var_0 thread run_bomb_counters( var_1, var_0 );
    var_0 thread bomb_counter_selected_monitor( var_1, var_0 );
    var_0 thread player_exit_monitor( var_1, var_0 );
    var_0 thread player_damage_exit_monitor( var_1, var_0 );
}

turn_on_bomb_status_light( var_0 )
{
    var_1 = spawn( "script_model", ( 4102.2, -4242.1, 51 ) );
    var_1 setmodel( "crab_boss_origin" );
    var_1.angles = var_0.bomb_status.angles;
    var_1 setscriptablepartstate( "bomb_status", "red" );
    var_0.bomb_status_light = var_1;
}

reset_nuclear_code_progress( var_0 )
{
    var_0 setclientomnvar( "zm_ui_dialpad_1", -1 );
    var_0 setclientomnvar( "zm_ui_dialpad_5", 0 );
    var_0.ray_gun_code_progress_index = 0;
    var_0.completed_ray_gun_code = "";
    var_0.times_input_wrong_digits = 0;
}

transition_into_enter_bomb_code( var_0, var_1 )
{
    var_2 = spawn( "script_model", var_0.origin );
    var_2 setmodel( "tag_origin" );
    var_2.angles = var_0.angles + ( 34, 0, 0 );
    var_2.origin = var_0.origin + _id_0A77::_id_13192( anglestoforward( var_0.angles ), 3 );
    var_0._id_1E6E = var_2;
}

run_bomb_counters( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_1 endon( "stop_bomb_counter" );

    for (;;)
    {
        for ( var_2 = 0; var_2 < 10; var_2++ )
        {
            var_0 setclientomnvar( "zm_ui_dialpad_0", var_2 + 1 );
            wait 0.1;
        }
    }
}

bomb_counter_selected_monitor( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_1 endon( "stop_bomb_counter" );

    for (;;)
    {
        var_0 waittill( "luinotifyserver", var_2, var_3 );

        if ( var_2 != "bomb_counter_digit" )
            continue;

        if ( correct_digit_entered( var_0, var_3 ) )
        {
            advance_nuclear_code_progress( var_0, var_3 );

            if ( nuclear_code_completed( var_0 ) )
                player_complete_nuclear_code( var_1, var_0 );

            continue;
        }

        input_wrong_digit( var_1, var_0 );
    }
}

player_damage_exit_monitor( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_1 endon( "stop_bomb_counter" );

    for (;;)
    {
        var_0 waittill( "damage" );
        var_0 notify( "luinotifyserver", "exit_bomb_counter" );
    }
}

player_exit_monitor( var_0, var_1 )
{
    var_0 endon( "disconnect" );
    var_1 endon( "stop_bomb_counter" );

    for (;;)
    {
        var_0 waittill( "luinotifyserver", var_2 );

        if ( var_2 != "exit_bomb_counter" )
            continue;

        var_1 thread delay_enable_interaction( var_1 );
        var_1 thread exit_enter_bomb_code( var_1, var_0 );
    }
}

turn_on_enter_bomb_code_hud( var_0, var_1 )
{
    var_2 = spawn( "script_model", var_1.bomb_counter.origin );
    var_2 setmodel( "tag_origin" );
    var_2.origin = var_2.origin + ( -0.2, 0.25, 0 );
    var_2.angles = ( 0, 335, 0 );
    var_2.angles = var_1.bomb_counter.angles;
    var_2.angles = ( 0, 340.5, 0 );
    var_1.bomb_counter_ent = var_2;
    var_0 setclientomnvar( "zm_ui_dialpad_ent", var_2 );
    var_0 setclientomnvar( "zm_ui_dialpad_2", 2 );
}

turn_off_enter_bomb_code_hud( var_0 )
{
    var_0 setclientomnvar( "zm_ui_dialpad_2", 0 );
}

reset_bomb_interaction_struct()
{
    level.num_of_ray_gun_code_entered = 0;

    foreach ( var_1 in level.ray_gun_interaction_structs )
        _id_0A59::_id_175C( var_1 );
}

correct_digit_entered( var_0, var_1 )
{
    return var_1 == var_0.ray_gun_code[var_0.ray_gun_code_progress_index];
}

input_wrong_digit( var_0, var_1 )
{
    var_1.times_input_wrong_digits++;
    var_1 setclientomnvar( "zm_ui_dialpad_5", var_1.times_input_wrong_digits );

    if ( var_1.times_input_wrong_digits == 3 )
    {
        wait 1.0;
        var_0 thread delay_enable_interaction( var_0 );
        var_0 thread exit_enter_bomb_code( var_0, var_1 );
    }
}

advance_nuclear_code_progress( var_0, var_1 )
{
    var_0.ray_gun_code_progress_index++;
    var_0.completed_ray_gun_code = var_0.completed_ray_gun_code + var_1;
    var_0 setclientomnvar( "zm_ui_dialpad_1", int( var_0.completed_ray_gun_code ) );
}

nuclear_code_completed( var_0 )
{
    return var_0.ray_gun_code_progress_index == 5;
}

player_complete_nuclear_code( var_0, var_1 )
{
    var_1 setclientomnvar( "zm_ui_dialpad_5", 4 );
    wait 2.0;
    level thread nuclear_bomb_armed_sequence( var_1 );
    var_0.bomb_status_light setscriptablepartstate( "bomb_status", "green" );
    exit_enter_bomb_code( var_0, var_1 );
}

delay_enable_interaction( var_0 )
{
    wait 0.5;
    _id_0A59::_id_175C( var_0 );
}

exit_enter_bomb_code( var_0, var_1 )
{
    end_detonate_bomb( var_1 );
    var_0._id_1E6E delete();
    var_1.bomb_interaction_struct = undefined;
    thread delay_enable_interaction( var_0 );
    var_0 notify( "stop_bomb_counter" );
}

nuclear_bomb_armed_sequence( var_0 )
{
    if ( !scripts\engine\utility::_id_9CEE( level.terminal_unlocked ) )
        level.terminal_unlocked = 1;
    else
    {
        level.polarity_reversed = 1;
        var_1 = getentarray( "death_ray_sign", "targetname" );

        foreach ( var_3 in var_1 )
            var_3 setmodel( "cp_town_camp_danger_deathraysign" );
    }
}

end_detonate_bomb( var_0 )
{
    exit_detonate_bomb_sequence( var_0 );
}

clean_up_bomb_interaction_struct( var_0 )
{
    if ( isdefined( var_0.bomb_counter_ent ) )
        var_0.bomb_counter_ent delete();

    if ( isdefined( var_0.bomb_status_light ) )
        var_0.bomb_status_light delete();
}

exit_detonate_bomb_sequence( var_0 )
{
    turn_off_enter_bomb_code_hud( var_0 );
    turn_on_other_hud( var_0 );
    var_0 enableweapons();
    var_0 scripts\engine\utility::_id_1C76( 1 );
    var_0 _meth_800F( 1 );
}

turn_off_other_hud( var_0 )
{
    var_0 setclientomnvar( "zm_ui_dialpad_4", 1 );
}

turn_on_other_hud( var_0 )
{
    var_0 setclientomnvar( "zm_ui_dialpad_4", 0 );
}

listen_for_turnstile_damage()
{
    var_0 = getent( "turnstile", "targetname" );

    if ( isdefined( var_0 ) )
    {
        var_0 setcandamage( 1 );

        for (;;)
        {
            var_0 waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

            if ( isdefined( var_2 ) && isplayer( var_2 ) )
            {
                playfx( level._effect["turnstile_teleport"], var_0.origin );
                var_0 hide();
                var_2 _id_0A5E::_id_D9AD( "mt_dlc3_troll" );
                break;
            }

            wait 0.1;
        }
    }
}

listen_for_photo_change()
{
    level waittill( "crab_boss_beaten" );
    var_0 = getent( "hero_photo", "targetname" );
    var_0 setmodel( "cp_town_space_hero_photos_01" );
}

phase3_watch_gauge_trigs()
{
    level endon( "deathray_step1" );
    self.gauge = getent( self._id_0334, "targetname" );
    self.gauge thread phase3_gauge_movement_logic();

    if ( !isdefined( level.gauges ) )
        level.gauges = [];

    level.gauges = scripts\engine\utility::_id_2279( level.gauges, self.gauge );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

        if ( isdefined( var_1 ) && isplayer( var_1 ) && var_4 == "MOD_MELEE" && var_1._id_4BF5 == "iw7_knife_zm_crowbar" )
        {
            self.gauge playsound( "mpq_gauge_hit" );

            if ( scripts\engine\utility::_id_9CEE( self.gauge.stuck ) )
            {
                self.gauge.current_value = undefined;
                self.gauge.current_reading = undefined;
                self.gauge.stuck = undefined;
                self.gauge thread phase3_gauge_movement_logic();
                continue;
            }
            else
            {
                var_10 = self.gauge.angles;
                self.gauge notify( "damaged" );
                wait 0.1;
                self.gauge.angles = var_10;
                self.gauge.current_value = var_10;
                self.gauge.current_reading = phase3_get_gauge_reading( self.gauge );
                self.gauge.stuck = 1;
                var_11 = phase3_check_for_combo_complete();

                if ( var_11 )
                {
                    scripts\engine\utility::_id_6E3E( "launchcode_step1" );
                    return;
                }
            }
        }
    }
}

phase3_open_safe()
{
    scripts\engine\utility::_id_69A3( 200 );
    earthquake( 0.45, 1, level.safe.origin, 256 );
    playloopsound( level.safe.origin, "mpq_safe_open" );
    level.safe setmodel( "cp_town_safe_open" );
    var_0 = scripts\engine\utility::_id_817E( "take_launchcodes", "script_noteworthy" );
    _id_0A59::_id_175C( var_0 );
    var_1 = scripts\engine\utility::_id_DC6B( level.players );

    if ( isdefined( var_1._id_134FD ) )
    {
        switch ( var_1._id_134FD )
        {
            case "p1_":
                level thread _id_0A6A::_id_12885( "sally_safe_unlock_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                break;
            case "p2_":
                level thread _id_0A6A::_id_12885( "pdex_safe_unlock_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                break;
            case "p3_":
                level thread _id_0A6A::_id_12885( "andre_safe_unlock_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                break;
            case "p4_":
                level thread _id_0A6A::_id_12885( "aj_safe_unlock_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                break;
            default:
                break;
        }
    }
}

phase3_take_launch_codes( var_0, var_1 )
{
    _id_0A59::_id_E019( var_0 );
    var_2 = getent( var_0._id_0334, "targetname" );
    playfx( level._effect["generic_pickup"], var_2.origin );
    var_1 playlocalsound( "zmb_item_pickup" );
    var_2 delete();
    scripts\engine\utility::_id_6E3E( "launchcode_step2" );
}

phase3_take_bomb_part( var_0, var_1 )
{
    var_2 = getent( var_0._id_0334, "targetname" );

    if ( !isdefined( var_2 ) )
        return;

    switch ( var_2._id_01F1 )
    {
        case "cp_town_teleporter_device_projector":
            if ( var_1 getstance() != "prone" )
                return;

            _id_0A77::_id_F55F( 16 );
            break;
        case "cp_town_teleporter_device_pipes":
            _id_0A77::_id_F55F( 17 );
            break;
        default:
            _id_0A77::_id_F55F( 18 );
            break;
    }

    playfx( level._effect["generic_pickup"], var_2.origin );
    var_1 playlocalsound( "zmb_item_pickup" );
    level.teleporter_pieces_found++;
    var_2 delete();
}

phase3_get_gauge_reading( var_0 )
{
    var_1 = 0;

    if ( isdefined( var_0.current_value ) )
    {
        var_2 = int( var_0.current_value[2] );

        if ( is_in_range( var_2, 70, 75 ) )
        {
            var_1 = 0;
            var_0._current_value = ( 0, 0, 75 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], 75 );
        }
        else if ( is_in_range( var_2, 59, 69 ) )
        {
            var_1 = 1;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], 65 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], 65 );
        }
        else if ( is_in_range( var_2, 44, 58 ) )
        {
            var_1 = 2;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], 50 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], 50 );
        }
        else if ( is_in_range( var_2, 28, 43 ) )
        {
            var_1 = 3;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], 33 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], 33 );
        }
        else if ( is_in_range( var_2, 10, 27 ) )
        {
            var_1 = 4;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], 15 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], 15 );
        }
        else if ( is_in_range( var_2, -7, 9 ) )
        {
            var_1 = 5;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], 0 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], 0 );
        }
        else if ( is_in_range( var_2, -20, -8 ) )
        {
            var_1 = 6;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], -15 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], -15 );
        }
        else if ( is_in_range( var_2, -35, -21 ) )
        {
            var_1 = 7;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], -32 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], -32 );
        }
        else if ( is_in_range( var_2, -50, -36 ) )
        {
            var_1 = 8;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], -45 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], -45 );
        }
        else if ( is_in_range( var_2, -69, -51 ) )
        {
            var_1 = 9;
            var_0._current_value = ( var_0.angles[0], var_0.angles[1], -62 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], -62 );
        }
        else
        {
            var_1 = 10;
            var_0._current_value = ( 0, 0, -75 );
            var_0.angles = ( var_0.angles[0], var_0.angles[1], -75 );
        }
    }
    else
        var_1 = 0;

    if ( var_1 > 0 )
        var_3 = var_1;
    else
        var_3 = 0;

    return var_3;
}

is_in_range( var_0, var_1, var_2 )
{
    if ( var_0 >= var_1 && var_0 <= var_2 )
        return 1;

    if ( var_0 + 360 >= var_1 && var_0 + 360 <= var_2 )
        return 1;

    if ( var_0 - 360 >= var_1 && var_0 - 360 <= var_2 )
        return 1;

    return 0;
}

phase3_gauge_movement_logic()
{
    self endon( "damaged" );

    if ( isdefined( self._id_C378 ) )
        self.angles = self._id_C378;
    else
        self._id_C378 = self.angles;

    self rotateto( ( self.angles[0], self.angles[1], -75 ), randomfloatrange( 0.15, 0.4 ) );
    self waittill( "rotatedone" );
    wait 0.1;

    for (;;)
    {
        wait( randomfloatrange( 0.25, 1.6 ) );
        self rotateto( ( self.angles[0], self.angles[1], 75 ), randomfloatrange( 3, 4 ) );
        self waittill( "rotatedone" );
        wait( randomfloatrange( 0.25, 1.6 ) );
        self rotateto( ( self.angles[0], self.angles[1], -75 ), randomfloatrange( 3, 4 ) );
        self waittill( "rotatedone" );
    }
}

phase3_create_safe_combo()
{
    wait 20;
    level.combo_numbers = [];
    level.combo_numbers["1"] = "geneva_building_number_signs_07";
    level.combo_numbers["2"] = "geneva_building_number_signs_01";
    level.combo_numbers["4"] = "geneva_building_number_signs_4_fix";
    level.combo_numbers["6"] = "geneva_building_number_signs_13";
    level.combo_numbers["7"] = "geneva_building_number_signs_04";
    level.combo_numbers["8"] = "geneva_building_number_signs_10";
    level.combo_numbers["9"] = "geneva_building_number_signs_19";
    var_0 = [ "1", "2", "4", "6", "7", "8", "9" ];
    var_1 = [];
    var_2 = "";
    var_3 = [];
    var_4 = getentarray( "pressure_numbers", "targetname" );

    for ( var_5 = 0; var_5 < 4; var_5++ )
    {
        var_6 = scripts\engine\utility::_id_DC6B( var_0 );
        var_7 = level.combo_numbers[var_6];

        if ( var_5 < 3 )
            var_2 = var_2 + "" + var_6 + ",";
        else
            var_2 = var_2 + "" + var_6 + "";

        var_4[var_5] setmodel( var_7 );
    }

    level.combo_numbers = var_2;
}

phase3_check_for_combo_complete()
{
    var_0 = strtok( level.combo_numbers, "," );

    foreach ( var_2 in level.gauges )
    {
        if ( !isdefined( var_2.current_reading ) )
            return 0;

        if ( scripts\engine\utility::array_contains( var_0, "" + var_2.current_reading ) )
        {
            var_3 = 0;
            var_4 = [];

            foreach ( var_6 in var_0 )
            {
                if ( var_6 == "" + var_2.current_reading && !var_3 )
                {
                    var_3 = 1;
                    continue;
                }

                var_4[var_4.size] = var_6;
            }

            var_0 = var_4;
            continue;
        }

        return 0;
    }

    return 1;
}

phase3_place_bomb_parts_hint( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "teleporter_charged" ) )
        return &"CP_TOWN_INTERACTIONS_TELEPORT_READY";

    if ( level.teleporter_pieces_placed < level.teleporter_pieces_found )
        return &"CP_TOWN_INTERACTIONS_PLACE_BOMB_PIECE";

    if ( scripts\engine\utility::_id_6E25( "chemistry_step3" ) && !scripts\engine\utility::_id_6E25( "chemistry_step4" ) )
        return &"CP_TOWN_INTERACTIONS_ADD_CHEMS";

    if ( scripts\engine\utility::_id_6E25( "chemistry_step4" ) && scripts\engine\utility::_id_6E25( "launchcode_step2" ) && scripts\engine\utility::_id_6E25( "launchcode_step3" ) && !scripts\engine\utility::_id_6E25( "launchcode_step4" ) )
        return &"CP_TOWN_INTERACTIONS_ACTIVATE_TELEPORT";

    return "";
}

phase3_place_bomb_parts( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "chemistry_step3" ) && !scripts\engine\utility::_id_6E25( "chemistry_step4" ) )
    {
        if ( isdefined( var_1.chemical_base_picked ) && var_1.chemical_base_picked == level.bomb_compound.name )
        {
            var_1 thread _id_0A6A::_id_12885( "key_phase_3_success_bomb_const", "town_comment_vo" );
            scripts\engine\utility::_id_6E3E( "chemistry_step4" );
            scripts\cp\maps\cp_town\cp_town_chemistry::set_chemical_carried_by_player_after_beaker_deposit( var_1, "" );
            var_2 = getent( "hero_photo", "targetname" );
            var_2 setmodel( "cp_town_space_hero_photos_02" );
            var_1 _id_0A59::_id_DE6E();
            return;
        }
        else
        {
            var_1 _id_0A59::_id_DE6E();
            return;
        }
    }

    if ( scripts\engine\utility::_id_6E25( "teleporter_charged" ) )
    {
        foreach ( var_4 in level.players )
        {
            if ( distance2dsquared( var_4.origin, var_0.origin ) > 9216 )
                return;

            if ( !var_4 usebuttonpressed() )
                return;
        }

        var_6 = scripts\engine\utility::_id_817E( "place_bomb_parts", "script_noteworthy" );
        var_7 = getent( var_6._id_0334, "targetname" );
        var_7 stoploopsound();
        _id_0A77::_id_D52A( "cp_town_bomb_charge_stop", var_7.origin );
        level notify( "bomb_teleported" );
        var_1 thread _id_0A6A::_id_12885( "key_phase_3_success_bomb_teleport", "town_comment_vo" );
        var_1 _id_0A59::_id_E019( var_0 );
        level thread phase3_teleport_bomb();
        return;
    }

    if ( scripts\engine\utility::_id_6E25( "chemistry_step4" ) && scripts\engine\utility::_id_6E25( "launchcode_step2" ) && scripts\engine\utility::_id_6E25( "launchcode_step3" ) && !scripts\engine\utility::_id_6E25( "launchcode_step4" ) )
    {
        foreach ( var_4 in level.players )
        {
            if ( distance2dsquared( var_4.origin, var_0.origin ) > 9216 )
                return;

            if ( !var_4 usebuttonpressed() )
                return;
        }

        var_1 thread _id_0A6A::_id_12885( "boss_charge_portal_first", "town_comment_vo" );
        var_1 _id_0A59::_id_E019( var_0 );
        level thread phase3_charge_bomb_teleporter( var_0 );
        return;
    }

    if ( level.teleporter_pieces_found != level.teleporter_pieces_placed )
        var_1 playlocalsound( "zmb_coin_sounvenir_place" );

    while ( level.teleporter_pieces_placed != level.teleporter_pieces_found )
    {
        level.teleporter_pieces_placed++;
        wait 0.05;
    }

    if ( level.teleporter_pieces_placed == 3 )
    {
        scripts\engine\utility::_id_6E3E( "launchcode_step3" );
        level thread play_teleporter_vo( var_1 );
        var_1 _id_0A59::_id_DE6E();
        return;
    }
}

play_teleporter_vo( var_0 )
{
    var_0 endon( "disconnect" );
    var_0 thread _id_0A6A::_id_12885( "key_phase_3_success_teleporter_craft", "town_comment_vo" );
    wait( _id_0A6A::_id_7C76( "key_phase_3_success_teleporter_craft" ) + 10 );
    var_0 thread _id_0A6A::_id_12885( "boss_charge_portal_generic", "town_comment_vo" );
}

phase3_charge_bomb_teleporter( var_0 )
{
    level endon( "bomb_teleported" );
    level endon( "game_ended" );
    var_1 = scripts\engine\utility::_id_817E( "place_bomb_parts", "script_noteworthy" );
    var_2 = getent( var_1._id_0334, "targetname" );
    playfxontag( level._effect["vfx_bomb_portal_chargeup"], var_2, "tag_bomb" );
    var_2 playsound( "cp_town_bomb_charge_start" );
    var_2 playloopsound( "cp_town_bomb_charge_lp" );
    wait 20;
    var_2 stoploopsound( "cp_town_bomb_charge_lp" );
    var_2 playloopsound( "cp_town_bomb_charged_up_lp" );
    stopfxontag( level._effect["vfx_bomb_portal_chargeup"], var_2, "tag_bomb" );
    playfxontag( level._effect["vfx_bomb_portal_charged"], var_2, "tag_bomb" );
    _id_0A59::_id_175C( var_0 );
    scripts\engine\utility::_id_6E3E( "teleporter_charged" );
    scripts\engine\utility::_id_6E2A( "teleporter_charging" );

    if ( !scripts\engine\utility::_id_9CEE( var_0.played_charging_vo ) )
    {
        _id_0A6A::_id_12886( "boss_charge_portal_complete_first", 0 );
        var_0.played_charging_vo = 1;
    }
    else
        _id_0A6A::_id_12886( "boss_charge_portal_complete_generic", 0 );

    wait 30;
    var_2 playsound( "cp_town_bomb_charge_fail" );
    var_2 stoploopsound( "cp_town_bomb_charged_up_lp" );
    stopfxontag( level._effect["vfx_bomb_portal_charged"], var_2, "tag_bomb" );
    scripts\engine\utility::_id_6E2A( "teleporter_charged" );
    scripts\engine\utility::_id_6E2A( "teleporter_charging" );
}

phase3_teleport_bomb()
{
    var_0 = scripts\engine\utility::_id_817E( "place_bomb_parts", "script_noteworthy" );
    var_1 = getent( var_0._id_0334, "targetname" );
    playfx( level._effect["vfx_bomb_portal_out"], var_1.origin );
    var_1 delete();
    scripts\engine\utility::_id_6E3E( "launchcode_step4" );
    level notify( "crab_boss_quest_completed" );
}

phase3_launchcode_interaction()
{
    wait 5;
    var_0 = scripts\engine\utility::_id_817E( "take_launchcodes", "script_noteworthy" );
    _id_0A59::_id_E019( var_0 );
}

_id_4FF9()
{

}
