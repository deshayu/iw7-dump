// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

mpq_init()
{
    initmpqflags();
    thread initmpqsystems();
    mpqstepregistration();
    thread initmpqdebug();
    level.neilvotime = 0;
}

initmpqflags()
{
    scripts\engine\utility::_id_6E39( "neil_head_found" );
    scripts\engine\utility::_id_6E39( "neil_head_placed" );
    scripts\engine\utility::_id_6E39( "fuse_puzzle_completed" );
    scripts\engine\utility::_id_6E39( "toggle_puzzle_doors_opened" );
    scripts\engine\utility::_id_6E39( "toggle_puzzle_button_pressed" );
    scripts\engine\utility::_id_6E39( "security_doors_deactivated" );
    scripts\engine\utility::_id_6E39( "disable_evil_neil" );
    scripts\engine\utility::_id_6E39( "phantom_disk_drop" );
    scripts\engine\utility::_id_6E39( "button_entered_poster" );
    scripts\engine\utility::_id_6E39( "neils_head_placed_in_pap" );
    scripts\engine\utility::_id_6E39( "toggle_puzzle_completed_twice" );
    scripts\engine\utility::_id_6E39( "players_triggered_bossfight" );
    scripts\engine\utility::_id_6E39( "completed_toggle_puzzle_once" );
}

initmpqsystems()
{
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );
    level.neil_console = getent( "neil_console", "targetname" );
    level.neil_console.nextneilvotime = 0;
    spawnn31lhead();
    initpuzzlecombinations();
    spawnpuzzlepieces();
    initmedbaymonitors();
    initpuzzledoors();
    thread spawnenergydoor();
    thread startairventfx();
    thread initmedbaybutton();
    thread initneilconsolehead();
    deactivateinteractionsbynoteworthy( "entangler_button" );
    deactivateinteractionsbynoteworthy( "entangler_spawner" );
    deactivateinteractionsbynoteworthy( "neil_head_final_pos" );
    deactivateinteractionsbynoteworthy( "portal_gun_button" );
    var_0 = spawnstruct();
    var_0.origin = ( 5516, -5725.15, 140.268 );
    var_0.angles = ( 0, 180, 0 );
    level._id_1115C["targetname"]["dlc4_poster"][level._id_1115C["targetname"]["dlc4_poster"].size] = var_0;
}

initneilconsolehead()
{
    var_0 = scripts\engine\utility::_id_817E( "console_neil_head", "targetname" );
    var_0.entanglerangleupdate = ::updateneilheadangles;
    var_0.nextneilvotime = 0;
}

updateneilheadangles( var_0, var_1, var_2 )
{
    var_0 endon( "disconnect" );
    var_3 = gettime();

    if ( var_3 >= var_1.nextneilvotime )
    {
        if ( scripts\engine\utility::_id_4347() )
        {
            if ( playneilvofromconsoleorhead( "final_n31l_evil_quest_pap" ) )
                var_1.nextneilvotime = var_3 + 60000;
        }
        else if ( playneilvofromconsoleorhead( "final_n31l_evil_quest_pap_b" ) )
            var_1.nextneilvotime = var_3 + 60000;
    }

    var_4 = scripts\engine\utility::_id_817E( "pap_portal", "script_noteworthy" );

    if ( isdefined( var_2.pathtogoal ) )
    {
        if ( scripts\engine\utility::_id_9CEE( var_0.isfasttravelling ) )
        {
            var_2.fasttravelling = 1;
            var_5 = var_0.origin;
        }
        else
        {
            var_6 = var_4.origin;
            var_7 = undefined;
            var_8 = var_2.pathtogoal;

            if ( var_8.size > 1 )
            {
                var_6 = var_8[1];
                var_7 = 1;
            }

            var_9 = var_0 _meth_8428( var_2.origin, var_6, 1, 1 );

            if ( var_9.size > 1 )
                var_5 = var_9[1];
            else
                var_5 = var_6;

            if ( var_2.pathtogoal.size >= 1 )
            {
                if ( isdefined( var_7 ) && distance2dsquared( var_6, var_2.origin ) <= 9216 )
                    var_2.pathtogoal = _id_0A77::_id_22B0( var_2.pathtogoal, var_7, 0 );
            }

            var_10 = scripts\engine\utility::_id_7E2E( var_2.origin, level.allslidingdoors, 96 );

            if ( isdefined( var_10 ) )
            {
                if ( scripts\engine\utility::_id_9CEE( var_10._id_4284 ) )
                {
                    var_11 = anglestoforward( var_0.angles );
                    var_12 = 0;

                    if ( !var_12 && vectordot( vectornormalize( var_6 - var_0.origin ), var_11 ) > 0.75 && vectordot( vectornormalize( var_10.origin - var_0.origin ), var_11 ) > 0.75 )
                    {
                        if ( distance( var_0.origin, var_6 ) > distance( var_0.origin, var_2.origin ) )
                        {
                            if ( scripts\engine\utility::_id_9CEE( var_10._id_4284 ) )
                            {
                                var_13 = scripts\engine\utility::_id_8180( var_10.script_noteworthy, "script_noteworthy" );

                                foreach ( var_15 in var_13 )
                                {
                                    if ( var_15._id_0334 == var_15._id_0334 )
                                        var_15.nointeraction = undefined;
                                }

                                thread [[ level._id_9A43[var_10.script_noteworthy]._id_161A ]]( var_10, undefined );
                            }
                        }
                    }
                }
            }
        }

        if ( isdefined( var_5 ) )
        {
            return var_5;
            return;
        }

        return vectortoangles( var_0.origin - var_2.origin );
        return;
    }
    else
        return vectortoangles( var_0.origin - var_2.origin );
}

initmedbaybutton()
{
    var_0 = scripts\engine\utility::_id_817E( "button_entangle_target", "targetname" );

    if ( isdefined( var_0._id_01F1 ) )
    {
        var_0._id_01F1 _id_0A6B::_id_CC16( "pillage", 1, var_0._id_01F1.origin );
        var_0._id_01F1 delete();
    }

    var_1 = spawn( "script_model", var_0.origin );
    var_1.angles = var_0.angles;
    var_1 setmodel( "electrical_airlock_cycle_button_dlc4" );
    var_0._id_01F1 = var_1;
    scripts\engine\utility::_id_6E4C( "fuse_puzzle_completed" );
    thread scripts\cp\crafted_entangler::outlineitemforplayers( var_0, var_1 );
    thread scripts\cp\crafted_entangler::watchforentanglerdamage( var_0, var_1 );
    var_1.collisionfunc = ::checkbuttoncollision;
}

checkbuttoncollision( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_0 waittill( "collision" );
    var_3 = var_0.origin;
    var_4 = scripts\engine\utility::_id_8180( "dlc4_poster", "targetname" );
    var_0 notify( "end_entangler_funcs" );
    var_5 = scripts\engine\utility::_id_7E2E( var_3, var_4 );

    if ( distance( var_3, var_5.origin ) <= 36 )
    {
        if ( isdefined( var_2 ) )
            playfx( level._effect["energy_door_impact"], var_5.origin, vectortoangles( var_5.origin - var_2.origin ) * 6, anglestoup( var_5.angles ) );
        else
            playfx( level._effect["energy_door_impact"], var_5.origin, anglestoforward( var_5.angles ) * 6, anglestoup( var_5.angles ) );

        scripts\engine\utility::_id_6E3E( "button_entered_poster" );
        var_0 delete();
    }
    else
        thread initmedbaybutton();
}

mpqstepregistration()
{
    finalqueststepregistration( "MPQ", undefined, ::blank, ::retrieveneilshead, ::completeretrieveneilshead, ::debugretrieveneilshead, 0, "Retrieve N31L's head" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::placeneilshead, ::completeplaceneilshead, ::debugplaceneilshead, 0, "Place Neil's Head" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::waitforsecuritydoorsdestroyed, ::securitydoorsdestroyed, ::debugsecuritydoorsdestroyed, 0, "Destroy Energy Doors" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::fusepuzzle, ::completefusepuzzle, ::debugfusepuzzle, 0, "Fuse Puzzle" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::entanglebutton, ::completeentanglebutton, ::debugcompleteentanglebutton, 0, "Entangle Button" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::pressbutton, ::completepressbutton, ::debugcompletepressbutton, 0, "Press Button" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::togglepuzzle, ::completetogglepuzzle, ::debugcompletetogglepuzzle, 0, "Complete Toggle Puzzle" );
    finalqueststepregistration( "MPQ", undefined, ::blank, ::enterbossfight, ::completeenterbossfight, ::debugcompleteenterbossfight, 0, "Enter Bossfight" );
}

entanglebutton()
{
    scripts\engine\utility::_id_6E4C( "button_entered_poster" );
}

completeentanglebutton()
{
    activateinteractionsbynoteworthy( "puzzle_door_button" );
}

debugcompleteentanglebutton()
{
    scripts\engine\utility::_id_6E3E( "button_entered_poster" );
}

pressbutton()
{
    scripts\engine\utility::_id_6E4C( "toggle_puzzle_button_pressed" );
}

completepressbutton()
{
    openpuzzledoors();
}

debugcompletepressbutton()
{
    scripts\engine\utility::_id_6E3E( "toggle_puzzle_button_pressed" );
}

togglepuzzle()
{
    scripts\engine\utility::_id_6E4C( "neils_head_placed_in_pap" );
}

completetogglepuzzle()
{
    activateinteractionsbynoteworthy( "neil_head_final_pos" );
}

debugcompletetogglepuzzle()
{
    scripts\engine\utility::_id_6E3E( "neils_head_placed_in_pap" );
}

enterbossfight()
{
    scripts\engine\utility::_id_6E4C( "players_triggered_bossfight" );
}

completeenterbossfight()
{
    foreach ( var_1 in level.players )
    {
        var_1 _id_0A77::_id_1C5D( 1 );
        var_1.kicked_out = undefined;
    }

    level notify( "add_hidden_song_to_playlist" );
    scripts\cp\maps\cp_final\cp_final::disablepas();
    scripts\cp\maps\cp_final\cp_final::enablepa( "pa_facility_rhino_room" );
    scripts\cp\maps\cp_final\cp_final_rhino_boss::start_rhino_fight();
}

debugcompleteenterbossfight()
{
    scripts\engine\utility::_id_6E3E( "players_triggered_bossfight" );
}

finalqueststepregistration( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7 )
{
    if ( !isdefined( level._id_13F4D[var_0] ) )
        level._id_13F4D[var_0] = [];

    if ( !isdefined( var_1 ) )
        var_1 = level._id_13F4D[var_0].size;

    if ( !isdefined( level._id_13F4C[var_0] ) )
        level._id_13F4C[var_0] = -1;

    var_8 = spawnstruct();
    var_8._id_95F2 = var_2;
    var_8._id_DB5D = var_3;
    var_8._id_446D = var_4;
    var_8._id_4EB1 = var_5;
    var_8.step_description = var_7;
    level._id_13F4D[var_0][var_1] = var_8;
}

registermpqinteractions()
{
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "neil_head", undefined, undefined, ::headhintfunc, ::headusefunc, 0, 0, ::blank );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "neil_console", undefined, undefined, ::consolehintfunc, ::consoleusefunc, 0, 0, ::initneilconsole );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "fuse_puzzle", undefined, undefined, ::fusepuzzlehintfunc, ::fusepuzzleusefunc, 0, 0, ::initfusepuzzleinteraction );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "puzzle_pieces", undefined, undefined, ::puzzlepiecehintfunc, ::puzzlepieceusefunc, 0, 0, ::blank );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "entangler_button", undefined, undefined, ::entanglerbuttonhint, ::entanglerbuttonuse, 0, 0, ::initentanglerbutton );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "entangler_spawner", undefined, undefined, ::useentanglerweaponhint, ::useentanglerweapon, 0, 0, ::initentanglerspawner );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "puzzle_door_button", undefined, undefined, scripts\cp\maps\cp_final\cp_final_interactions::blankhintfunc, ::usepuzzlebutton, 0, 0, ::initpuzzlebutton );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "neil_head_final_pos", undefined, undefined, scripts\cp\maps\cp_final\cp_final_interactions::blankhintfunc, ::neilheadfinalusefunc, 0, 0, ::initneilfinalpos );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 1, "neil_monitors", undefined, undefined, scripts\cp\maps\cp_final\cp_final_interactions::blankhintfunc, scripts\cp\maps\cp_final\cp_final_interactions::blankusefunc, 0, 0, ::initneilmonitors );
    scripts\cp\maps\cp_final\cp_final_interactions::levelinteractionregistration( 0, "pap_bridge", undefined, undefined, scripts\cp\maps\cp_final\cp_final_interactions::blankhintfunc, ::pickupbridgepiece, 0, 0, ::initbridgepieces );
    spawnastronauts();
}

initneilfinalpos()
{
    var_0 = scripts\engine\utility::_id_8180( "neil_head_final_pos", "script_noteworthy" );

    foreach ( var_2 in var_0 )
        var_2._id_4C72 = 96;
}

neilheadfinalusefunc( var_0, var_1 )
{
    if ( !isdefined( var_0._id_127C9 ) )
        var_0._id_127C9 = [];

    _id_0A77::playsoundatpos_safe( var_0.origin, "item_placed" );
    var_1 thread playeractivatedbossfight( var_0, var_1 );
}

playeractivatedbossfight( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 notify( "playerActivatedBossFight" );
    var_1 endon( "playerActivatedBossFight" );
    var_1 endon( "disconnect" );

    if ( !scripts\engine\utility::array_contains( var_0._id_127C9, var_1 ) )
        var_0._id_127C9 = scripts\engine\utility::_id_2279( var_0._id_127C9, var_1 );

    var_0._id_127C9 = scripts\engine\utility::_id_22AF( var_0._id_127C9 );

    if ( var_0._id_127C9.size >= level.players.size )
    {
        deactivateinteractionsbynoteworthy( var_0.script_noteworthy );

        foreach ( var_3 in level.players )
        {
            var_3 notify( "left_hidden_room_early" );
            var_3.kicked_out = 1;
            var_3 _id_0A77::_id_1C5D( 0 );
        }

        wait 2;
        completeneilfinalspot();
    }
    else
    {
        var_1 scripts\engine\utility::_id_13736( 2, "left_hidden_room_early", "kicked_out", "last_stand" );

        if ( scripts\engine\utility::array_contains( var_0._id_127C9, var_1 ) )
            var_0._id_127C9 = scripts\engine\utility::array_remove( var_0._id_127C9, var_1 );

        if ( var_0._id_127C9.size <= 0 )
            var_0._id_127C9 = [];
    }
}

completeneilfinalspot()
{
    scripts\engine\utility::_id_6E3E( "players_triggered_bossfight" );
    deactivateinteractionsbynoteworthy( "neil_head_final_pos" );
}

usepuzzlebutton( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "fuse_puzzle_completed" ) && scripts\engine\utility::_id_6E25( "button_entered_poster" ) && !var_1 isjumping() && var_1 getstance() != "stand" )
    {
        _id_0A77::playsoundatpos_safe( var_0.origin, "zmb_mpq_puzzle_turn" );
        scripts\engine\utility::_id_6E3E( "toggle_puzzle_button_pressed" );
        deactivateinteractionsbynoteworthy( "puzzle_door_button" );
        var_2 = scripts\engine\utility::_id_817E( "entangler_button", "script_noteworthy" );
        _id_0A77::playsoundatpos_safe( var_2.origin, "zmb_rhino_door_explo" );
    }
}

startairventfx()
{
    var_0 = scripts\engine\utility::_id_8180( "air_suck_loc", "targetname" );

    foreach ( var_2 in var_0 )
        thread playventfx( var_2 );
}

playventfx( var_0 )
{
    level endon( "end_vent_fx" );
    level endon( "game_ended" );
    var_1 = level._effect["air_vent_in"];

    for (;;)
    {
        var_2 = 5;
        playfx( var_1, var_0.origin, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );
        wait 0.5;
        thread checkfornearbydisk( var_0 );
        level scripts\engine\utility::_id_13736( var_2 - 0.5, "vent_fx" );
    }
}

checkfornearbydisk( var_0 )
{
    level endon( "game_ended" );
    level notify( "checkForNearbyDisk" );
    level endon( "checkForNearbyDisk" );
    level endon( "end_vent_fx" );

    for (;;)
    {
        if ( isdefined( level.undergratepuzzlepiece ) )
        {
            var_1 = distance( var_0.origin, level.undergratepuzzlepiece.origin );

            if ( scripts\engine\utility::_id_9CEE( level.undergratepuzzlepiece.hasbeenthrown ) && var_1 <= 96 )
            {
                var_0 notify( "stop_watching_for_entangler_damage" );
                var_2 = 750;
                var_3 = var_1 / var_2;

                if ( var_3 < 0.25 )
                    var_3 = 0.25;

                level.undergratepuzzlepiece moveto( var_0.origin, var_3, var_3 - 0.15, 0 );
                wait( var_3 );
                var_0 notify( "vent_grabbed_puzzle_piece" );
                level notify( "vent_grabbed_puzzle_piece", level.undergratepuzzlepiece );
                break;
            }
        }

        wait 0.1;
    }
}

initneilmonitors()
{
    level.currentneilstate = "neutral";
    var_0 = scripts\engine\utility::_id_8180( "neil_monitors", "script_noteworthy" );
    level.special_mode_activation_funcs["neil_monitors"] = ::setneilstatepent;
    level.normal_mode_activation_funcs["neil_monitors"] = ::setneilstatepent;

    foreach ( var_2 in var_0 )
        scripts\cp\maps\cp_final\cp_final::addtopersonalinteractionlist( var_2 );
}

setneilstatepent( var_0, var_1, var_2, var_3 )
{
    var_4 = undefined;
    var_5 = getmodelfromstruct( var_1 );

    switch ( level.currentneilstate )
    {
        case "happy":
            var_0 setmodel( var_5 + "_happy" );
            break;
        case "straight":
            var_0 setmodel( var_5 + "_o_face" );
            var_0 playloopsound( "neil_alarm", 1 );
            var_0.playingsound = "neil_alarm";
            var_0 thread cleanupsoundsonrelease( var_0, var_3 );
            break;
        case "angry":
            var_0 setmodel( var_5 + "_angry" );
            break;
        case "large_happy":
            var_0 setmodel( var_5 + "_happy" );
            break;
        case "large_angry":
            var_0 setmodel( var_5 + "_angry" );
            break;
        case "large_blank":
            var_0 setmodel( "cp_final_monitor_large_screen" );
            break;
        default:
            var_0 setmodel( "cp_final_monitor_small" );
            break;
    }
}

getmodelfromstruct( var_0 )
{
    if ( isdefined( var_0._id_EDF9 ) )
        return var_0._id_EDF9;
    else
        return "cp_final_monitor_small";
}

cleanupsoundsonrelease( var_0, var_1 )
{
    var_0 notify( "cleanUpSoundsOnRelease" );
    var_0 endon( "cleanUpSoundsOnRelease" );
    var_2 = scripts\engine\utility::_id_1372B( var_1, "disconnect", var_0, "p_ent_reset", var_1, "zone_change", var_1, "rave_status_changed", var_1, "rave_interactions_updated", level, "game_ended" );

    if ( isdefined( var_0.playingsound ) )
        var_0 stoploopsound();

    var_0.playingsound = undefined;
}

initpuzzlebutton()
{
    thread initpuzzlebuttoninternal();
}

initpuzzlebuttoninternal()
{
    level endon( "game_ended" );
    scripts\engine\utility::_id_6E4C( "button_entered_poster" );
    var_0 = scripts\engine\utility::_id_8180( "puzzle_door_button", "script_noteworthy" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2._id_0334 ) )
            var_3 = scripts\engine\utility::_id_8180( var_2._id_0334, "targetname" )[0];
        else
            var_3 = var_2;

        var_4 = spawn( "script_model", var_3.origin );

        if ( isdefined( var_3.angles ) )
            var_4.angles = var_3.angles;

        var_4 setmodel( "electrical_airlock_cycle_button_dlc4" );
    }
}

initentanglerspawner()
{
    var_0 = scripts\engine\utility::_id_817E( "entangler_spawner", "script_noteworthy" );
    var_0._id_86A2 = "locOverride";
}

useentanglerweaponhint( var_0, var_1 )
{
    return "";
}

useentanglerweapon( var_0, var_1 )
{
    if ( !scripts\engine\utility::_id_9CEE( var_1.hascollectedentangler ) )
    {
        var_1 playlocalsound( "zmb_item_pickup" );
        scripts\cp\crafted_entangler::give_crafted_entangler( var_0, var_1 );
    }
}

entanglerbuttonhint( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "toggle_puzzle_doors_opened" ) )
    {
        thread watchforplayerlookat( var_1 );

        if ( isdefined( var_1.current_button ) )
            return "";
        else
            return "";
    }
    else
        return "";
}

entanglerbuttonuse( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "toggle_puzzle_doors_opened" ) )
    {
        if ( isdefined( var_1.current_button ) )
        {
            var_2 = gettime();

            if ( var_2 >= var_0.nextneilvotime )
            {
                if ( playneilvo( "final_n31l_evil_hacked", var_1._id_134FD ) )
                    var_0.nextneilvotime = var_2 + 10000;
            }

            var_1 notify( "stop_interaction_logic" );
            var_1._id_A8D3 = undefined;
            var_3 = var_1.current_button;
            var_1.current_button _meth_818C( var_1 );
            _id_0A77::playsoundatpos_safe( var_0.origin, "zmb_mpq_killswitch_placement" );
            runbuttonrules( var_0, var_3 );
            runtogglepuzzlevalidation( var_0, var_1 );
        }
        else
            var_1 _id_0A59::_id_DE6E();
    }
}

setneilstate( var_0 )
{
    level.currentneilstate = var_0;

    foreach ( var_2 in level.players )
        var_2 thread scripts\cp\maps\cp_final\cp_final::update_special_mode_for_player( var_2 );

    switch ( var_0 )
    {
        case "happy":
            if ( isdefined( level._id_BEC5 ) )
                level._id_BEC5 setscriptablepartstate( "happy", "show", 1 );

            setomnvar( "zm_neil_state", 1 );
            break;
        case "happy_line":
            if ( isdefined( level._id_BEC5 ) )
                level._id_BEC5 setscriptablepartstate( "happy_line", "show", 1 );

            setomnvar( "zm_neil_state", 1 );
            break;
        case "straight":
            if ( isdefined( level._id_BEC5 ) )
                level._id_BEC5 setscriptablepartstate( "oface", "show", 1 );

            setomnvar( "zm_neil_state", 2 );
            break;
        case "angry":
            if ( isdefined( level._id_BEC5 ) )
                level._id_BEC5 setscriptablepartstate( "angry", "show", 1 );

            setomnvar( "zm_neil_state", 3 );
            break;
        case "angry_line":
            if ( isdefined( level._id_BEC5 ) )
                level._id_BEC5 setscriptablepartstate( "angry_line", "show", 1 );

            setomnvar( "zm_neil_state", 3 );
            break;
        case "sad":
            if ( isdefined( level._id_BEC5 ) )
                level._id_BEC5 setscriptablepartstate( "sad", "show", 1 );

            setomnvar( "zm_neil_state", 3 );
            break;
        default:
            if ( isdefined( level._id_BEC5 ) )
            {
                if ( scripts\engine\utility::_id_4347() )
                    level._id_BEC5 setscriptablepartstate( "happy", "show", 1 );
                else
                    level._id_BEC5 setscriptablepartstate( "happy_line", "show", 1 );
            }

            setomnvar( "zm_neil_state", 0 );
            break;
    }
}

disabledoorswhenentangled( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "inFinalPosition" );
    var_1 endon( "end_entangler_funcs" );
    var_1 notify( "disableDoorsWhenEntangled" );
    var_1 endon( "disableDoorsWhenEntangled" );
    var_0 endon( "entangler_removed" );
    var_0 endon( "disconnect" );
    var_1 endon( "released" );
    var_1 endon( "launched" );
    var_1 waittill( "item_entangled" );
    thread neilclosedoors();
    disableslidingdoorinteractions();
}

watchforitemdeleted( var_0, var_1 )
{
    var_1 endon( "death" );
    var_1 endon( "reset" );
    var_1 endon( "inFinalPosition" );
    level endon( "inFinalPosition" );
    var_1 waittill( "cancel_entangler" );
    thread resetneilhead( var_0, var_1 );
}

resetneilhead( var_0, var_1 )
{
    var_1 notify( "end_entangler_funcs" );
    var_1 notify( "reset" );
    var_1 endon( "inFinalPosition" );
    level endon( "inFinalPosition" );
    var_1 notify( "end_entangler_funcs" );
    var_1._id_3A9D = undefined;
    var_1.entangled = undefined;
    var_1.entangled = undefined;
    var_1 setcandamage( 0 );
    var_1.origin = var_1._id_C3A2;
    var_1.angles = var_1._id_C3A0;
    var_1._id_AAA8 = undefined;
    var_1.reachedfirstdoor = undefined;
    var_1.reachedseconddoor = undefined;
    level._id_BEC5 _meth_83AD();
    unsetwavenumoverride();
    unsetzombiemovespeed();
    unsetspawndelayoverride();
    restorewavespawningcounters();
    unpausenormalwavespawning();
    resetslidingdoorstonormalstate();
    resume_spawn_wave();
    getneilheadpath( var_0, var_1 );
    thread reenableneilheadentangleitem( var_0, var_1 );
}

disableslidingdoorinteractions( var_0 )
{
    foreach ( var_2 in level.allslidingdoors )
    {
        if ( scripts\engine\utility::_id_9CEE( var_0 ) && !scripts\engine\utility::_id_9CEE( var_2.player_opened ) )
            continue;

        var_2.nointeraction = 1;
        _id_0A59::_id_E019( var_2 );
    }
}

resetslidingdoorstonormalstate()
{
    foreach ( var_1 in level.allslidingdoors )
    {
        var_1.nointeraction = undefined;

        if ( scripts\engine\utility::_id_9CEE( var_1._id_4284 ) )
            _id_0A59::_id_175C( var_1 );
    }
}

watchforitementangled( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 notify( "watchForItemEntangled" );
    var_1 endon( "watchForItemEntangled" );
    var_1 endon( "reset" );
    var_1 endon( "inFinalPosition" );
    level endon( "inFinalPosition" );
    scripts\engine\utility::_id_6E5A( "disable_evil_neil" );

    if ( scripts\engine\utility::_id_9CEE( var_1.entangled ) )
    {
        var_1 notify( "end_entangle_move_to_logic" );
        var_1 notify( "released" );
        var_1.sendbacktospawn = 1;
        thread resetneilhead( var_0, var_1 );
    }
}

neilheadlaunchfunc( var_0, var_1, var_2 )
{
    var_1 notify( "launched" );
    var_1 endon( "reset" );
    var_1 endon( "inFinalPosition" );
    level endon( "inFinalPosition" );
    var_1 endon( "released" );

    if ( scripts\engine\utility::_id_9CEE( var_1.sendbacktospawn ) )
    {
        var_0.entangledmodel = undefined;
        thread resetneilhead( var_0, var_1 );
    }
    else
        scripts\cp\crafted_entangler::launchitem( var_0, var_1, var_2 );
}

reenableneilheadentangleitem( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 notify( "reenableNeilHeadEntangleItem" );
    var_1 endon( "reenableNeilHeadEntangleItem" );
    var_1 endon( "inFinalPosition" );
    level endon( "inFinalPosition" );
    var_1 hide();
    level._id_BEC5 setscriptablepartstate( "angry", "show", 1 );
    var_1.sendbacktospawn = undefined;
    wait 0.1;
    var_1 show();
    level waittill( "wave_starting" );

    if ( scripts\engine\utility::_id_6E25( "disable_evil_neil" ) && level.currentneilstate != "straight" )
        level._id_BEC5 setscriptablepartstate( "happy", "show", 1 );
    else
        scripts\engine\utility::_id_6E4C( "disable_evil_neil" );

    var_2 = scripts\engine\utility::_id_817E( "console_neil_head", "targetname" );
    itemallowentangle( var_2, var_1 );
    thread disabledoorswhenentangled( var_0, var_1 );
    thread watchforitementangled( var_0, var_1 );
    thread watchforitemdeleted( var_0, var_1 );
}

itemallowentangle( var_0, var_1 )
{
    thread scripts\cp\crafted_entangler::outlineitemforplayers( var_0, var_1 );
    thread scripts\cp\crafted_entangler::watchforentanglerdamage( var_0, var_1 );
}

checkneilheadcollision( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_0 waittill( "collision" );
    var_3 = var_0.origin;
    var_4 = scripts\engine\utility::_id_817E( "neil_head_final_pos", "script_noteworthy" );
    var_5 = scripts\engine\utility::_id_817E( var_4._id_0334, "targetname" );
    var_0 notify( "end_entangler_funcs" );

    if ( distance( var_3, var_5.origin ) <= 48 )
    {
        deactivateinteractionsbynoteworthy( "entangler_button" );
        playloopsound( var_3, "zmb_neil_head_placement_mpq" );
        level notify( "neil_doing_something_evil" );
        level notify( "inFinalPosition" );
        var_0 notify( "inFinalPosition" );
        scripts\engine\utility::_id_6E3E( "disable_evil_neil" );

        if ( isdefined( var_2 ) )
            playfx( level._effect["energy_door_impact"], var_5.origin, vectortoangles( var_5.origin - var_2.origin ) * 8, anglestoup( var_5.angles ) );
        else
            playfx( level._effect["energy_door_impact"], var_5.origin, anglestoforward( var_5.angles ) * 8, anglestoup( var_5.angles ) );

        scripts\engine\utility::_id_6E3E( "neils_head_placed_in_pap" );
        var_0 _meth_851B();
        var_0.origin = var_5.origin;
        var_0.angles = var_5.angles;
        resetslidingdoorstonormalstate();
        unsetwavenumoverride();
        unsetzombiemovespeed();
        unsetspawndelayoverride();
        restorewavespawningcounters();
        unpausenormalwavespawning();
        resume_spawn_wave();
    }
    else
    {
        playneilvo( "final_n31l_evil_activate_walls", var_2._id_134FD );
        var_0 _id_0A6B::_id_CC16( "pillage", 1, var_0.origin );
        playloopsound( var_3, "zmb_neil_head_explode" );
        var_0 _meth_851B();
        thread resetplaceneilshead( var_0, var_1, var_2 );
        setneilstate( "angry" );
        var_6 = spawn( "script_model", level.players[0].origin );
        var_6 setmodel( "tag_origin" );
        var_6.team = "allies";
        level._id_72AA = 1;
        _id_0A76::_id_D980( level.players[0], "kill_50", var_6, 0 );
    }
}

resetplaceneilshead( var_0, var_1, var_2 )
{
    var_0 endon( "reset" );
    var_0 endon( "inFinalPosition" );
    level endon( "inFinalPosition" );
    thread resetneilhead( var_2, var_0 );
}

deactivateneil()
{
    level notify( "deactivateNeil" );
    level endon( "deactivateNeil" );
    level endon( "game_ended" );
    level endon( "inFinalPosition" );
    setneilstate( "happy" );
    resetslidingdoorstonormalstate();
    deactivateinteractionsbynoteworthy( "entangler_button" );
    scripts\engine\utility::_id_6E3E( "disable_evil_neil" );

    foreach ( var_1 in level.players )
        var_1 _id_0A5E::_id_D9AD( "mt_dlc4_hack_neil" );

    var_3 = scripts\engine\utility::ter_op( level.players[0] _id_0A77::_id_9F02() || level._id_C552, int( 240 ), int( 180 ) );
    var_4 = level scripts\engine\utility::_id_13736( var_3 - 5, "makeNeilEvil" );
    setneilstate( "straight" );

    if ( isdefined( var_4 ) && var_4 != "makeNeilEvil" )
        level scripts\engine\utility::_id_13736( 5, "makeNeilEvil" );

    scripts\engine\utility::_id_6E2A( "disable_evil_neil" );

    if ( isdefined( level._id_BEC5 ) )
        level._id_BEC5 notify( "end_entangler_funcs" );

    setneilstate( "angry" );
    activateinteractionsbynoteworthy( "entangler_button" );
    initentanglerbutton();
    thread neildoevilstuff();
}

runtogglepuzzlevalidation( var_0, var_1 )
{
    if ( validatepuzzle( var_0 ) )
    {
        scripts\engine\utility::_id_6E3E( "completed_toggle_puzzle_once" );
        thread deactivateneil();
        var_2 = scripts\engine\utility::_id_817E( "console_neil_head", "targetname" );
        thread scripts\cp\crafted_entangler::outlineitemforplayers( var_2, var_2._id_8C98 );
        thread scripts\cp\crafted_entangler::watchforentanglerdamage( var_2, var_2._id_8C98 );
        getneilheadpath( var_1, var_2._id_8C98 );
        thread disabledoorswhenentangled( var_1, var_2._id_8C98 );
        thread watchforitementangled( var_1, var_2._id_8C98 );
        thread watchforitemdeleted( var_1, var_2._id_8C98 );
        _id_0A77::playsoundatpos_safe( level.neil_console.origin, "zmb_mpq_puzzle_success" );
    }
}

validatepuzzle( var_0 )
{
    var_1 = var_0._id_32F7[0]._id_00B9;

    foreach ( var_4, var_3 in var_0._id_32F7 )
    {
        if ( var_4 < 1 )
            continue;

        if ( var_3._id_00B9 != var_1 )
            return 0;
    }

    var_0.currentcolorstate = var_1;
    return 1;
}

togglebutton( var_0 )
{
    switch ( var_0._id_00B9 )
    {
        case "horizontal":
            var_0._id_00B9 = "vertical";
            var_0 rotateto( ( 0, 90, 90 ), 0.1 );
            break;
        case "vertical":
            var_0._id_00B9 = "horizontal";
            var_0 rotateto( ( 0, 90, 0 ), 0.1 );
            break;
    }
}

initentanglerbutton()
{
    var_0 = scripts\engine\utility::_id_817E( "entangler_button", "script_noteworthy" );
    var_0.nextneilvotime = 0;
    var_0.dontdelaytrigger = 1;
    var_1 = scripts\engine\utility::_id_8180( var_0._id_0334, "targetname" );
    assignbuttonindex( var_1, var_0 );
    var_0._id_32F7 = [];
    var_1 = scripts\engine\utility::_id_22A8( var_1 );
    var_0.currentcolorstate = undefined;

    foreach ( var_6, var_3 in var_1 )
    {
        var_4 = undefined;

        if ( !isdefined( var_3._id_32D9 ) )
        {
            var_4 = spawn( "script_model", var_3.origin );

            if ( isdefined( var_3.angles ) )
                var_4.angles = var_3.angles;
        }
        else
            var_4 = var_3._id_32D9;

        var_5 = "cp_final_pod_wall_handle";

        if ( var_6 < 8 )
        {
            var_4._id_00B9 = "horizontal";
            var_4 rotateto( ( 0, 90, 0 ), 0.1 );
        }
        else
        {
            var_4._id_00B9 = "vertical";
            var_4 rotateto( ( 0, 90, 90 ), 0.1 );
        }

        var_4 setmodel( var_5 );
        var_3._id_32D9 = var_4;
        var_0._id_32F7[var_0._id_32F7.size] = var_4;
        var_4.rulegroup = var_3.rulegroup;
        var_4.ruletouse = var_3.ruletouse;
    }
}

solvetogglepuzzle()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_817E( "entangler_button", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_8180( var_0._id_0334, "targetname" );

    foreach ( var_3 in var_1 )
    {
        var_3._id_32D9._id_00B9 = "horizontal";
        var_3._id_32D9 rotateto( ( 0, 90, 0 ), 0.1 );
    }

    wait 0.25;
    runtogglepuzzlevalidation( var_0, level.players[0] );
}

choosedoordecoys( var_0 )
{
    var_0.reachedfirstdoor = undefined;
    var_0.reachedseconddoor = undefined;
    var_1 = level.allslidingdoors;
    var_1 = scripts\engine\utility::_id_782F( var_0.origin, var_1, undefined, undefined, undefined, 512 );
    var_2 = scripts\engine\utility::_id_DC6B( var_1 );
    var_1 = scripts\engine\utility::array_remove( var_1, var_2 );
    var_3 = scripts\engine\utility::_id_DC6B( var_1 );
    var_1 = scripts\engine\utility::array_remove( var_1, var_3 );
    var_4 = scripts\engine\utility::_id_DC6B( var_1 );
    var_5 = sortbydistance( [ var_2, var_3, var_4 ], var_0.origin );
    var_0.firstdoorpath = var_5[0];
    var_0.seconddoorpath = var_5[1];
    var_0.thirddoorpath = var_5[2];
}

getneilheadpath( var_0, var_1 )
{
    choosedoordecoys( var_1 );
    var_2 = scripts\engine\utility::_id_817E( "pap_portal", "script_noteworthy" );
    var_3 = scripts\engine\utility::_id_817E( "neil_head_final_pos", "script_noteworthy" );
    var_4 = buildpath( level.players[0], var_1.origin, var_1.firstdoorpath.origin );
    var_5 = buildpath( level.players[0], var_4[var_4.size - 1], var_1.seconddoorpath.origin );
    var_6 = buildpath( level.players[0], var_5[var_5.size - 1], var_1.thirddoorpath.origin );
    var_7 = buildpath( level.players[0], var_6[var_6.size - 1], var_2.origin );
    var_8 = scripts\engine\utility::_id_227F( var_4, var_5, var_6, var_7 );
    var_8 = scripts\engine\utility::_id_2279( var_8, var_3.origin );
    var_1.pathtogoal = var_8;
}

buildpath( var_0, var_1, var_2 )
{
    var_3 = [];
    var_4 = level.allslidingdoors;
    var_5 = 0;
    var_6 = undefined;

    for (;;)
    {
        if ( !isdefined( var_0 ) )
            var_0 = level.players[0];

        if ( var_3.size == 0 )
            var_3 = var_0 _meth_8428( var_1, var_2, 1, 1 );
        else
        {
            var_7 = var_0 _meth_8428( var_3[var_3.size - 1], var_2, 1, 1 );
            var_3 = scripts\engine\utility::_id_227F( var_3, var_7 );
        }

        if ( distance2dsquared( var_2, var_3[var_3.size - 1] ) <= 4096 )
            return var_3;

        var_4 = sortbydistance( var_4, var_3[var_3.size - 1] );
        var_8 = [];
        var_9 = undefined;

        foreach ( var_11 in var_4 )
        {
            if ( var_5 && ( var_11 == var_4[0] || var_11 == var_6 ) )
                continue;

            var_8 = var_0 _meth_8428( var_3[var_3.size - 1], var_11.origin, 1, 1 );

            if ( distance2dsquared( var_11.origin, var_8[var_8.size - 1] ) <= 4096 )
            {
                var_9 = var_11;
                break;
            }
        }

        if ( !var_5 )
            var_5 = 1;

        if ( !isdefined( var_9 ) )
            return var_3;
        else
            var_6 = var_9;

        if ( isdefined( var_9._id_0334 ) )
        {
            var_8 = [];
            var_8[var_8.size] = var_9.origin;
            var_13 = scripts\engine\utility::_id_817E( var_9._id_0334, "targetname" );

            if ( _func_2A4( var_13 ) )
            {
                var_8[var_8.size] = var_13.origin;
                var_3 = scripts\engine\utility::_id_227F( var_3, var_8 );
            }
            else
                return var_3;
        }
        else
            return var_3;
    }
}

assignbuttonindex( var_0, var_1 )
{
    var_2 = [ -472.8, -486.8, -500.8, -514.8 ];
    var_3 = [ 128.8, 114.8, 100.8, 86.8 ];
    var_4 = [];
    var_5 = [];
    var_6 = [];
    var_7 = [];
    var_8 = [];
    var_9 = [];
    var_10 = [];
    var_11 = [];
    var_12 = [];
    var_13 = [];
    var_14 = [];
    var_15 = [];
    var_16 = [];
    var_17 = [];
    var_18 = [];
    var_19 = [];
    var_20 = [];
    var_21 = [];
    var_22 = [];
    var_23 = [];
    var_24 = [];
    var_25 = [];
    var_26 = [];
    var_27 = [];

    foreach ( var_29 in var_0 )
    {
        var_30 = var_29.origin[0];
        var_31 = var_29.origin[2];
        var_29._id_92B8 = 1;
        var_29.rulegroup = [];

        if ( isdefined( var_29.script_noteworthy ) )
            var_29._id_92B8 = int( var_29.script_noteworthy );

        switch ( var_29._id_92B8 )
        {
            case 1:
                var_5[var_5.size] = var_29;
                var_6[var_6.size] = var_29;
                var_8[var_8.size] = var_29;
                var_10[var_10.size] = var_29;
                var_12[var_12.size] = var_29;
                var_15[var_15.size] = var_29;
                var_17[var_17.size] = var_29;
                var_18[var_18.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_24[var_24.size] = var_29;
                var_25[var_25.size] = var_29;
                break;
            case 2:
                var_4[var_4.size] = var_29;
                var_7[var_7.size] = var_29;
                var_9[var_9.size] = var_29;
                var_10[var_10.size] = var_29;
                var_12[var_12.size] = var_29;
                var_13[var_13.size] = var_29;
                var_16[var_16.size] = var_29;
                var_18[var_18.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_24[var_24.size] = var_29;
                var_26[var_26.size] = var_29;
                break;
            case 3:
                var_6[var_6.size] = var_29;
                var_7[var_7.size] = var_29;
                var_8[var_8.size] = var_29;
                var_10[var_10.size] = var_29;
                var_13[var_13.size] = var_29;
                var_15[var_15.size] = var_29;
                var_17[var_17.size] = var_29;
                var_18[var_18.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_25[var_25.size] = var_29;
                var_26[var_26.size] = var_29;
                break;
            case 4:
                var_4[var_4.size] = var_29;
                var_5[var_5.size] = var_29;
                var_9[var_9.size] = var_29;
                var_10[var_10.size] = var_29;
                var_13[var_13.size] = var_29;
                var_15[var_15.size] = var_29;
                var_16[var_16.size] = var_29;
                var_18[var_18.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_24[var_24.size] = var_29;
                var_25[var_25.size] = var_29;
                break;
            case 5:
                var_6[var_6.size] = var_29;
                var_7[var_7.size] = var_29;
                var_9[var_9.size] = var_29;
                var_11[var_11.size] = var_29;
                var_12[var_12.size] = var_29;
                var_14[var_14.size] = var_29;
                var_16[var_16.size] = var_29;
                var_19[var_19.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_26[var_26.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 6:
                var_4[var_4.size] = var_29;
                var_5[var_5.size] = var_29;
                var_8[var_8.size] = var_29;
                var_11[var_11.size] = var_29;
                var_12[var_12.size] = var_29;
                var_14[var_14.size] = var_29;
                var_17[var_17.size] = var_29;
                var_19[var_19.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_24[var_24.size] = var_29;
                var_26[var_26.size] = var_29;
                break;
            case 7:
                var_5[var_5.size] = var_29;
                var_6[var_6.size] = var_29;
                var_9[var_9.size] = var_29;
                var_11[var_11.size] = var_29;
                var_12[var_12.size] = var_29;
                var_14[var_14.size] = var_29;
                var_16[var_16.size] = var_29;
                var_19[var_19.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_24[var_24.size] = var_29;
                var_26[var_26.size] = var_29;
                break;
            case 8:
                var_4[var_4.size] = var_29;
                var_7[var_7.size] = var_29;
                var_8[var_8.size] = var_29;
                var_11[var_11.size] = var_29;
                var_14[var_14.size] = var_29;
                var_15[var_15.size] = var_29;
                var_17[var_17.size] = var_29;
                var_19[var_19.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_26[var_26.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 9:
                var_6[var_6.size] = var_29;
                var_7[var_7.size] = var_29;
                var_8[var_8.size] = var_29;
                var_10[var_10.size] = var_29;
                var_13[var_13.size] = var_29;
                var_15[var_15.size] = var_29;
                var_17[var_17.size] = var_29;
                var_19[var_19.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_26[var_26.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 10:
                var_4[var_4.size] = var_29;
                var_5[var_5.size] = var_29;
                var_9[var_9.size] = var_29;
                var_10[var_10.size] = var_29;
                var_13[var_13.size] = var_29;
                var_15[var_15.size] = var_29;
                var_16[var_16.size] = var_29;
                var_19[var_19.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_25[var_25.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 11:
                var_5[var_5.size] = var_29;
                var_6[var_6.size] = var_29;
                var_8[var_8.size] = var_29;
                var_10[var_10.size] = var_29;
                var_13[var_13.size] = var_29;
                var_15[var_15.size] = var_29;
                var_17[var_17.size] = var_29;
                var_19[var_19.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_25[var_25.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 12:
                var_4[var_4.size] = var_29;
                var_7[var_7.size] = var_29;
                var_9[var_9.size] = var_29;
                var_10[var_10.size] = var_29;
                var_14[var_14.size] = var_29;
                var_15[var_15.size] = var_29;
                var_16[var_16.size] = var_29;
                var_19[var_19.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_26[var_26.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 13:
                var_5[var_5.size] = var_29;
                var_6[var_6.size] = var_29;
                var_9[var_9.size] = var_29;
                var_11[var_11.size] = var_29;
                var_13[var_13.size] = var_29;
                var_14[var_14.size] = var_29;
                var_16[var_16.size] = var_29;
                var_18[var_18.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_24[var_24.size] = var_29;
                var_25[var_25.size] = var_29;
                break;
            case 14:
                var_4[var_4.size] = var_29;
                var_7[var_7.size] = var_29;
                var_8[var_8.size] = var_29;
                var_11[var_11.size] = var_29;
                var_12[var_12.size] = var_29;
                var_13[var_13.size] = var_29;
                var_17[var_17.size] = var_29;
                var_18[var_18.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_25[var_25.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 15:
                var_6[var_6.size] = var_29;
                var_7[var_7.size] = var_29;
                var_9[var_9.size] = var_29;
                var_11[var_11.size] = var_29;
                var_12[var_12.size] = var_29;
                var_14[var_14.size] = var_29;
                var_16[var_16.size] = var_29;
                var_18[var_18.size] = var_29;
                var_20[var_20.size] = var_29;
                var_21[var_21.size] = var_29;
                var_24[var_24.size] = var_29;
                var_27[var_27.size] = var_29;
                break;
            case 16:
                var_4[var_4.size] = var_29;
                var_5[var_5.size] = var_29;
                var_8[var_8.size] = var_29;
                var_11[var_11.size] = var_29;
                var_12[var_12.size] = var_29;
                var_14[var_14.size] = var_29;
                var_17[var_17.size] = var_29;
                var_18[var_18.size] = var_29;
                var_22[var_22.size] = var_29;
                var_23[var_23.size] = var_29;
                var_24[var_24.size] = var_29;
                var_25[var_25.size] = var_29;
                break;
        }
    }

    var_1.group1 = var_4;
    var_1.group2 = var_5;
    var_1.group3 = var_6;
    var_1.group4 = var_7;
    var_1.group5 = var_8;
    var_1.group6 = var_9;
    var_1.group7 = var_10;
    var_1.group8 = var_11;
    var_1.group9 = var_12;
    var_1.group10 = var_13;
    var_1.group11 = var_14;
    var_1.group12 = var_15;
    var_1.group13 = var_16;
    var_1.group14 = var_17;
    var_1.group15 = var_18;
    var_1.group16 = var_19;
    var_1.group17 = var_20;
    var_1.group18 = var_21;
    var_1.group19 = var_22;
    var_1.group20 = var_23;
    var_1.group21 = var_24;
    var_1.group22 = var_25;
    var_1.group23 = var_26;
    var_1.group24 = var_27;
    thread assignbuttonrules( var_0, var_1 );
}

assignbuttonrules( var_0, var_1 )
{
    var_2 = randomint( 6 );

    foreach ( var_4 in var_0 )
    {
        switch ( var_4._id_92B8 )
        {
            case 1:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group1;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group8;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group10;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group13;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group17;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group23;
                break;
            case 2:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group2;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group8;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group12;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group16;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group20;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group22;
                break;
            case 3:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group2;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group8;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group9;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group16;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group19;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group21;
                break;
            case 4:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group3;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group8;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group9;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group14;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group18;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group23;
                break;
            case 5:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group1;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group5;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group12;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group15;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group20;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group21;
                break;
            case 6:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group4;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group6;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group12;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group13;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group17;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group24;
                break;
            case 7:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group4;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group5;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group12;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group14;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group18;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group24;
                break;
            case 8:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group3;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group6;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group9;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group15;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group19;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group22;
                break;
            case 9:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group1;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group6;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group11;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group15;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group20;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group22;
                break;
            case 10:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group4;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group5;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group11;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group14;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group17;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group23;
                break;
            case 11:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group4;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group6;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group11;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group13;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group18;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group23;
                break;
            case 12:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group3;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group5;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group10;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group15;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group19;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group21;
                break;
            case 13:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group1;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group7;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group9;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group14;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group17;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group24;
                break;
            case 14:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group2;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group7;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group11;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group16;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group20;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group21;
                break;
            case 15:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group2;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group7;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group10;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group16;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group19;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group22;
                break;
            case 16:
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group3;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group7;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group10;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group13;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group18;
                var_4.rulegroup[var_4.rulegroup.size] = var_1.group24;
                break;
        }

        if ( scripts\engine\utility::_id_6E25( "completed_toggle_puzzle_once" ) )
        {
            var_4.ruletouse = var_4.rulegroup[var_2];
            continue;
        }

        var_4.ruletouse = var_4.rulegroup[0];
    }
}

runbuttonrules( var_0, var_1 )
{
    togglebutton( var_1 );
    var_2 = var_1.ruletouse;

    foreach ( var_4 in var_2 )
    {
        var_5 = var_4._id_32D9;

        if ( var_5 == var_1 )
            continue;

        togglebutton( var_5 );
    }
}

buttonrule2( var_0, var_1 )
{
    togglebutton( var_1 );

    foreach ( var_3 in var_0.group2 )
    {
        var_4 = var_3._id_32D9;

        if ( var_4 == var_1 )
            continue;

        togglebutton( var_4 );
    }
}

buttonrule3( var_0, var_1 )
{
    togglebutton( var_1 );

    foreach ( var_3 in var_0.group3 )
    {
        var_4 = var_3._id_32D9;

        if ( var_4 == var_1 )
            continue;

        togglebutton( var_4 );
    }
}

buttonrule4( var_0, var_1 )
{
    togglebutton( var_1 );

    foreach ( var_3 in var_0.group4 )
    {
        var_4 = var_3._id_32D9;

        if ( var_4 == var_1 )
            continue;

        togglebutton( var_4 );
    }
}

watchforplayerlookat( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_0 endon( "watchForPlayerLookat" );
    var_0 endon( "stop_interaction_logic" );
    var_0 thread unsetplayerlookat( var_0 );
    var_1 = scripts\engine\utility::_id_817E( "entangler_button", "script_noteworthy" );
    var_2 = var_1._id_32F7;
    var_3 = undefined;
    var_4 = undefined;

    for (;;)
    {
        var_5 = 0;

        foreach ( var_8, var_7 in var_2 )
        {
            if ( var_0 _meth_8409( var_7.origin, 65, 20 ) )
            {
                var_5 = 1;
                var_0.current_button = var_7;
                var_4 = 2;

                if ( isdefined( var_3 ) )
                {
                    if ( var_3 != var_7 )
                    {
                        var_3 _meth_818C( var_0 );
                        var_7 _meth_818F( var_0, var_4, 0, 0 );
                    }
                }
                else
                    var_7 _meth_818F( var_0, var_4, 0, 0 );

                var_3 = var_7;
            }
        }

        if ( !scripts\engine\utility::_id_9CEE( var_5 ) )
        {
            if ( isdefined( var_3 ) )
                var_3 _meth_818C( var_0 );

            var_0.current_button = undefined;
            var_3 = undefined;
        }

        wait 0.05;
    }
}

unsetplayerlookat( var_0 )
{
    var_0 endon( "disconnect" );
    var_0 endon( "watchForPlayerLookat" );
    var_0 waittill( "stop_interaction_logic" );

    if ( isdefined( var_0.current_button ) )
    {
        var_0.current_button _meth_818C( var_0 );
        var_0.current_button = undefined;
    }
}

watchforentanglerdamage( var_0 )
{
    level endon( "game_ended" );
    level endon( "endMonitorDamageLoop" );
    scripts\engine\utility::_id_6E4C( "restorepower_step1" );

    for (;;)
    {
        level waittill( "entangler_item_collision", var_1 );

        if ( distance( var_1, sortbydistance( var_0, var_1 )[0].origin ) <= 56 )
        {
            foreach ( var_3 in var_0 )
                var_3 setmodel( "cp_final_monitor_large_screen_cracked" );

            break;
        }
    }

    scripts\engine\utility::_id_6E3E( "security_doors_deactivated" );
    level notify( "endMonitorDamageLoop" );
}

initneilconsole()
{
    foreach ( var_1 in scripts\engine\utility::_id_8180( "neil_console", "script_noteworthy" ) )
        var_1.nextneilvotime = 0;

    deactivateinteractionsbynoteworthy( "neil_console" );
}

initfusepuzzleinteraction()
{
    deactivateinteractionsbynoteworthy( "fuse_puzzle" );
    deactivateinteractionsbynoteworthy( "puzzle_pieces" );
}

deactivateinteractionsbynoteworthy( var_0 )
{
    var_1 = scripts\engine\utility::_id_8180( var_0, "script_noteworthy" );

    foreach ( var_3 in var_1 )
        _id_0A59::_id_E019( var_3 );
}

deletemodelsbynoteworthy( var_0 )
{
    var_1 = scripts\engine\utility::_id_8180( var_0, "script_noteworthy" );

    foreach ( var_3 in var_1 )
    {
        if ( isdefined( var_3._id_01F1 ) )
            var_3._id_01F1 delete();
    }
}

activateinteractionsbynoteworthy( var_0 )
{
    var_1 = scripts\engine\utility::_id_8180( var_0, "script_noteworthy" );

    foreach ( var_3 in var_1 )
        _id_0A59::_id_175C( var_3 );
}

initpuzzlecombinations()
{
    var_0 = "cp/zombies/cp_final_puzzle_combos.csv";
    level.puzzle_combinations = [];
    level.insertedpieces = [];
    var_1 = 0;

    for (;;)
    {
        var_2 = tablelookupbyrow( var_0, var_1, 0 );

        if ( var_2 == "" )
            break;

        level.puzzle_combinations[level.puzzle_combinations.size] = var_2;
        var_1++;
    }
}

spawnmodelatstruct( var_0, var_1 )
{
    if ( !isdefined( var_1 ) )
        var_1 = "tag_origin";

    var_2 = spawn( "script_model", var_0.origin );

    if ( isdefined( var_0.angles ) )
        var_2.angles = var_0.angles;
    else
        var_2.angles = ( 0, 0, 0 );

    var_2 setmodel( var_1 );
    return var_2;
}

initmedbaymonitors()
{
    var_0 = scripts\engine\utility::_id_8180( "med_bay_monitors", "targetname" );
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        var_4 = spawn( "script_model", var_3.origin );

        if ( isdefined( var_3.angles ) )
            var_4.angles = var_3.angles;

        if ( isdefined( var_3._id_EE24 ) )
            var_4 setmodel( var_3._id_EE24 );

        var_1[var_1.size] = var_4;
    }

    level thread watchforentanglerdamage( var_1 );
}

spawnpuzzlepieces()
{
    var_0 = scripts\engine\utility::_id_8180( "puzzle_pieces", "script_noteworthy" );
    level.puzzlestates = getvalidpuzzlestates();
    level.phantomdisk = level.puzzlestates[level.puzzlestates.size - 1];

    foreach ( var_3, var_2 in var_0 )
        spawnpuzzlepiece( var_3, var_2 );
}

spawnpuzzlepiece( var_0, var_1 )
{
    if ( isdefined( var_1._id_01F1 ) )
        var_1._id_01F1 delete();

    if ( isdefined( var_1.screenmodel ) )
        var_1.screenmodel delete();

    if ( isdefined( var_1._id_0334 ) )
        var_2 = scripts\engine\utility::_id_817E( var_1._id_0334, "targetname" );
    else
        var_2 = var_1;

    var_3 = spawn( "script_model", var_2.origin );
    var_4 = level.puzzlestates[var_0];

    switch ( int( var_4 ) )
    {
        case 1:
            var_3 setmodel( "cp_final_floppydisk_01" );
            break;
        case 2:
            var_3 setmodel( "cp_final_floppydisk_02" );
            break;
        case 3:
            var_3 setmodel( "cp_final_floppydisk_03" );
            break;
        case 4:
            var_3 setmodel( "cp_final_floppydisk_04" );
            break;
        case 5:
            var_3 setmodel( "cp_final_floppydisk_05" );
            break;
        case 6:
            var_3 setmodel( "cp_final_floppydisk_06" );
            break;
        case 7:
            var_3 setmodel( "cp_final_floppydisk_07" );
            break;
        case 8:
            var_3 setmodel( "cp_final_floppydisk_08" );
            break;
        case 9:
            var_3 setmodel( "cp_final_floppydisk_09" );
            break;
        case 10:
            var_3 setmodel( "cp_final_floppydisk_10" );
            break;
        case 11:
            var_3 setmodel( "cp_final_floppydisk_11" );
            break;
        case 12:
            var_3 setmodel( "cp_final_floppydisk_12" );
            break;
    }

    if ( isdefined( var_2.angles ) )
        var_3.angles = var_2.angles;

    var_1._id_92B8 = var_0;
    var_1._id_01F1 = var_3;
    var_1._id_10E19 = level.puzzlestates[var_0];

    if ( isdefined( var_1._id_86A2 ) )
    {
        var_3.hasbeenthrown = undefined;
        var_1 notify( "new_model_created" );
        var_1.entanglemodel = var_3;
        var_3.parent_struct = var_1;
        thread scripts\cp\crafted_entangler::outlineitemforplayers( var_1, var_1._id_01F1 );
        thread scripts\cp\crafted_entangler::watchforentanglerdamage( var_1, var_1._id_01F1 );
        var_1._id_1088C = ::spawnpuzzlepiece;
        var_1.entanglemovetofunc = ::entanglemovetocheckforcollision;
        var_3.collisionfunc = ::diskcustomcollisionfunc;
        var_1 thread disableaftermovethroughvent( var_1 );
    }
}

disableaftermovethroughvent( var_0 )
{
    var_0 endon( "new_model_created" );
    level waittill( "vent_grabbed_puzzle_piece", var_1 );
    level.undergratepuzzlepiece = undefined;
    var_2 = level._id_1115C["targetname"]["interaction"];
    var_3 = level._id_1115C["script_noteworthy"]["puzzle_pieces"];
    var_2 = scripts\engine\utility::array_remove( var_2, var_0 );
    var_3 = scripts\engine\utility::array_remove( var_3, var_0 );
    level._id_1115C["targetname"]["interaction"] = var_2;
    level._id_1115C["script_noteworthy"]["puzzle_pieces"] = var_3;
    var_4 = level._effect["air_vent_out"];
    var_5 = scripts\engine\utility::_id_8180( "puzzle_piece_landing", "targetname" );
    var_6 = scripts\engine\utility::_id_DC6B( var_5 );
    playfx( var_4, var_6.origin, anglestoforward( var_6.angles ), anglestoup( var_6.angles ) );
    var_1 notify( "end_entangler_funcs" );
    var_1 setcandamage( 0 );
    var_1 dontinterpolate();
    var_1.origin = var_6.origin;
    var_1.angles = var_6.angles;
    var_7 = scripts\engine\utility::_id_817E( var_6._id_0334, "targetname" );
    var_1 moveto( var_7.origin, 0.5, 0.1, 0 );
    var_1 rotateto( var_7.angles, 0.5 );
    var_7._id_01F1 = var_1;
    var_7.script_noteworthy = "puzzle_pieces";
    var_7._id_0336 = "interaction";
    var_7._id_E1B9 = 0;
    var_7._id_D776 = 1;
    var_7._id_EE79 = "default";
    var_7._id_10E19 = var_0._id_10E19;
    level._id_1115C["targetname"]["interaction"][level._id_1115C["targetname"]["interaction"].size] = var_7;
    level._id_1115C["script_noteworthy"]["puzzle_pieces"][level._id_1115C["script_noteworthy"]["puzzle_pieces"].size] = var_7;

    if ( scripts\engine\utility::_id_6E25( "neil_head_placed" ) )
        _id_0A59::_id_175C( var_7 );

    wait 0.5;
    level notify( "end_vent_fx" );
}

diskcustomcollisionfunc( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    var_3 = scripts\engine\utility::_id_8180( "air_suck_loc", "targetname" );

    for ( var_4 = 0; var_4 <= 100; var_4++ )
    {
        var_5 = var_0.origin;
        var_6 = var_0.angles;
        var_0 scripts\engine\utility::_id_13736( 0.1, "collision" );
        level notify( "entangler_item_collision", var_0.origin );

        if ( distance( var_5, var_0.origin ) < 1 && var_6 == var_0.angles )
            break;
    }

    if ( var_4 >= 100 )
        var_0.forcedrespawn = 1;

    var_0.hasbeenthrown = 1;
    var_0._id_AAA8 = undefined;

    foreach ( var_8 in var_3 )
    {
        if ( distance( var_8.origin, var_0.origin ) <= 96 )
        {
            var_0 notify( "released", undefined, 1, 36 );
            return;
        }
    }

    var_0 notify( "released", 1 );
}

entanglemovetocheckforcollision( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\engine\utility::_id_227F( level.players, [ var_2 ] );
    var_5 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 0, 1 );
    var_6 = scripts\engine\trace::_id_3A09( ( var_0.origin[0], var_0.origin[1], var_3.origin[2] ), var_3.origin, 16, 32, undefined, var_4, var_5, 24 );
    var_7 = var_6["hittype"];

    if ( isdefined( var_7 ) && var_7 != "hittype_none" )
        return 0;
    else
        return 1;
}

getvalidpuzzlestates()
{
    var_0 = randomint( level.puzzle_combinations.size );
    var_1 = strtok( level.puzzle_combinations[var_0], "," );
    level.correctneilpuzzleanswer = var_1;
    return scripts\engine\utility::_id_22A8( var_1 );
}

spawnn31lhead()
{
    var_0 = scripts\engine\utility::_id_8180( "neil_head", "script_noteworthy" );
    var_0 = scripts\engine\utility::_id_22A8( var_0 );
    var_1 = var_0[0];

    if ( isdefined( var_1._id_0334 ) )
        var_2 = scripts\engine\utility::_id_817E( var_1._id_0334, "targetname" );
    else
        var_2 = var_1;

    var_3 = spawnmodelatstruct( var_2, "final_kevin_head_blank" );
    var_1._id_8C98 = var_3;
    var_1.nextneilvotime = 0;
    level._id_BEC5 = var_3;

    foreach ( var_5 in var_0 )
    {
        if ( var_5 == var_1 )
            continue;

        _id_0A59::_id_E019( var_5 );
    }
}

consolehintfunc( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "neil_head_placed" ) && !scripts\engine\utility::_id_6E25( "fuse_puzzle_completed" ) )
    {
        var_2 = gettime();

        if ( var_2 >= var_0.nextneilvotime )
        {
            if ( playneilvofromconsoleorhead( "final_n31l_misc_reaction", 1 ) )
                var_0.nextneilvotime = var_0.nextneilvotime + 10000;
        }
    }

    return "";
}

headhintfunc( var_0, var_1 )
{
    var_2 = gettime();

    if ( var_2 >= var_0.nextneilvotime )
    {
        if ( playneilvofromconsoleorhead( "final_n31l_found" ) )
            var_0.nextneilvotime = var_2 + 10000;
    }

    return &"CP_FINAL_PICKUP_ITEM";
}

puzzlepiecehintfunc( var_0, var_1 )
{
    if ( !isdefined( var_1.haspuzzlepiece ) || isdefined( var_1.haspuzzlepiece ) && var_1.haspuzzlepiece != var_0._id_10E19 )
    {
        if ( isdefined( level.phantomdisk ) && var_0._id_10E19 == level.phantomdisk )
            return &"CP_FINAL_PICKUP_ITEM";
        else
            return "";
    }
    else
        return "";
}

puzzlepieceusefunc( var_0, var_1 )
{
    if ( !isdefined( var_1.haspuzzlepiece ) || isdefined( var_1.haspuzzlepiece ) && var_1.haspuzzlepiece != var_0._id_10E19 )
    {
        if ( isdefined( var_0._id_0334 ) )
            var_2 = scripts\engine\utility::_id_817E( var_0._id_0334, "targetname" );
        else
            var_2 = var_0;

        var_1.haspuzzlepiece = var_0._id_10E19;
        var_1 playlocalsound( "zmb_item_pickup" );
        playfx( level._effect["generic_pickup"], var_2.origin );
        var_1 setclientomnvar( "zm_hud_inventory_1", int( var_0._id_10E19 ) );
    }
}

consoleusefunc( var_0, var_1 )
{
    if ( !scripts\engine\utility::_id_6E25( "neil_head_placed" ) )
    {
        scripts\engine\utility::_id_6E3E( "neil_head_placed" );
        _id_0A77::playsoundatpos_safe( var_0.origin, "zmb_neil_head_placement" );

        if ( level.players.size >= 4 )
        {
            if ( scripts\engine\utility::_id_4347() )
                level thread foundpowervo( var_1 );
            else if ( scripts\engine\utility::_id_4347() )
                var_1 thread _id_0A6A::_id_12885( "quest_n31l_head_place", "zmb_comment_vo" );
            else
                playneilvofromconsoleorhead( "final_n31l_back_to_console", 1 );
        }
        else if ( scripts\engine\utility::_id_4347() )
            var_1 thread _id_0A6A::_id_12885( "quest_n31l_head_place", "zmb_comment_vo" );
        else
            playneilvofromconsoleorhead( "final_n31l_back_to_console", 1 );
    }
}

foundpowervo( var_0 )
{
    if ( isdefined( var_0._id_134FD ) )
    {
        switch ( var_0._id_134FD )
        {
            case "p1_":
                if ( !isdefined( level._id_4481["conv_poweron_sally_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_poweron_sally_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_poweron_sally_1_1"] = 1;
                }

                break;
            case "p2_":
                if ( !isdefined( level._id_4481["conv_poweron_pdex_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_poweron_pdex_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_poweron_pdex_1_1"] = 1;
                }

                break;
            case "p3_":
                if ( !isdefined( level._id_4481["conv_poweron_andre_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_poweron_andre_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_poweron_andre_1_1"] = 1;
                }

                break;
            case "p4_":
                if ( !isdefined( level._id_4481["conv_poweron_aj_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_poweron_aj_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_poweron_aj_1_1"] = 1;
                }

                break;
        }
    }
}

validatepuzzleslot( var_0, var_1 )
{
    for ( var_2 = 0; var_2 < level.correctneilpuzzleanswer.size; var_2++ )
    {
        if ( level.correctneilpuzzleanswer[var_2] != level.insertedpieces[var_2] )
            return 0;
    }

    return 1;
}

headusefunc( var_0, var_1 )
{
    scripts\engine\utility::_id_6E3E( "neil_head_found" );
    var_1 thread _id_0A6A::_id_12885( "quest_n31l_head_find", "zmb_comment_vo" );
    scripts\cp\maps\cp_final\cp_final_interactions::generic_pickup_gesture_and_fx( var_1, var_0._id_8C98.origin );
    _id_0A59::_id_E019( var_0 );
}

fusepuzzlehintfunc( var_0, var_1 )
{
    if ( isdefined( var_1.haspuzzlepiece ) )
    {
        var_1._id_9A3F _meth_852E( int( var_0.name ) );
        return &"CP_FINAL_INSERT_DISK";
    }
    else
    {
        var_1 thread _id_0A6A::_id_12885( "missing_item_misc", "zmb_comment_vo" );
        return "";
    }
}

fusepuzzleusefunc( var_0, var_1 )
{
    if ( isdefined( var_1.haspuzzlepiece ) )
    {
        _id_0A77::_id_F55F( 11 );
        var_1 setclientomnvar( "zm_hud_inventory_1", 0 );
        var_2 = var_1.haspuzzlepiece;
        var_3 = "disk_slot_" + var_0.name;

        switch ( int( var_2 ) )
        {
            case 1:
                level.neil_console setscriptablepartstate( var_3, "disk01" );
                break;
            case 2:
                level.neil_console setscriptablepartstate( var_3, "disk02" );
                break;
            case 3:
                level.neil_console setscriptablepartstate( var_3, "disk03" );
                break;
            case 4:
                level.neil_console setscriptablepartstate( var_3, "disk04" );
                break;
            case 5:
                level.neil_console setscriptablepartstate( var_3, "disk05" );
                break;
            case 6:
                level.neil_console setscriptablepartstate( var_3, "disk06" );
                break;
            case 7:
                level.neil_console setscriptablepartstate( var_3, "disk07" );
                break;
            case 8:
                level.neil_console setscriptablepartstate( var_3, "disk08" );
                break;
            case 9:
                level.neil_console setscriptablepartstate( var_3, "disk09" );
                break;
            case 10:
                level.neil_console setscriptablepartstate( var_3, "disk10" );
                break;
            case 11:
                level.neil_console setscriptablepartstate( var_3, "disk11" );
                break;
            case 12:
                level.neil_console setscriptablepartstate( var_3, "disk12" );
                break;
        }

        _id_0A77::playsoundatpos_safe( var_0.origin, "zmb_floppy_disc_insert" );
        var_4 = int( var_0.name ) - 1;
        removeinvalidpuzzlepieces( var_2 );
        var_1.haspuzzlepiece = undefined;
        level.insertedpieces[var_4] = var_2;
        var_1 setclientomnvar( "zm_special_item", 0 );
        _id_0A59::_id_E019( var_0 );
        setomnvar( "zm_floppy_count", level.insertedpieces.size );

        if ( level.insertedpieces.size == 4 )
        {
            if ( !validatepuzzleslot( var_0, var_1 ) )
            {
                playloopsound( var_0.origin, "mpq_fail_buzzer" );
                wait 1;
                setomnvar( "zm_floppy_count", 0 );
                _id_0A77::unset_zm_quest_icon( 11 );
                level.insertedpieces = [];
                activateinteractionsbynoteworthy( "fuse_puzzle" );
                activateinteractionsbynoteworthy( "puzzle_pieces" );
                spawnpuzzlepieces();
                level.neil_console setscriptablepartstate( "disk_slot_1", "neutral" );
                level.neil_console setscriptablepartstate( "disk_slot_2", "neutral" );
                level.neil_console setscriptablepartstate( "disk_slot_3", "neutral" );
                level.neil_console setscriptablepartstate( "disk_slot_4", "neutral" );
                level thread trigger_goon_event_single( 5 );
                playneilvo( "final_n31l_puzzle_fail" );
            }
            else
            {
                wait 1;
                _id_0A77::playsoundatpos_safe( var_0.origin, "zmb_floppy_quest_complete" );
                deactivateinteractionsbynoteworthy( "puzzle_pieces" );
                scripts\engine\utility::_id_6E3E( "fuse_puzzle_completed" );
                var_1 thread _id_0A6A::_id_12885( "quest_n31l_part_" + level.insertedpieces.size, "zmb_comment_vo" );
                playneilvofromconsoleorhead( "final_n31l_return_part_4", 1 );
            }
        }
        else
        {
            var_1 thread _id_0A6A::_id_12885( "quest_n31l_part_" + level.insertedpieces.size, "zmb_comment_vo" );
            var_5 = gettime();

            if ( var_5 >= level.neil_console.nextneilvotime )
            {
                if ( playneilvofromconsoleorhead( scripts\engine\utility::_id_DC6B( [ "final_n31l_return_part_1", "final_n31l_return_part_2", "final_n31l_return_part_3" ] ), 1 ) )
                    level.neil_console.nextneilvotime = var_5 + 15000;
            }
        }
    }
}

removeinvalidpuzzlepieces( var_0 )
{
    var_1 = scripts\engine\utility::_id_8180( "puzzle_pieces", "script_noteworthy" );

    foreach ( var_3 in var_1 )
    {
        if ( var_0 == var_3._id_10E19 )
            _id_0A59::_id_E019( var_3 );
    }

    foreach ( var_6 in level.players )
    {
        if ( isdefined( var_6.haspuzzlepiece ) && var_6.haspuzzlepiece == var_0 )
        {
            var_6 setclientomnvar( "zm_hud_inventory_1", 0 );
            var_6.haspuzzlepiece = undefined;
        }
    }
}

blank( var_0, var_1 )
{

}

retrieveneilshead()
{
    scripts\engine\utility::_id_6E4C( "neil_head_found" );
}

completeretrieveneilshead()
{
    _id_0A77::_id_F55F( 6 );
    activateinteractionsbynoteworthy( "neil_console" );
    var_0 = scripts\engine\utility::_id_8180( "neil_head", "script_noteworthy" );
    deactivateinteractionsbynoteworthy( "neil_head" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2._id_8C98 ) )
            var_2._id_8C98 delete();
    }
}

debugretrieveneilshead()
{
    scripts\engine\utility::_id_6E3E( "neil_head_found" );
}

placeneilshead()
{
    scripts\engine\utility::_id_6E4C( "neil_head_placed" );
}

completeplaceneilshead()
{
    turnonfacilitypower();
    scripts\engine\utility::_id_6E3E( "canFiresale" );
    activateinteractionsbynoteworthy( "fuse_puzzle" );
    activateinteractionsbynoteworthy( "puzzle_pieces" );
    activateinteractionsbynoteworthy( "portal_gun_button" );
    var_0 = scripts\engine\utility::_id_817E( "console_neil_head", "targetname" );
    var_1 = spawn( "script_model", var_0.origin );
    var_1.angles = var_0.angles;
    var_1 setmodel( "final_kevin_head_dynamic" );
    var_1._id_C3A2 = var_0.origin;
    var_1._id_C3A0 = var_0.angles;
    var_1.customlaunchfunc = ::neilheadlaunchfunc;
    var_1.collisionfunc = ::checkneilheadcollision;
    var_0._id_8C98 = var_1;
    var_1.parent_struct = var_0;
    level._id_BEC5 = var_1;
    scripts\cp\maps\cp_final\cp_final::enablepa( "pa_facility" );
    wait 0.5;
    setneilstate( "happy" );

    foreach ( var_3 in level.players )
        var_3 _id_0A5E::_id_D9AD( "mt_dlc4_neil_upgrade" );

    thread playneilnag( [ "final_n31l_nag_missing_pieces", "final_n31l_request_pieces" ], "fuse_puzzle_completed" );
}

debugplaceneilshead()
{
    scripts\engine\utility::_id_6E3E( "neil_head_placed" );
}

playneilnag( var_0, var_1 )
{
    level endon( "game_ended" );
    level notify( "playNeilNag" );
    level endon( "playNeilNag" );

    while ( isdefined( var_1 ) && !scripts\engine\utility::_id_6E25( var_1 ) )
    {
        wait( randomintrange( 30, 60 ) );
        var_2 = scripts\engine\utility::_id_DC6B( var_0 );
        var_3 = gettime();

        if ( var_3 >= level.neilvotime )
        {
            foreach ( var_5 in level.players )
            {
                if ( isdefined( var_5.currentlocation ) && var_5.currentlocation == "facility" )
                    var_5 _id_0A77::playlocalsound_safe( var_2 );
            }

            var_7 = lookupsoundlength( var_2 );
            setnextneilvotime( var_7 );
        }
    }
}

playneilvo( var_0, var_1 )
{
    var_2 = gettime();

    if ( var_2 >= level.neilvotime )
    {
        foreach ( var_4 in level.players )
        {
            if ( isdefined( var_4.currentlocation ) && var_4.currentlocation == "facility" )
                var_4 _id_0A77::playlocalsound_safe( var_0 );
        }

        var_6 = lookupsoundlength( var_0 );

        if ( isdefined( var_1 ) )
        {
            var_7 = getsoundaliasfromvoprefix( var_1, 1 );
            thread playplayernameaftertime( var_6, var_7 );
            var_6 = var_6 + lookupsoundlength( var_7 );
        }

        setnextneilvotime( var_6 );
        return 1;
    }
    else
        return 0;
}

getsoundaliasfromvoprefix( var_0, var_1 )
{
    switch ( var_0 )
    {
        case "p1_":
            if ( scripts\engine\utility::_id_9CEE( var_1 ) )
                return "final_n31l_name_sally_pa";
            else
                return "final_n31l_name_sally";
        case "p2_":
            if ( scripts\engine\utility::_id_9CEE( var_1 ) )
                return "final_n31l_name_poindexter_pa";
            else
                return "final_n31l_name_poindexter";
        case "p3_":
            if ( scripts\engine\utility::_id_9CEE( var_1 ) )
                return "final_n31l_name_andre_pa";
            else
                return "final_n31l_name_andre";
        case "p4_":
            if ( scripts\engine\utility::_id_9CEE( var_1 ) )
            {
                return "final_n31l_name_aj_pa";
                return;
            }

            return "final_n31l_name_aj";
            return;
    }
}

playplayernameaftertime( var_0, var_1 )
{
    level endon( "game_ended" );
    wait( var_0 / 1000 );

    foreach ( var_3 in level.players )
    {
        if ( isdefined( var_3.currentlocation ) && var_3.currentlocation == "facility" )
            var_3 _id_0A77::playlocalsound_safe( var_1 );
    }
}

playneilvofromconsoleorhead( var_0, var_1, var_2 )
{
    var_3 = gettime();

    if ( var_3 >= level.neilvotime )
    {
        if ( scripts\engine\utility::_id_9CEE( var_1 ) )
        {
            if ( isdefined( level.neil_console ) )
            {
                level.neil_console _meth_83AD();
                level.neil_console playsound( var_0 );
                var_4 = lookupsoundlength( var_0 );

                if ( isdefined( var_2 ) )
                {
                    var_5 = getsoundaliasfromvoprefix( var_2 );
                    thread playplayernameaftertime( var_4, var_5 );
                    var_4 = var_4 + lookupsoundlength( var_5 );
                }

                setnextneilvotime( var_4 );
                return 1;
            }
            else
                return 0;
        }
        else if ( isdefined( level._id_BEC5 ) )
        {
            level._id_BEC5 _meth_83AD();
            level._id_BEC5 playsound( var_0 );
            var_4 = lookupsoundlength( var_0 );

            if ( isdefined( var_2 ) )
            {
                var_5 = getsoundaliasfromvoprefix( var_2 );
                thread playplayernameaftertime( var_4, var_5 );
                var_4 = var_4 + lookupsoundlength( var_5 );
            }

            setnextneilvotime( var_4 );
            return 1;
        }
        else
            return 0;
    }
    else
        return 0;
}

setnextneilvotime( var_0 )
{
    level.neilvotime = gettime() + var_0;
}

turnonfacilitypower()
{
    level notify( "power_on" );
    scripts\engine\utility::_id_6E3E( "restorepower_step1" );
    scripts\engine\utility::_id_6E3E( "power_on" );
    level._id_D746 = 1;
    var_0 = getentarray( "spawn_volume", "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2._id_28AB ) )
            var_3 = var_2._id_28AB;
        else
            continue;

        level notify( var_3 + " power_on" );

        if ( scripts\engine\utility::_id_6E34( var_3 + " power_on" ) )
            scripts\engine\utility::_id_6E3E( var_3 + " power_on" );
    }
}

initpuzzledoors()
{
    var_0 = scripts\engine\utility::_id_8180( "toggle_puzzle_doors", "targetname" );

    foreach ( var_2 in var_0 )
    {
        var_3 = spawn( "script_model", var_2.origin );
        var_3.angles = var_2.angles;
        var_3 setmodel( "building_pod_wall_panel_01_thin" );
        var_2.doormodel = var_3;
    }
}

waitforsecuritydoorsdestroyed()
{
    scripts\engine\utility::_id_6E4C( "security_doors_deactivated" );
}

securitydoorsdestroyed()
{
    level notify( "kill_energy_doors" );

    foreach ( var_1 in level.all_quest_doors )
    {
        playloopsound( var_1.origin, "zmb_forcefield_destroyed" );
        var_1 delete();
    }

    var_3 = getent( "med_bay_door_clip", "targetname" );
    var_3 notsolid();
    activateinteractionsbynoteworthy( "entangler_button" );
}

openpuzzledoors()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_8180( "toggle_puzzle_doors", "targetname" );

    foreach ( var_2 in var_0 )
        var_2.doormodel delete();

    scripts\engine\utility::_id_6E3E( "toggle_puzzle_doors_opened" );
}

debugsecuritydoorsdestroyed()
{
    scripts\engine\utility::_id_6E3E( "security_doors_deactivated" );
}

fusepuzzle()
{
    scripts\engine\utility::_id_6E4C( "fuse_puzzle_completed" );
}

completefusepuzzle()
{
    foreach ( var_1 in level.players )
        var_1 _id_0A77::stoplocalsound_safe( "final_n31l_nag_missing_pieces" );

    scripts\engine\utility::_id_6E3E( "fuse_puzzle_completed" );
    thread neildoevilstuff();
    _id_0A77::_id_F55F( 10 );
    setneilstate( "straight" );

    foreach ( var_1 in level.players )
        var_1 _id_0D2A::_id_12D7C( "FRIENDS_FOREVER", 1 );

    deactivateinteractionsbynoteworthy( "fuse_puzzle" );
    deactivateinteractionsbynoteworthy( "puzzle_pieces" );
    var_5 = scripts\engine\utility::_id_8180( "puzzle_pieces", "script_noteworthy" );

    foreach ( var_7 in var_5 )
    {
        if ( isdefined( var_7._id_01F1 ) )
            var_7._id_01F1 delete();
    }

    foreach ( var_12, var_10 in level.correctneilpuzzleanswer )
    {
        var_11 = "disk_slot_" + ( var_12 + 1 );

        switch ( int( var_10 ) )
        {
            case 1:
                level.neil_console setscriptablepartstate( var_11, "disk01" );
                break;
            case 2:
                level.neil_console setscriptablepartstate( var_11, "disk02" );
                break;
            case 3:
                level.neil_console setscriptablepartstate( var_11, "disk03" );
                break;
            case 4:
                level.neil_console setscriptablepartstate( var_11, "disk04" );
                break;
            case 5:
                level.neil_console setscriptablepartstate( var_11, "disk05" );
                break;
            case 6:
                level.neil_console setscriptablepartstate( var_11, "disk06" );
                break;
            case 7:
                level.neil_console setscriptablepartstate( var_11, "disk07" );
                break;
            case 8:
                level.neil_console setscriptablepartstate( var_11, "disk08" );
                break;
            case 9:
                level.neil_console setscriptablepartstate( var_11, "disk09" );
                break;
            case 10:
                level.neil_console setscriptablepartstate( var_11, "disk10" );
                break;
            case 11:
                level.neil_console setscriptablepartstate( var_11, "disk11" );
                break;
            case 12:
                level.neil_console setscriptablepartstate( var_11, "disk12" );
                break;
        }

        level.insertedpieces[level.insertedpieces.size] = var_10;
    }
}

debugfusepuzzle()
{
    scripts\engine\utility::_id_6E3E( "fuse_puzzle_completed" );
}

initbridgepieces()
{
    var_0 = scripts\engine\utility::_id_8180( "pap_bridge", "script_noteworthy" );

    foreach ( var_2 in var_0 )
    {
        var_2.name = "pap_quest";
        var_3 = spawn( "script_model", var_2.origin );
        var_3 setmodel( "debris_exterior_damaged_metal_panels_08_scl50" );
        var_3.angles = var_2.angles;
        var_3._id_0336 = "pap_bridge_model";
    }

    scripts\engine\utility::_id_6E39( "bridge_pieces_collected" );
}

spawnastronauts()
{
    level.astronautsshot = 0;
    var_0 = scripts\engine\utility::_id_8180( "hidden_song_nick", "script_noteworthy" );
    var_0 = sortbydistance( var_0, ( 5715, -4040, 131 ) );
    level.astronaut_structs = [];

    foreach ( var_4, var_2 in var_0 )
    {
        if ( var_4 == 0 )
            continue;

        level.astronaut_structs[level.astronaut_structs.size] = var_2;
        var_3 = spawn( "script_model", var_2.origin );
        var_3 setmodel( "zmb_arcade_toy_astronaut_white" );
        var_3.angles = var_2.angles;
        var_3.script_noteworthy = "astronaut_model";

        if ( isdefined( var_2._id_0336 ) )
            var_3._id_0336 = var_2._id_0336 + "_model";

        var_3 thread astronautwatchfordamage();
    }

    var_5 = getent( "astronaut_aide_trigger", "script_noteworthy" );

    if ( isdefined( var_5 ) )
        var_5 thread astronautaidetriggerwatch( var_5 );
}

astronautwatchfordamage()
{
    level endon( "game_ended" );
    self endon( "released" );
    self.health = 9999999;
    self.maxhealth = 9999999;
    self setcandamage( 1 );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_0, var_0, var_0, var_0, var_5 );
        tryreleaseastronaut( var_1, var_5 );
    }
}

astronautaidetriggerwatch( var_0 )
{
    var_0 = getent( self._id_0334 + "_model", "targetname" );
    var_0 endon( "released" );

    for (;;)
    {
        self waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_1, var_1, var_1, var_1, var_6 );

        if ( isdefined( var_0 ) )
        {
            thread _id_0A77::debugprintline( "release" );
            var_0 tryreleaseastronaut( var_2, var_6 );
        }
    }
}

tryreleaseastronaut( var_0, var_1 )
{
    if ( isplayer( var_0 ) )
    {
        wait 0.2;
        level.astronautsshot++;

        if ( isdefined( var_0 ) )
            thread generic_interaction_no_gesture( var_0, self );

        self.released = 1;
        self hide();

        if ( level.astronautsshot >= level.astronaut_structs.size )
        {
            foreach ( var_3 in level.players )
            {
                var_3 thread _id_0A6A::_id_12885( "song_quest_success", "final_comment_vo" );
                var_3 _id_0D2A::_id_12D7C( "BROKEN_RECORD", 1 );
            }

            if ( isdefined( var_0 ) )
                built_bridge_feedback( var_0 );

            level notify( "add_hidden_song_to_playlist" );
            scripts\cp\maps\cp_final\cp_final::enablepas();
            level thread _id_CD40( ( 1785, -2077, 211 ), "mus_pa_final_hidden_track" );
            level notify( "song_ee_achievement_given" );
        }

        self notify( "released" );
    }
}

_id_CD40( var_0, var_1, var_2 )
{
    if ( !isdefined( var_2 ) )
        level endon( "game_ended" );

    if ( var_1 == "mus_pa_final_hidden_track" )
        level endon( "add_hidden_song_to_playlist" );

    if ( soundexists( var_1 ) )
    {
        wait 2.5;

        if ( var_1 == "mus_pa_final_hidden_track" )
        {
            foreach ( var_4 in level.players )
            {
                var_4 thread _id_0A6A::_id_12885( "song_quest_start", "final_comment_vo" );

                if ( scripts\engine\utility::_id_9CEE( level.onlinegame ) )
                {
                    var_4 setrankedplayerdata( "cp", "hasSongsUnlocked", "any_song", 1 );

                    if ( var_1 == "mus_pa_final_hidden_track" )
                        var_4 setrankedplayerdata( "cp", "hasSongsUnlocked", "song_6", 1 );
                }
            }
        }

        var_6 = undefined;

        if ( isdefined( var_6 ) )
        {
            level thread _id_0A6A::_id_12885( var_6, "zmb_dj_vo", "high", 60, 1, 0, 1 );
            var_7 = lookupsoundlength( var_6 ) / 1000;
            wait( var_7 );
        }

        scripts\engine\utility::_id_CE2B( "zmb_jukebox_on", var_0 );
        var_8 = spawn( "script_origin", var_0 );
        var_9 = "ee";
        var_10 = 1;

        foreach ( var_4 in level.players )
            var_4 _id_0A63::_id_831D( 2000, 1 );

        var_8 playloopsound( var_1 );
        var_8 thread _id_0D4F::_id_5FB6( var_8 );
        var_13 = lookupsoundlength( var_1 ) / 1000;

        if ( !isdefined( var_2 ) )
            level scripts\engine\utility::_id_13736( var_13, "skip_song" );
        else
        {
            level waittill( "game_ended" );
            var_8 stoploopsound();
            var_8 delete();
            return;
        }

        var_8 stoploopsound();
        var_8 delete();
    }
    else
        wait 2;

    scripts\cp\maps\cp_final\cp_final::disablepas();
    scripts\cp\maps\cp_final\cp_final::enablepa( "pa_facility" );
    level thread _id_0D4F::_id_A4BE( var_0, 1 );
}

generic_interaction_no_gesture( var_0, var_1 )
{
    var_0 endon( "disconnect" );

    if ( _func_2A6( var_1 ) || !_func_2A5( var_1 ) )
        var_1 = var_1.origin;

    playfx( level._effect["generic_pickup"], var_1 );
    var_0 playlocalsound( "part_pickup" );
}

trigger_goon_event( var_0 )
{
    foreach ( var_2 in level.players )
    {
        if ( distancesquared( var_2.origin, var_0 ) > 6000 )
            continue;

        thread trigger_goon_event_single( var_0 );
    }
}

trigger_goon_event_single( var_0, var_1 )
{
    level endon( "game_ended" );

    if ( !isdefined( var_1 ) )
        var_1 = 3;

    var_2 = 0;

    while ( var_2 < var_1 )
    {
        var_3 = scripts\cp\zombies\cp_final_spawning::_id_7C2E();
        var_4 = var_3 scripts\cp\zombies\cp_final_spawning::spawn_brute_wave_enemy( "alien_goon" );

        if ( isdefined( var_4 ) )
            var_2++;

        wait 0.3;
    }
}

pickupbridgepiece( var_0, var_1 )
{
    var_0 _id_0A59::_id_E019( var_0 );
    var_2 = getentarray( "pap_bridge_model", "targetname" );
    var_3 = scripts\engine\utility::_id_782F( var_0.origin, var_2, undefined, 2 );
    scripts\cp\maps\cp_final\cp_final_interactions::generic_pickup_gesture_and_fx( var_1, var_3[0].origin );
    incrementbridgequest( var_3, var_1 );
    trigger_goon_event( var_0.origin );
}

incrementbridgequest( var_0, var_1 )
{
    if ( !isdefined( level.bridgepiecesfound ) )
        level.bridgepiecesfound = [];

    if ( !isdefined( var_0 ) )
        var_2 = "debugPiece";
    else
    {
        var_2 = var_0[0]._id_01F1;
        var_0[0] hide();
        var_0[0] hide();
        var_0[0] hide();
    }

    level.bridgepiecesfound = scripts\engine\utility::_id_1756( level.bridgepiecesfound, var_2 );
    var_3 = level.bridgepiecesfound.size;
    _id_0A77::_id_F55F( 6 + var_3 );
    setomnvar( "zm_scrap_count", var_3 );

    if ( isdefined( var_1 ) && isplayer( var_1 ) )
    {
        switch ( int( var_3 ) )
        {
            case 1:
                var_1 thread _id_0A6A::_id_12885( "quest_pap_bridge_piece_1", "zmb_comment_vo" );
                break;
            case 2:
                var_1 thread _id_0A6A::_id_12885( "quest_pap_bridge_piece_2", "zmb_comment_vo" );
                break;
            case 3:
                var_1 thread _id_0A6A::_id_12885( "quest_pap_bridge_piece_3", "zmb_comment_vo" );
                break;
        }
    }

    if ( var_3 >= 3 )
        scripts\engine\utility::_id_6E3E( "bridge_pieces_collected" );
}

showbridgepieces()
{
    scripts\engine\utility::_id_22D2( scripts\engine\utility::_id_8180( "pap_bridge", "script_noteworthy" ), ::draw_debug_sphere );
}

draw_debug_sphere()
{

}

givehelmetdebug()
{
    scripts\engine\utility::_id_6E3E( "has_film_reel" );
    scripts\engine\utility::_id_6E3E( "set_movie_spaceland" );
    scripts\engine\utility::_id_6E3E( "pulled_out_helmet" );
    scripts\engine\utility::_id_6E3E( "obtained_brute_helmet" );
    _id_0A77::_id_F55F( 1 );
    var_0 = spawn( "script_model", ( 0, 0, 0 ) );
    var_0 setmodel( "cp_final_brute_mascot_mask" );
    var_0._id_EE79 = "heavy_helmet";
    var_0 hide();
    level.helmet_on_brute = var_0;
}

movieswapdebug()
{
    scripts\engine\utility::_id_6E3E( "has_film_reel" );
    scripts\engine\utility::_id_6E3E( "set_movie_spaceland" );
}

constructbridgeinit()
{
    scripts\engine\utility::_id_6E39( "bridge_constructed" );
    level.bridgepiecesplaced = 0;
    scripts\engine\utility::_id_817E( "construct_bridge", "script_noteworthy" ).name = "construct_bridge";
}

constructbridgehint( var_0, var_1 )
{
    if ( !isdefined( level.bridgepiecesfound ) )
        level.bridgepiecesfound = [];

    if ( level.bridgepiecesfound.size >= 3 )
        return &"CP_FINAL_INTERACTIONS_FINISH_BRIDGE";
    else if ( level.bridgepiecesfound.size > level.bridgepiecesplaced )
        return &"CP_FINAL_INTERACTIONS_ADD_BRIDGE_PIECE";
    else
    {
        var_1 thread _id_0A6A::_id_12885( "missing_item_misc", "zmb_comment_vo" );
        return &"CP_FINAL_INTERACTIONS_NEED_PIECES";
    }
}

bridgeconstructionfeedback( var_0, var_1 )
{
    var_2 = scripts\engine\utility::_id_817E( "construction_point_" + var_0, "targetname" );
    playfx( level._effect["bridge_place"], var_2.origin, anglestoforward( var_2.angles ) );
    wait 1.2;
    var_3 = spawn( "script_model", var_2.origin );
    var_3 setmodel( "debris_exterior_damaged_metal_panels_08_scl50" );
    var_3.angles = var_2.angles;
    var_4 = ( 60, 60, 0 );
    var_5 = getent( "bridge_blocker", "targetname" );
    var_5.origin = var_5.origin + var_4;
    var_1.origin = var_1.origin + var_4 + ( 8, 4, 0 );
    playloopsound( var_1.origin, "zmb_bridge_build_01" );
    var_5 connectpaths();
    level.bridgepiecesplaced++;
}

constructbridgeuse( var_0, var_1 )
{
    var_1 endon( "disconnect" );
    var_2 = level.bridgepiecesfound.size - level.bridgepiecesplaced;

    if ( var_2 > 0 )
    {
        scripts\cp\maps\cp_final\cp_final_interactions::generic_place_gesture_and_fx( var_1, var_0.origin + ( 30, 45, 0 ) );

        for ( var_3 = level.bridgepiecesplaced; var_3 < level.bridgepiecesplaced + var_2; var_3++ )
            thread bridgeconstructionfeedback( var_3 + 1, var_0 );

        wait 1.205;

        if ( scripts\engine\utility::_id_6E25( "bridge_pieces_collected" ) )
        {
            openbridge();
            built_bridge_feedback( var_1 );
            _id_0A59::_id_E019( var_0 );
            var_1 thread _id_0A6A::_id_12885( "quest_pap_bridge_build", "zmb_comment_vo" );
            wait( lookupsoundlength( var_1._id_134FD + "quest_pap_bridge_build" ) );
            var_1 thread _id_0A6A::_id_12885( "pap_quest_success", "zmb_comment_vo" );
        }
    }
}

openbridge()
{
    var_0 = getent( "bridge_blocker", "targetname" );
    var_0 notsolid();
    var_0 connectpaths();
    scripts\engine\utility::_id_6E3E( "bridge_constructed" );
    level thread bridgeconstructedvo();
    _id_0D61::_id_15FC( "pap_island" );
    _id_0D61::update_volume_adjacency_by_name( "pap_island", "planet_outside" );
    _id_0D61::update_volume_adjacency_by_name( "planet_outside", "pap_island" );
}

bridgeconstructedvo()
{
    var_0 = scripts\engine\utility::_id_DC6B( level.players );

    if ( isdefined( var_0._id_134FD ) )
    {
        switch ( var_0._id_134FD )
        {
            case "p1_":
                if ( !isdefined( level._id_4481["conv_pap_ee_sally_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_pap_ee_sally_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_pap_ee_sally_1_1"] = 1;
                }

                break;
            case "p2_":
                if ( !isdefined( level._id_4481["conv_pap_ee_pdex_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_pap_ee_pdex_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_pap_ee_pdex_1_1"] = 1;
                }

                break;
            case "p3_":
                if ( !isdefined( level._id_4481["conv_pap_ee_andre_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_pap_ee_andre_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_pap_ee_andre_1_1"] = 1;
                }

                break;
            case "p4_":
                if ( !isdefined( level._id_4481["conv_pap_ee_aj_1_1"] ) )
                {
                    level thread _id_0A6A::_id_12885( "conv_pap_ee_aj_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["conv_pap_ee_aj_1_1"] = 1;
                }

                break;
        }
    }
}

givefuses()
{
    scripts\engine\utility::_id_6E3E( "picked_up_uncharged_fuses" );

    foreach ( var_1 in level.players )
        var_1 setclientomnvar( "zm_special_item", 5 );
}

built_bridge_feedback( var_0 )
{
    if ( isdefined( var_0 ) && isplayer( var_0 ) )
    {
        var_1 = [ "fistpump", "fingercrossed", "kissfist" ];
        var_2 = scripts\engine\utility::_id_DC6B( var_1 );
        var_3 = "iw7_" + var_2 + "_zm";
        var_0 thread _id_0A77::_id_1308C( var_0, var_3 );
    }
}

spawnenergydoor()
{
    var_0 = [ ( 16, 5583, 115 ), ( 144, 6168, 115 ) ];
    var_1 = [ ( 0, 0, 0 ), ( 0, 90, 0 ) ];
    level.all_quest_doors = [];

    for ( var_2 = 0; var_2 < var_0.size; var_2++ )
    {
        var_3 = scripts\engine\utility::_id_5D14( var_0[var_2], 12, -400 );
        var_4 = spawn( "script_model", var_3 );
        var_4.angles = var_1[var_2];
        var_4 setmodel( "door_sized_collision" );
        var_4 setscriptablepartstate( "door_effect", "active" );
        level.all_quest_doors[level.all_quest_doors.size] = var_4;
        thread watchfordamageondoor( var_4 );
    }
}

watchfordamageondoor( var_0 )
{
    level endon( "game_ended" );
    level endon( "kill_energy_doors" );
    var_1 = getent( "med_bay_door_clip", "targetname" );
    var_1.health = 9999999;
    var_1.maxhealth = 9999999;
    var_1 setcandamage( 1 );
    var_1.next_block_fx_time = 0;

    for (;;)
    {
        var_1 waittill( "damage", var_2, var_3, var_4, var_5, var_2, var_2, var_2, var_2, var_2, var_6 );
        var_7 = gettime();

        if ( isdefined( var_1.next_block_fx_time ) && isdefined( var_5 ) && isdefined( var_4 ) && var_7 >= var_1.next_block_fx_time )
        {
            var_1.next_block_fx_time = var_7 + 250;
            playfx( level._effect["energy_door_impact"], var_5 + var_4 * -5, var_4 * -150 );
        }
    }
}

neilclosedoors()
{
    if ( _id_0A77::_id_9F02() || level._id_C552 )
    {
        thread setzombiemovespeed( [ "walk" ] );
        setspawndelayoverride( 0.5 );
    }
    else
    {
        if ( level.players.size >= 3 )
            thread setzombiemovespeed( [ "run", "sprint" ] );
        else
            thread setzombiemovespeed( [ "walk", "run" ] );

        setspawndelayoverride( 0.15 );
    }

    setwavenumoverride( 30 );
    storewavespawningcounters();
    stop_spawn_wave();
    level.respawn_enemy_list = [];
    level.respawn_data = undefined;
    closealldoors( 1 );
    level._id_5274 = 500;
    level._id_B467 = 24;
    waitforvalidwavepause();
    pausenormalwavespawning( 0 );
}

watchfornearbyzombies( var_0 )
{
    var_0 notify( "watchForNearbyZombies" );
    var_0 endon( "watchForNearbyZombies" );
    level endon( "game_ended" );
    level endon( "deactivateNeil" );
    level endon( "neilIsEvil" );
    level endon( "inFinalPosition" );
    level endon( "neil_doing_something_evil" );

    for (;;)
    {
        var_1 = sortbydistance( _id_0A4A::_id_7DB0( "axis" ), var_0.origin );

        if ( var_1.size > 0 && distance( var_1[0].origin, var_0.origin ) <= 72 )
        {
            if ( scripts\engine\utility::_id_9CEE( var_0._id_4284 ) )
            {
                thread [[ level._id_9A43[var_0.script_noteworthy]._id_161A ]]( var_0, undefined );
                break;
            }
        }

        wait 0.25;
    }
}

pausenormalwavespawning( var_0 )
{
    scripts\engine\utility::_id_6E3E( "pause_wave_progression" );

    if ( scripts\engine\utility::_id_9CEE( var_0 ) )
        level._id_13FA3 = 1;
    else
        level._id_13FA3 = 0;
}

resume_spawn_wave()
{
    level.dont_resume_wave_after_solo_afterlife = undefined;
    level._id_13FA3 = 0;
    scripts\engine\utility::_id_6E2A( "pause_wave_progression" );
}

storewavespawningcounters()
{
    var_0 = spawnstruct();
    var_0._id_4632 = level._id_4632;
    var_0._id_4B6E = level._id_4B6E;
    var_0._id_B467 = level._id_B467;
    var_0._id_5274 = level._id_5274;
    var_0._id_13BD3 = level._id_13BD3;
    level.storedspawncounters = var_0;
}

restorewavespawningcounters()
{
    if ( isdefined( level.storedspawncounters ) )
    {
        var_0 = level.storedspawncounters;

        if ( level._id_13BD3 == var_0._id_13BD3 )
        {
            level._id_4B6E = var_0._id_4B6E;
            level._id_B467 = var_0._id_B467;
            level._id_5274 = var_0._id_5274;
        }
        else
        {
            level._id_4B6E = 0;
            level._id_B467 = _id_7ACD( level._id_13BD3 );
            level._id_5274 = _id_7D10( level._id_13BD3 );
        }

        level.storedspawncounters = undefined;
    }
}

stop_spawn_wave()
{
    level._id_4B6E = 0;
    scripts\engine\utility::_id_6E3E( "pause_wave_progression" );
    level._id_13FA3 = 1;
    level.dont_resume_wave_after_solo_afterlife = 1;
}

unpausenormalwavespawning()
{
    scripts\engine\utility::_id_6E2A( "pause_wave_progression" );
    level._id_13FA3 = 0;
}

waitforvalidwavepause()
{
    while ( level._id_4B6E == level._id_5274 )
        wait 0.05;
}

clearexistingenemies()
{
    var_0 = _id_0A4A::_id_7DB0( "axis" );

    foreach ( var_2 in var_0 )
    {
        var_2._id_54CB = 1;
        var_2._id_C026 = 1;
        var_2 suicide();
    }
}

_id_7ACD( var_0 )
{
    if ( _id_0A77::_id_9BD8() && var_0 < 5 )
    {
        var_1 = level.players.size * 6;
        var_2 = [ 0, 0.25, 0.3, 0.5, 0.7, 0.9 ];
        var_3 = 1;
        var_4 = 1;
        var_3 = var_2[var_0];
        var_5 = level.players.size - 1;

        if ( var_5 < 1 )
            var_5 = 0.5;

        var_6 = ( 24 + var_5 * 6 * var_4 ) * var_3;
        return int( min( var_1, var_6 ) );
    }

    return 24;
}

_id_7D10( var_0 )
{
    if ( _id_0A77::_id_9BD8() )
        return 9000;

    var_1 = [ 0, 0.25, 0.3, 0.5, 0.7, 0.9 ];
    var_2 = 1;
    var_3 = 1;

    if ( var_0 < 6 )
        var_2 = var_1[var_0];
    else if ( var_0 < 10 )
        var_3 = var_0 / 5;
    else
        var_3 = squared( var_0 ) * 0.03;

    var_4 = level.players.size - 1;

    if ( var_4 < 1 )
        var_4 = 0.5;

    var_5 = ( 24 + var_4 * 6 * var_3 ) * var_2;
    return int( var_5 );
}

setwavenumoverride( var_0 )
{
    level._id_13BD6 = var_0;
}

unsetwavenumoverride( var_0 )
{
    level._id_13BD6 = undefined;
}

setspawndelayoverride( var_0 )
{
    level._id_10847 = var_0;
}

unsetspawndelayoverride( var_0 )
{
    level._id_10847 = undefined;
}

unsetzombiemovespeed()
{
    level notify( "unsetZombieMoveSpeed" );
}

setzombiemovespeed( var_0 )
{
    level endon( "game_ended" );
    level notify( "unsetZombieMoveSpeed" );
    level endon( "unsetZombieMoveSpeed" );

    foreach ( var_2 in _id_0A4A::_id_7DB0( "axis" ) )
    {
        if ( isdefined( var_2.agent_type ) && var_2.agent_type != "ratking" )
        {
            var_3 = scripts\engine\utility::_id_DC6B( var_0 );
            var_2 thread _id_1887( var_2, 0, var_3 );
        }
    }

    for (;;)
    {
        level waittill( "agent_spawned", var_5 );
        var_3 = scripts\engine\utility::_id_DC6B( var_0 );
        var_5 thread _id_1887( var_5, 1, var_3 );
    }
}

_id_1887( var_0, var_1, var_2 )
{
    var_0 endon( "death" );

    if ( isdefined( var_0.agent_type ) && var_0.agent_type == "ratking" )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_0._id_9CDD ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_1 ) )
        wait 0.5;

    var_0 scripts\asm\asm_bb::_id_2968( var_2 );
}

neiltriggertrap()
{
    var_0 = scripts\engine\utility::_id_8180( "laser_trap", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_8180( "electric_trap", "script_noteworthy" );
    var_2 = scripts\engine\utility::_id_8180( "acid_rain_trap", "script_noteworthy" );
    level thread scripts\cp\maps\cp_final\cp_final_traps::use_lasers_trap( var_0[0], undefined );
    level thread scripts\cp\maps\cp_final\cp_final_traps::electric_trap_use( var_1[0], undefined );
    level thread scripts\cp\maps\cp_final\cp_final_traps::use_rain_trap( var_2[0], undefined );
}

neildoevilstuff()
{
    level notify( "neilIsEvil" );
    level endon( "neilIsEvil" );
    level endon( "game_ended" );
    level endon( "deactivateNeil" );
    level endon( "inFinalPosition" );
    var_0 = [ "laser_trap", "electric_trap", "acid_rain_trap" ];
    var_1 = scripts\engine\utility::_id_8180( "laser_trap", "script_noteworthy" );
    var_2 = scripts\engine\utility::_id_8180( "electric_trap", "script_noteworthy" );
    var_3 = scripts\engine\utility::_id_8180( "acid_rain_trap", "script_noteworthy" );
    var_4 = scripts\engine\utility::_id_227F( var_1, var_2, var_3 );
    wait 5;

    for (;;)
    {
        level notify( "neil_doing_something_evil" );
        setneilstate( "angry" );

        if ( scripts\engine\utility::_id_4347() )
        {
            if ( scripts\engine\utility::_id_4347() )
            {
                thread activatedoorsastraps();
                level thread play_bad_neil_dialogues();
            }
            else
            {
                resetslidingdoorstonormalstate();
                playneilvo( "final_n31l_evil_deactivate_machine" );
                closealldoors( 1 );
                level thread play_bad_neil_dialogues();
            }
        }
        else
        {
            var_5 = 2000;
            var_6 = undefined;

            foreach ( var_8 in level.players )
            {
                var_9 = scripts\engine\utility::_id_7E2E( var_8.origin, var_4, 1000 );

                if ( isdefined( var_9 ) && distance( var_8.origin, var_9.origin ) < var_5 )
                {
                    if ( scripts\engine\utility::array_contains( level._id_4B88, var_9 ) )
                        var_6 = var_9;
                }
            }

            if ( isdefined( var_6 ) )
            {
                resetslidingdoorstonormalstate();
                playneilvo( "final_n31l_evil_manipulate_cost" );

                switch ( var_6.script_noteworthy )
                {
                    case "laser_trap":
                        level thread scripts\cp\maps\cp_final\cp_final_traps::use_lasers_trap( var_1[0], undefined );
                        break;
                    case "electric_trap":
                        level thread scripts\cp\maps\cp_final\cp_final_traps::electric_trap_use( var_2[0], undefined );
                        break;
                    case "acid_rain_trap":
                        level thread scripts\cp\maps\cp_final\cp_final_traps::use_rain_trap( var_3[0], undefined );
                        break;
                }

                level thread play_bad_neil_dialogues();
            }
            else
            {
                if ( scripts\engine\utility::_id_4347() )
                    thread activatedoorsastraps();
                else
                {
                    playneilvo( "final_n31l_evil_deactivate_machine" );
                    resetslidingdoorstonormalstate();
                    closealldoors( 1 );
                }

                level thread play_bad_neil_dialogues();
            }
        }

        waittoreactivate();
    }
}

play_bad_neil_dialogues()
{
    wait 7;

    if ( !scripts\engine\utility::_id_9CEE( level.played_bad_neil_vo ) )
    {
        level.played_bad_neil_vo = 1;
        var_0 = scripts\engine\utility::_id_DC6B( level.players );

        if ( isdefined( var_0._id_134FD ) )
        {
            switch ( var_0._id_134FD )
            {
                case "p1_":
                    if ( !isdefined( level._id_4481["conv_bad_n31l_sally_1_1"] ) )
                    {
                        level thread _id_0A6A::_id_12885( "conv_bad_n31l_sally_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                        level._id_4481["conv_bad_n31l_sally_1_1"] = 1;
                    }

                    break;
                case "p2_":
                    if ( !isdefined( level._id_4481["conv_bad_n31l_pdex_1_1"] ) )
                    {
                        level thread _id_0A6A::_id_12885( "conv_bad_n31l_pdex_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                        level._id_4481["conv_bad_n31l_pdex_1_1"] = 1;
                    }

                    break;
                case "p3_":
                    if ( !isdefined( level._id_4481["conv_bad_n31l_andre_1_1"] ) )
                    {
                        level thread _id_0A6A::_id_12885( "conv_bad_n31l_andre_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                        level._id_4481["conv_bad_n31l_andre_1_1"] = 1;
                    }

                    break;
                case "p4_":
                    if ( !isdefined( level._id_4481["conv_bad_n31l_aj_1_1"] ) )
                    {
                        level thread _id_0A6A::_id_12885( "conv_bad_n31l_aj_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                        level._id_4481["conv_bad_n31l_aj_1_1"] = 1;
                    }

                    break;
            }
        }
    }
}

waittoreactivate()
{
    level endon( "game_ended" );
    level endon( "makeNeilEvil" );
    level endon( "deactivateNeil" );
    var_0 = randomintrange( 45, 60 );
    level scripts\engine\utility::_id_13736( var_0 - 5, "makeNeilEvil" );
    setneilstate( "straight" );
    level scripts\engine\utility::_id_13736( 5, "makeNeilEvil" );
}

activatedoorsastraps()
{
    level notify( "activateDoorsAsTraps" );
    level endon( "activateDoorsAsTraps" );
    level endon( "game_ended" );
    playneilvo( "final_n31l_evil_activate_trap" );
    rundoorsastrapsloop();
    resetslidingdoorstonormalstate();
}

openalldoors()
{
    foreach ( var_1 in level.allslidingdoors )
    {
        if ( scripts\engine\utility::_id_9CEE( var_1.player_opened ) && scripts\engine\utility::_id_9CEE( var_1._id_4284 ) )
            thread [[ level._id_9A43[var_1.script_noteworthy]._id_161A ]]( var_1, undefined );
    }
}

closealldoors( var_0 )
{
    foreach ( var_2 in level.allslidingdoors )
    {
        if ( scripts\engine\utility::_id_9CEE( var_2.player_opened ) && scripts\engine\utility::_id_9CEE( var_2._id_C626 ) )
        {
            if ( scripts\engine\utility::_id_9CEE( var_0 ) )
                thread watchfornearbyzombies( var_2 );

            thread scripts\cp\maps\cp_final\cp_final_interactions::closeslidingdoor( var_2, undefined );
        }
    }
}

rundoorsastrapsloop()
{
    level endon( "game_ended" );
    level endon( "neil_doing_something_evil" );
    level endon( "deactivateNeil" );
    level endon( "inFinalPosition" );

    while ( !scripts\engine\utility::_id_6E25( "disable_evil_neil" ) )
    {
        disableslidingdoorinteractions( 1 );
        thread closealldoors();
        wait 1.5;
        disableslidingdoorinteractions( 1 );
        thread openalldoors();
        wait( randomfloatrange( 1.75, 5 ) );
    }
}

initmpqdebug()
{
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );
}

questdevguientries( var_0, var_1, var_2, var_3 )
{

}
