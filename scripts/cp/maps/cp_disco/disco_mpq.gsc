// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

skq()
{
    init_skq_flags();
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );
    thread phase_1();
    thread phase_2();
    thread phase_3();
}

init_skq_flags()
{
    scripts\engine\utility::_id_6E39( "eye_picked" );
    scripts\engine\utility::_id_6E39( "heart_picked" );
    scripts\engine\utility::_id_6E39( "brain_picked" );
    scripts\engine\utility::_id_6E39( "skq_phase_1" );
    scripts\engine\utility::_id_6E39( "skq_phase_3" );
    scripts\engine\utility::_id_6E39( "disco_roof power_on" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_0" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_1" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_2" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_3" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_4" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_5" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_0" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_1" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_2" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_3" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_4" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_5" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_6" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_7" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_0" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_1" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_2" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_3" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_4" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_5" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_6" );
    scripts\engine\utility::_id_6E39( "morse_code_heard" );
    scripts\engine\utility::_id_6E39( "turnstile_done" );
    scripts\engine\utility::_id_6E39( "turnstyle_glyph_hit" );
    scripts\engine\utility::_id_6E39( "reel_zoms_beaten" );
    scripts\engine\utility::_id_6E39( "cleanup_reel_assets" );
    scripts\engine\utility::_id_6E39( "fever_started" );
    scripts\engine\utility::_id_6E39( "savage_treasure" );
    scripts\engine\utility::_id_6E39( "first_cipher_seen" );
    scripts\engine\utility::_id_6E39( "second_cipher_seen" );
    scripts\engine\utility::_id_6E39( "third_cipher_seen" );
    scripts\engine\utility::_id_6E39( "correct_poster_got" );
    scripts\engine\utility::_id_6E39( "skq_phase_1dbg" );
    scripts\engine\utility::_id_6E39( "skq_phase_3dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_0dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_1dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_2dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_3dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_4dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t1_5dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_0dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_1dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_2dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_3dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_4dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_5dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_6dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t2_7dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_0dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_1dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_2dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_3dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_4dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_5dbg" );
    scripts\engine\utility::_id_6E39( "skq_p2t3_6dbg" );
}

phase_1()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_phase_1", "skq_phase_1dbg" );

    if ( isdefined( level.spoke_to_pam_first_after_wave_five ) && !scripts\engine\utility::_id_9CEE( level.played_first_pam_dialogue ) )
    {
        switch ( level.spoke_to_pam_first_after_wave_five._id_134FD )
        {
            case "p1_":
                level.spoke_to_pam_first_after_wave_five thread _id_0A6A::_id_12885( "sally_pam_first_1", "pam_dialogue_vo", "highest", 20, 1 );
                break;
            case "p2_":
                level.spoke_to_pam_first_after_wave_five thread _id_0A6A::_id_12885( "pdex_pam_first_1", "pam_dialogue_vo", "highest", 20, 1 );
                break;
            case "p3_":
                level.spoke_to_pam_first_after_wave_five thread _id_0A6A::_id_12885( "andre_pam_first_1", "pam_dialogue_vo", "highest", 20, 1 );
                break;
            case "p4_":
                level.spoke_to_pam_first_after_wave_five thread _id_0A6A::_id_12885( "aj_pam_first_1", "pam_dialogue_vo", "highest", 20, 1 );
                break;
            case "p5_":
                level.spoke_to_pam_first_after_wave_five thread _id_0A6A::_id_12885( "pam_generic_response", "pam_dialogue_vo", "highest", 20, 1 );
                break;
            default:
        }

        level.played_first_pam_dialogue = 1;
    }
    else
    {
        foreach ( var_2 in level.players )
        {
            var_3 = [ "pam_generic_response", "pam_return_nothing" ];
            var_2 thread _id_0A6A::_id_12885( scripts\engine\utility::_id_DC6B( var_3 ), "pam_dialogue_vo", "highest", 100, 1 );
        }
    }

    if ( isdefined( level.trainer ) )
        level.trainer notify( "play_idle" );

    foreach ( var_6 in level.all_animal_structs )
        thread _id_0A59::_id_175C( var_6 );

    scripts\cp\maps\cp_disco\kung_fu_mode::disable_trainer_interactions();
}

phase_2()
{
    thread phase_2_task_1();
    thread phase_2_task_2();
    thread phase_2_task_3();
}

phase_2_task_1()
{
    thread p2t1_0_receive_quest();
    thread p2t1_1_destroy_cages();
    thread p2t1_2_subway_locker();
    thread p2t1_3_decal_puzzle();
    thread p2t1_4_rat_king_fight();
    thread p2t1_5_complete_task();
}

p2t1_0_receive_quest()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t1_0", "skq_p2t1_0dbg" );
    scripts\cp\maps\cp_disco\kung_fu_mode::disable_trainer_interactions();

    foreach ( var_2 in level.players )
    {
        var_2 thread _id_0A6A::_id_12885( "pam_quest_ratking_eye", "pam_dialogue_vo", "highest", 100, 1 );

        if ( var_2._id_134FD == "p5_" )
            var_2 thread play_pam_reaction_vo( "pam_quest_ratking_eye", 1, 0, 0 );
    }

    _id_0A6A::_id_E01F( "pam_quest_return" );
    level.trainer notify( "play_sit_idle" );
    scripts\engine\utility::_id_6E3E( "skq_p2t1_1" );
}

p2t1_1_destroy_cages()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t1_1", "skq_p2t1_1dbg" );
    var_1 = scripts\engine\utility::_id_8180( "mpq_rat_cage", "targetname" );

    foreach ( var_3 in var_1 )
        var_3 thread monitor_cage_visibility();

    for (;;)
    {
        var_5 = monitor_cage_destruction();

        if ( var_5 )
            break;
        else
            reset_cage_puzzle();
    }

    remove_cage_quest();

    if ( !isdefined( level.next_cage ) )
    {
        var_1 = scripts\engine\utility::_id_8180( "mpq_rat_cage", "targetname" );
        var_1 = sortbydistance( var_1, level.players[0].origin );
        level.next_cage = var_1[0];
    }

    var_3 = undefined;
    var_1 = scripts\engine\utility::_id_8180( "cage_challenge_ring", "targetname" );

    foreach ( var_7 in var_1 )
    {
        if ( var_7.script_noteworthy == level.next_cage.script_noteworthy )
        {
            var_3 = var_7;
            break;
        }
    }

    zombie_challenge_ring( 15, var_3 );
    wait 10;
    var_3 rat_cage_kung_fu_zombies();
    var_9 = spawnfx( level._effect["locker_key"], var_3.origin + ( 0, 0, 32 ), anglestoforward( var_3.angles ), anglestoup( var_3.angles ) );
    var_10 = scripts\engine\utility::_id_107E6( var_3.origin + ( 0, 0, 32 ), var_3.angles );
    wait 0.2;
    triggerfx( var_9 );
    var_10 makeusable( 1 );
    var_10 _meth_84A5( 60 );
    var_10 _meth_84A2( 50 );
    var_10 waittill( "trigger", var_11 );

    if ( isdefined( var_11 ) && isplayer( var_11 ) )
    {
        var_11 thread _id_0A6A::_id_12885( "pam_collect_lockerkey", "disco_comment_vo" );
        var_11 thread _id_0A6A::_id_1769( "missing_item_misc", "disco_comment_vo", 240, 120, 4, 1 );
    }

    level _id_0A77::_id_F55F( 14 );
    var_10 delete();
    var_9 delete();
    scripts\engine\utility::_id_6E3E( "skq_p2t1_2" );
}

zombie_challenge_ring( var_0, var_1 )
{
    level endon( "game_ended" );
    var_2 = scripts\engine\utility::_id_5D14( var_1.origin, 30, -100 );
    var_3 = spawnfx( level._effect["challenge_ring"], var_2, anglestoforward( var_1.angles ) );
    wait 1;
    level thread zombie_challenge_ring_sfx( var_2 );
    triggerfx( var_3 );
    var_4 = var_0;

    while ( var_4 > 0 )
    {
        level waittill( "zombie_killed", var_5, var_6, var_6, var_7 );

        if ( distancesquared( var_2, var_5 ) <= 22500 )
            var_4--;

        wait 0.05;
    }

    level notify( "stop_this_challenge_ring_sfx" );
    var_3 delete();
}

zombie_challenge_ring_sfx( var_0 )
{
    level endon( "game_ended" );
    var_1 = scripts\engine\utility::_id_CD86( "kill_zone_circle_lr_lp", var_0 );
    level waittill( "stop_this_challenge_ring_sfx" );
    wait 0.15;
    var_1 stoploopsound();
    var_1 delete();
}

rat_cage_kung_fu_zombies()
{
    level.rat_cage_zoms = 0;
    mpq_spawn_special_wave( level.rat_cage_zoms, 8 );
}

remove_cage_quest()
{
    var_0 = scripts\engine\utility::_id_8180( "mpq_rat_cage", "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2.cage_model ) )
            var_2.cage_model delete();

        if ( isdefined( var_2.cage_rat ) )
        {
            if ( var_2.cage_rat._id_01F1 == "tag_origin_templeton" )
            {
                var_2.cage_rat setscriptablepartstate( "templeton", 1 );
                var_2.cage_rat delete();
                continue;
            }

            var_2.cage_rat delete();
        }
    }

    level notify( "cage_win" );
}

reset_cage_puzzle()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_8180( "mpq_rat_cage", "targetname" );
    level thread _id_0A6A::_id_12885( "ww_quest_failure", "rave_announcer_vo", "highest", 70, 0, 0, 1 );
    level notify( "cage_fail" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2.claimed_cage ) )
            var_2.claimed_cage = undefined;

        if ( isdefined( var_2.cage_model ) )
            var_2.cage_model delete();

        if ( isdefined( var_2.cage_rat ) )
        {
            if ( var_2.cage_rat._id_01F1 == "tag_origin_templeton" )
            {
                var_2.cage_rat setscriptablepartstate( "templeton", 1 );
                var_2.cage_rat delete();
                continue;
            }

            var_2.cage_rat delete();
        }
    }

    wait 4;

    foreach ( var_2 in var_0 )
        var_2 thread monitor_cage_visibility();
}

spawn_rat_cage()
{
    level endon( "game_ended" );
    level endon( "cage_fail" );
    level endon( "cage_win" );

    if ( !isdefined( self.angles ) )
        self.angles = ( 0, 0, 0 );

    self.cage_model = spawn( "script_model", self.origin );
    self.cage_model.angles = self.angles;
    self.cage_model setmodel( "cp_disco_rat_cage" );
    var_0 = scripts\engine\utility::_id_817E( self._id_0334, "targetname" );
    self.cage_rat = spawn( "script_model", var_0.origin );
    self.cage_rat.angles = var_0.angles;
    self.cage_rat setmodel( "zmb_rat" );
    thread cage_logic();
}

cage_logic()
{
    level endon( "game_ended" );
    self endon( "not_visible" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    self.cage_model setcandamage( 1 );

    for (;;)
    {
        self.cage_model waittill( "damage", var_0, var_1, var_0, var_0, var_0, var_0, var_0, var_0, var_0, var_2 );

        if ( isdefined( var_2 ) && issubstr( var_2, "shuriken" ) )
            break;
        else
            wait 0.2;
    }

    level notify( "cage_hit", self, var_1 );
}

monitor_cage_destruction()
{
    level endon( "game_ended" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    level waittill( "cage_hit", var_0, var_1 );
    playloopsound( var_0.origin, "ninja_zombie_poof_in" );
    playfx( level._effect["rat_cage_poof"], var_0.origin, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );
    var_0 thread send_rat_wandering( var_1 );

    while ( !isdefined( level.next_cage ) )
        wait 0.1;

    for ( var_2 = 0; var_2 < 4; var_2++ )
    {
        level waittill( "cage_hit", var_0, var_1 );
        playloopsound( var_0.origin, "ninja_zombie_poof_in" );
        playloopsound( var_0.origin, "rat_cage_open" );
        playfx( level._effect["rat_cage_poof"], var_0.origin, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );

        if ( var_0 == level.next_cage )
        {
            var_0 thread send_rat_wandering( var_1 );
            continue;
        }

        return 0;
    }

    level waittill( "cage_hit", var_0, var_1 );

    if ( var_0 == level.next_cage )
        return 1;
    else
        return 0;
}

send_rat_wandering( var_0 )
{
    level endon( "game_ended" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    self.claimed_cage = 1;
    self notify( "cage_destroyed" );
    var_1 = select_next_cage();
    self.cage_model delete();
    var_2 = build_path_network( self.cage_rat, var_1, var_0 );
    self.cage_rat thread rat_follow_path( var_2, var_1 );
    self.cage_rat playloopsound( "rat_scurry_follow_lp" );
}

build_path_network( var_0, var_1, var_2 )
{
    level endon( "game_ended" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    var_3 = [];
    var_4 = 0;
    var_5 = scripts\engine\utility::_id_8180( "mpq_rat_traversal", "targetname" );
    var_6 = undefined;

    for (;;)
    {
        if ( var_3.size == 0 )
            var_3 = var_2 _meth_8428( var_0.origin, var_1.origin, 1, 1 );
        else
        {
            var_7 = var_2 _meth_8428( var_3[var_3.size - 1], var_1.origin, 1, 1 );
            var_3 = scripts\engine\utility::_id_227F( var_3, var_7 );
        }

        if ( distance2dsquared( var_1.origin, var_3[var_3.size - 1] ) <= 4096 )
            return var_3;

        var_5 = sortbydistance( var_5, var_3[var_3.size - 1] );
        var_8 = [];
        var_9 = undefined;

        foreach ( var_11 in var_5 )
        {
            if ( var_4 && ( var_11 == var_5[0] || var_11 == var_6 ) )
                continue;

            var_8 = var_2 _meth_8428( var_3[var_3.size - 1], var_11.origin, 1, 1 );

            if ( distance2dsquared( var_11.origin, var_8[var_8.size - 1] ) <= 4096 )
            {
                var_9 = var_11;
                break;
            }
        }

        if ( !var_4 )
            var_4 = 1;

        if ( !isdefined( var_9 ) )
            return var_3;
        else
            var_6 = var_9;

        var_8 = [];
        var_8[var_8.size] = var_9.origin;
        var_13 = scripts\engine\utility::_id_817E( var_9._id_0334, "targetname" );
        var_8[var_8.size] = var_13.origin;
        var_3 = scripts\engine\utility::_id_227F( var_3, var_8 );
        wait 0.05;
    }
}

rat_follow_path( var_0, var_1 )
{
    level endon( "game_ended" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    var_2 = 120;
    self setmodel( "tag_origin_templeton" );

    foreach ( var_4 in var_0 )
    {
        var_5 = distance( self.origin, var_4 );
        var_6 = 16;

        if ( var_5 >= var_6 * 2 )
        {
            var_7 = floor( var_5 / var_6 );

            for ( var_8 = 0; var_8 < var_7; var_8++ )
            {
                var_9 = vectortoangles( var_4 - self.origin );
                var_10 = self.origin + anglestoforward( var_9 ) * var_6;
                var_10 = scripts\engine\utility::_id_5D14( var_10, 50, -100 );
                var_5 = distance( self.origin, var_10 );
                var_11 = var_5 / var_2;

                if ( var_11 <= 0.05 )
                    var_11 = 0.05;

                var_9 = ( var_9[0], var_9[1] + 90, var_9[2] );
                self rotateto( var_9, 0.05 );
                self moveto( var_10, var_11 );
                wait( var_11 );
            }
        }

        var_5 = distance( self.origin, var_4 );
        var_12 = self.origin - var_4;
        var_13 = vectortoangles( var_12 );
        var_11 = var_5 / var_2;

        if ( var_11 <= 0 )
            var_11 = 0.1;

        var_13 = ( var_13[0], var_13[1] - 90, var_13[2] );
        self rotateto( var_13, 0.1 );
        self moveto( var_4, var_11 );
        wait( var_11 );
    }

    self stoploopsound( "rat_scurry_follow_lp" );
    playloopsound( self.origin, "rat_cage_close" );

    if ( self._id_01F1 == "tag_origin_templeton" )
    {
        self setscriptablepartstate( "templeton", 1 );
        self delete();
    }
    else
        self delete();
}

select_next_cage()
{
    level endon( "game_ended" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    var_0 = scripts\engine\utility::_id_8180( "mpq_rat_cage", "targetname" );
    var_0 = scripts\engine\utility::_id_22A8( var_0 );

    for ( var_1 = 0; var_1 < var_0.size; var_1++ )
    {
        if ( !isdefined( var_0[var_1].claimed_cage ) )
        {
            level.next_cage = var_0[var_1];
            return var_0[var_1];
        }
    }
}

monitor_cage_visibility()
{
    level endon( "game_ended" );
    self endon( "cage_destroyed" );
    level endon( "cage_fail" );
    level endon( "cage_win" );
    var_0 = 0;

    foreach ( var_2 in level.players )
    {
        if ( distance2dsquared( var_2.origin, self.origin ) <= 1048576 )
        {
            playloopsound( self.origin, "ninja_zombie_poof_in" );
            playfx( level._effect["rat_cage_poof"], self.origin, anglestoforward( self.angles ), anglestoup( self.angles ) );
            break;
        }
    }

    for (;;)
    {
        if ( !isdefined( self.cage_model ) )
        {
            var_4 = 0;

            while ( !var_4 )
            {
                foreach ( var_2 in level.players )
                {
                    if ( distance2dsquared( var_2.origin, self.origin ) <= 1048576 )
                    {
                        var_4 = 1;
                        break;
                    }
                }

                wait 0.1;
            }

            spawn_rat_cage();
        }
        else
        {
            var_4 = 0;

            while ( !var_4 )
            {
                var_7 = 0;

                foreach ( var_2 in level.players )
                {
                    if ( distance2dsquared( var_2.origin, self.origin ) <= 1048576 )
                    {
                        var_7 = 1;
                        break;
                    }
                }

                if ( !var_7 )
                    var_4 = 1;

                wait 0.2;
            }

            self notify( "not_visible" );
            self.cage_rat delete();
            self.cage_model delete();
            self.cage_rat = undefined;
            self.cage_model = undefined;
        }

        wait 0.2;
    }
}

p2t1_2_subway_locker()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t1_2", "skq_p2t1_2dbg" );
    var_1 = getent( "subway_locker_door", "targetname" );
    var_2 = scripts\engine\utility::_id_817E( var_1._id_0334, "targetname" );
    var_3 = spawn( "script_model", var_2.origin );
    var_3 setmodel( "tag_origin" );
    var_3 makeusable();
    var_3 waittill( "trigger", var_4 );

    if ( isdefined( var_4 ) && isplayer( var_4 ) )
    {
        var_4 thread _id_0A6A::_id_12885( "pam_open_locker", "disco_comment_vo" );
        level thread _id_0A6A::_id_E01F( "missing_item_misc" );
    }

    var_5 = scripts\engine\utility::_id_817E( "locker_rortator_mpq", "targetname" );

    if ( isdefined( var_5 ) )
    {
        var_6 = scripts\engine\utility::_id_107E6( var_5.origin, var_5.angles );
        var_1 linkto( var_6 );
        playloopsound( var_6.origin, "disco_locker_open" );
        var_6 _meth_8271( 120, 2, 1, 0.5 );
        wait 2;
        var_6 delete();
    }
    else
        var_1 delete();

    scripts\engine\utility::_id_6E3E( "skq_p2t1_3" );
}

p2t1_3_decal_puzzle()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t1_3", "skq_p2t1_3dbg" );
    var_1 = getent( "graffiti_quest_clip", "targetname" );
    var_2 = getent( "graffiti_quest_fail_clip", "targetname" );
    var_3 = getent( "graffiti_quest_clip_alt", "targetname" );
    var_1 thread setup_chinese_targ_clip();
    var_2 thread setup_chinese_fail_clip();
    var_3 thread setup_chinese_alt_clip();
    var_4 = "start";
    var_5 = 0;

    while ( !var_5 )
    {
        level waittill( "update_graffiti", var_6, var_7 );

        if ( !isdefined( var_7 ) || !isplayer( var_7 ) )
            continue;

        switch ( var_6 )
        {
            case "chinese_symbol_0":
                if ( var_4 == "start" )
                {
                    var_4 = "chinese_symbol_0";
                    var_7 playsoundtoplayer( "chinese_symbol_hit", var_7 );
                }
                else
                {
                    failmpqstep();
                    var_4 = "start";
                }

                break;
            case "chinese_symbol_1":
                if ( var_4 == "chinese_symbol_0" )
                {
                    var_4 = "chinese_symbol_1";
                    var_7 playsoundtoplayer( "chinese_symbol_hit", var_7 );
                }
                else
                {
                    failmpqstep();
                    var_4 = "start";
                }

                break;
            case "chinese_symbol_2":
                if ( var_4 == "chinese_symbol_1" )
                {
                    var_4 = "chinese_symbol_2";
                    var_7 playsoundtoplayer( "chinese_symbol_hit", var_7 );
                }
                else
                {
                    failmpqstep();
                    var_4 = "start";
                }

                break;
            case "chinese_symbol_3":
                if ( var_4 == "chinese_symbol_2" )
                {
                    var_5 = 1;
                    var_7 playsoundtoplayer( "chinese_symbol_hit", var_7 );
                }
                else if ( var_4 == "chinese_symbol_1" )
                {
                    var_4 = "chinese_symbol_3";
                    var_7 playsoundtoplayer( "chinese_symbol_hit", var_7 );
                }
                else
                {
                    failmpqstep();
                    var_4 = "start";
                }

                break;
            case "fail":
                failmpqstep();
                var_4 = "start";
                break;
            case "alt":
                if ( var_4 == "chinese_symbol_3" )
                {
                    var_5 = 1;
                    var_7 playsoundtoplayer( "chinese_symbol_hit", var_7 );
                }
                else
                {
                    failmpqstep();
                    var_4 = "start";
                }

                break;
            default:
                break;
        }
    }

    level notify( "active_word_done" );
    thread rk_symbol_handler( "rk_symbol_punk_streets", "skq_p2t1_4" );
    _id_0A77::deactivatebrushmodel( var_1, 1 );
    _id_0A77::deactivatebrushmodel( var_2, 1 );
    _id_0A77::deactivatebrushmodel( var_3, 1 );
}

setup_chinese_targ_clip()
{
    level endon( "game_ended" );
    level endon( "active_word_done" );
    var_0 = scripts\engine\utility::_id_8180( "graffiti_check_struct", "targetname" );

    for (;;)
    {
        self setcandamage( 1 );
        self.health = 9999;
        self waittill( "damage", var_1, var_2, var_1, var_3 );
        var_0 = sortbydistance( var_0, var_3 );
        level notify( "update_graffiti", var_0[0].script_noteworthy, var_2 );
        self setcandamage( 0 );
        wait 0.1;
    }
}

setup_chinese_fail_clip()
{
    level endon( "game_ended" );
    level endon( "active_word_done" );

    for (;;)
    {
        self setcandamage( 1 );
        self.health = 9999;
        self waittill( "damage", var_0, var_1, var_0, var_2 );
        level notify( "update_graffiti", "fail", var_1 );
        self setcandamage( 0 );
        wait 0.1;
    }
}

setup_chinese_alt_clip()
{
    level endon( "game_ended" );
    level endon( "active_word_done" );

    for (;;)
    {
        self setcandamage( 1 );
        self.health = 9999;
        self waittill( "damage", var_0, var_1, var_0, var_2 );
        level notify( "update_graffiti", "alt", var_1 );
        self setcandamage( 0 );
        wait 0.1;
    }
}

p2t1_4_rat_king_fight()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_817E( "p2t1_4", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_6E4F( "skq_p2t1_4", "skq_p2t1_4dbg" );
    level thread play_rat_king_vo_discussion( 1 );
    scripts\cp\maps\cp_disco\rat_king::spawn_rat_king( var_0.origin, var_0.angles, 1 );
    level thread scripts\cp\maps\cp_disco\cp_disco::enableratkingpas();

    foreach ( var_3 in level.players )
        var_3 playsoundtoplayer( "quest_stage_completed_gong_lr", var_3 );

    setrkabilities_p2t1_4();
    level watchrkretreat( 1000 );
    thread createrelicinteraction( "eye" );
    scripts\cp\maps\cp_disco\kung_fu_mode::increase_trainer_interaction_progression();

    foreach ( var_3 in level.players )
        var_3 thread play_corresponding_vo( 1 );
}

play_rat_king_vo_discussion( var_0 )
{
    level endon( "game_ended" );

    if ( !isdefined( var_0 ) )
        return;

    if ( !_id_0A61::_id_3837() )
        return;

    switch ( var_0 )
    {
        case 1:
            level thread _id_0A6A::_id_12885( "ww_ratking_firstspawn", "rave_announcer_vo", "highest", 70, 0, 0, 1 );
            wait( _id_0A6A::_id_7C76( "ww_ratking_firstspawn" ) );
            play_vo_based_on_player( var_0 );
            break;
        case 2:
            wait( _id_0A6A::_id_7C76( "ww_ratking_spawn" ) );
            play_vo_based_on_player( var_0 );
            break;
        case 3:
            wait( _id_0A6A::_id_7C76( "ww_ratking_spawn" ) );
            play_vo_based_on_player( var_0 );
            break;
    }
}

play_vo_based_on_player( var_0 )
{
    level endon( "game_ended" );
    var_1 = scripts\engine\utility::_id_DC6B( level.players );

    switch ( var_1._id_134FD )
    {
        case "p1_":
            if ( var_0 == 1 )
                var_1 thread _id_0A6A::_id_12885( "sally_rat_king_1_1", "rave_dialogue_vo" );
            else if ( var_0 == 2 )
                var_1 thread _id_0A6A::_id_12885( "sally_rat_king_2_1", "rave_dialogue_vo" );
            else if ( var_0 == 3 )
                var_1 thread _id_0A6A::_id_12885( "sally_rat_king_3_1", "rave_dialogue_vo" );

            break;
        case "p2_":
            if ( var_0 == 1 )
                var_1 thread _id_0A6A::_id_12885( "pdex_rat_king_1_1", "rave_dialogue_vo" );
            else if ( var_0 == 2 )
                var_1 thread _id_0A6A::_id_12885( "pdex_rat_king_2_1", "rave_dialogue_vo" );
            else if ( var_0 == 3 )
                var_1 thread _id_0A6A::_id_12885( "pdex_rat_king_3_1", "rave_dialogue_vo" );

            break;
        case "p3_":
            if ( var_0 == 1 )
                var_1 thread _id_0A6A::_id_12885( "andre_rat_king_1_1", "rave_dialogue_vo" );
            else if ( var_0 == 2 )
                var_1 thread _id_0A6A::_id_12885( "andre_rat_king_2_1", "rave_dialogue_vo" );
            else if ( var_0 == 3 )
                var_1 thread _id_0A6A::_id_12885( "andre_rat_king_3_1", "rave_dialogue_vo" );

            break;
        case "p4_":
            if ( var_0 == 1 )
                var_1 thread _id_0A6A::_id_12885( "aj_rat_king_1_1", "rave_dialogue_vo" );
            else if ( var_0 == 2 )
                var_1 thread _id_0A6A::_id_12885( "aj_rat_king_2_1", "rave_dialogue_vo" );
            else if ( var_0 == 3 )
                var_1 thread _id_0A6A::_id_12885( "aj_rat_king_3_1", "rave_dialogue_vo" );

            break;
    }
}

watchrkretreat( var_0 )
{
    level endon( "game_ended" );
    level.rat_king.health = var_0;
    level.rat_king waittill( "fake_death" );
}

setrkabilities_p2t1_4()
{
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "teleport", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "block", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "melee_attack", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "summon", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "staff_stomp", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "staff_projectile", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "shield_attack", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "shield_attack_spot", 0 );
    level.rat_king_attack_priorities = [];
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "melee_attack";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "block";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "teleport";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "summon";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "staff_stomp";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "staff_projectile";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "shield_attack";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "shield_attack_spot";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "attack_zombies";
    level.rk_tuning_override = ::setrkblocktuning;
    level.rk_solo_tuning_override = ::setrkblocktuning;
    setrkblocktuning( level.agenttunedata["ratking"] );
}

setrkblocktuning( var_0 )
{
    var_0.need_to_block_damage_threshold = 20;
    var_0.max_time_after_last_damage_to_block = 1000;
    var_0.block_chance = 100;
    var_0.min_block_time = 3000;
    var_0.max_block_time = 7000;
    var_0.quit_block_if_no_damage_time = 2000;
    var_0.min_block_interval = 7000;
    var_0.max_block_interval = 10000;
}

p2t1_5_complete_task()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t1_5", "skq_p2t1_5dbg" );
    scripts\cp\maps\cp_disco\kung_fu_mode::disable_trainer_interactions();

    foreach ( var_2 in level.players )
    {
        var_2 thread _id_0A6A::_id_12885( "pam_quest_ratking_brain", "pam_dialogue_vo", "highest", 100, 1 );

        if ( var_2._id_134FD == "p5_" )
            var_2 thread play_pam_reaction_vo( "pam_quest_ratking_brain", 0, 0, 1 );
    }

    level.trainer notify( "play_sit_idle" );
    scripts\engine\utility::_id_6E3E( "skq_p2t2_0" );
}

phase_2_task_2()
{
    thread p2t2_0_symbol_hunt();
    thread p2t2_1_phone_puzzle();
    thread p2t2_3_poster_puzzle();
    thread p2t2_4_kung_fu_fight();
    thread p2t2_5_rat_king_puzzle();
    thread p2t2_6_rat_king_fight();
    thread p2t2_7_complete_task();
}

p2t2_0_symbol_hunt( var_0 )
{
    level endon( "game_ended" );
    var_1 = scripts\engine\utility::_id_6E4F( "skq_p2t2_0", "skq_p2t2_0dbg" );
    var_2 = scripts\engine\utility::_id_8180( "phonebooth", "script_noteworthy" );
    var_3 = scripts\engine\utility::_id_8180( "symbol_point", "targetname" );
    var_2 = scripts\engine\utility::_id_22A8( var_2 );
    var_3 = scripts\engine\utility::_id_22A8( var_3 );
    var_4 = 0;
    var_5 = var_2[var_2.size - 1];
    level.active_hunt_symbol = var_3[var_4];

    for (;;)
    {
        if ( var_2[var_4] == var_5 )
            break;
        else
            wait 0.1;

        active_symbol_logic();
        turn_off_phone_light( var_2[var_4] );
        var_4++;
        cleanup_previous_symbol();
        level.active_hunt_symbol = var_3[var_4];
    }

    cleanup_previous_symbol();
    level.phone_puzzle_phone = var_5;
    thread payphone_ringing( level.phone_puzzle_phone );
    scripts\engine\utility::_id_6E3E( "skq_p2t2_1" );
}

turn_off_phone_light( var_0 )
{
    var_0.quest_state = 1;
    scripts\cp\maps\cp_disco\phonebooth::update_all_phonebooth_scriptable_states();
}

active_symbol_logic()
{
    if ( !isdefined( level.active_hunt_symbol ) )
        return;

    level endon( "game_ended" );
    thread toggle_symbols_for_players();
    var_0 = getent( "symbol_point_clip", "targetname" );
    var_1 = getent( var_0._id_0334, "targetname" );
    var_1 linkto( var_0 );
    var_0.origin = level.active_hunt_symbol.origin;
    var_0.angles = level.active_hunt_symbol.angles;
    wait 0.1;
    var_1 setcandamage( 1 );
    var_1.health = 9999;

    for (;;)
    {
        var_1 waittill( "damage", var_2, var_3 );

        if ( scripts\engine\utility::_id_9CEE( var_3.wearing_rat_king_eye ) )
            break;
        else
            wait 0.1;
    }

    playfx( level._effect["glyph_death"], level.active_hunt_symbol.origin, anglestoforward( level.active_hunt_symbol.angles ), anglestoup( level.active_hunt_symbol.angles ) );
    var_1 setcandamage( 0 );
    wait 0.1;
}

cleanup_previous_symbol()
{
    if ( !isdefined( level.active_hunt_symbol ) )
        return;

    level notify( "symbol_updated" );

    foreach ( var_1 in level.players )
    {
        if ( isdefined( var_1.symbol_hunt_fx ) )
            var_1.symbol_hunt_fx delete();
    }
}

toggle_symbols_for_players()
{
    level endon( "game_ended" );
    level endon( "symbol_updated" );

    for (;;)
    {
        foreach ( var_1 in level.players )
            var_1 thread determine_symbol_visibility();

        level scripts\engine\utility::waittill_any( "rat_king_eye_activated", "rat_king_eye_deactivated", "connected" );
    }
}

determine_symbol_visibility()
{
    level endon( "game_ended" );

    if ( !isdefined( level.active_hunt_symbol ) )
        return;
    else
        var_0 = level.active_hunt_symbol;

    if ( scripts\engine\utility::_id_9CEE( self.wearing_rat_king_eye ) )
    {
        if ( isdefined( self.symbol_hunt_fx ) )
            return;

        var_1 = spawnfxforclient( level._effect["test_glyph_mpq"], var_0.origin, self, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );
        self.symbol_hunt_fx = var_1;
        wait 0.05;
        triggerfx( var_1 );
    }
    else
    {
        if ( isdefined( self.symbol_hunt_fx ) )
            self.symbol_hunt_fx delete();

        return;
    }
}

reset_phone_puzzle()
{
    level.phone_puzzle_phone = undefined;
    scripts\engine\utility::_id_6E2A( "morse_code_heard" );
    level notify( "puzzle_phone_reset" );
    scripts\engine\utility::_id_6E2A( "skq_p2t2_1" );
    level thread _id_0A6A::_id_12885( "ww_magicbox_laughter", "rave_announcer_vo", "highest", 70, 0, 0, 1 );
    var_0 = scripts\engine\utility::_id_8180( "phonebooth", "script_noteworthy" );

    foreach ( var_2 in var_0 )
        var_2.quest_state = 0;

    scripts\cp\maps\cp_disco\phonebooth::update_all_phonebooth_scriptable_states();
    init_poster_nums( 1 );
    thread p2t2_1_phone_puzzle();
    thread p2t2_0_symbol_hunt( 1 );

    if ( !scripts\engine\utility::_id_6E25( "skq_p2t2_0" ) )
        scripts\engine\utility::_id_6E3E( "skq_p2t2_0" );
}

p2t2_1_phone_puzzle()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t2_1", "skq_p2t2_1dbg" );

    if ( !isdefined( level.phone_puzzle_phone ) )
    {
        var_1 = scripts\engine\utility::_id_8180( "phonebooth", "script_noteworthy" );
        var_1 = scripts\engine\utility::_id_22A8( var_1 );
        level.phone_puzzle_phone = var_1[0];
        thread payphone_ringing( level.phone_puzzle_phone );

        foreach ( var_3 in var_1 )
        {
            if ( var_3 != var_1[0] )
            {
                var_3.quest_state = 1;
                continue;
            }

            var_3.quest_state = 0;
        }

        scripts\cp\maps\cp_disco\phonebooth::update_all_phonebooth_scriptable_states();
    }

    level notify( "puzzle_phone_answered" );
    scripts\engine\utility::_id_6E4C( "morse_code_heard" );
    scripts\engine\utility::_id_6E3E( "skq_p2t2_3" );
}

play_phone_vo()
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    wait 0.5;
    thread _id_0A6A::_id_12885( "pam_answer_phone", "disco_comment_vo" );
}

payphone_ringing( var_0 )
{
    level endon( "game_ended" );
    var_1 = spawn( "script_model", var_0.origin + ( 0, 0, 50 ) );
    var_1 setmodel( "tag_origin" );
    var_1 playloopsound( "payphone_npc_ring" );
    var_0 waittill( "phone_answered", var_2 );
    level.player_answered_phone = var_2;
    var_1 delete();
}

p2t2_3_poster_puzzle()
{
    level endon( "game_ended" );
    var_0 = init_poster_nums( 0 );
    var_1 = spawnstruct();
    var_1._id_01B9 = getent( "spotlight_light", "targetname" );
    var_1.poster = getent( var_1._id_01B9._id_0334, "targetname" );
    var_1.fx_struct = scripts\engine\utility::_id_817E( var_1.poster._id_0334, "targetname" );
    var_1.poster hide();
    thread watch_for_spotlight_power( var_1 );
    var_2 = scripts\engine\utility::_id_6E4F( "skq_p2t2_3", "skq_p2t2_3dbg" );

    foreach ( var_4 in var_0 )
    {
        if ( var_4 == var_0[0] )
        {
            var_4 thread use_poster_logic( 1 );
            continue;
        }

        var_4 thread use_poster_logic( 0 );
    }

    scripts\engine\utility::_id_6E4C( "correct_poster_got" );

    foreach ( var_7 in level.players )
        var_7 thread _id_0A6A::_id_1769( "missing_item_misc", "disco_comment_vo", 200, 120, 4, 1 );

    var_9 = scripts\engine\utility::_id_8180( "phonebooth", "script_noteworthy" );

    foreach ( var_11 in var_9 )
        var_11.quest_state = 0;

    scripts\cp\maps\cp_disco\phonebooth::update_all_phonebooth_scriptable_states();
    scripts\engine\utility::_id_6E4C( "disco_roof power_on" );
    var_1.poster makeusable();
    var_1.poster waittill( "trigger" );
    level thread _id_0A6A::_id_E01F( "missing_item_misc" );
    var_1.poster setmodel( "cp_disco_poster_nightmare_summer_torn" );
    var_1.poster show();
    var_13 = scripts\engine\utility::_id_817E( "nade_toss_point", "targetname" );
    var_14 = spawn( "script_model", var_13.origin );
    var_14 setmodel( "zmb_rat" );
    var_14 setcandamage( 1 );
    var_14 waittill( "damage", var_15, var_16, var_17, var_18, var_19, var_20, var_21, var_22, var_23, var_24 );
    var_14 delete();
    scripts\engine\utility::_id_6E3E( "skq_p2t2_4" );
}

watch_for_spotlight_power( var_0 )
{
    level endon( "game_ended" );
    scripts\engine\utility::_id_6E4C( "disco_roof power_on" );
    playloopsound( ( -1638, 2988, 1305 ), "power_buy_powerup_lr" );
    playloopsound( var_0._id_01B9.origin, "power_buy_rooftop_spotlight_turn_on" );
    var_1 = var_0._id_01B9._id_01F1;
    var_0._id_01B9 setmodel( "cp_disco_searchlight_swivel_on" );
    var_2 = getentarray( "quest_light_fx", "targetname" );

    foreach ( var_4 in var_2 )
    {
        if ( isdefined( var_4 ) )
            var_4 setlightintensity( 150 );
    }

    var_6 = var_0.fx_struct;
    var_7 = spawnfx( level._effect["spotlight_flare"], var_6.origin + anglestoforward( var_6.angles ) * -15, anglestoforward( var_6.angles ), anglestoup( var_6.angles ) );
    wait 0.1;
    triggerfx( var_7 );
    var_0.poster waittill( "trigger" );

    foreach ( var_4 in var_2 )
    {
        if ( isdefined( var_4 ) )
            var_4 setlightintensity( 0 );
    }

    var_6 = scripts\engine\utility::_id_817E( "spotlight_x_marker", "targetname" );
    var_10 = undefined;

    if ( isdefined( var_6 ) )
    {
        playloopsound( ( -1096, 3287, 1222 ), "place_flyer_on_spotlight" );
        var_10 = spawnfx( level._effect["spotlight_x"], var_6.origin, anglestoforward( var_6.angles ), anglestoup( var_6.angles ) );
        wait 0.1;
        triggerfx( var_10 );
    }

    scripts\engine\utility::_id_6E4C( "skq_p2t2_4" );

    if ( isdefined( var_10 ) )
        var_10 delete();

    var_0._id_01B9 setmodel( var_1 );
    var_7 delete();
}

init_poster_nums( var_0 )
{
    level endon( "game_ended" );
    level endon( "reset_posters" );
    level endon( "correct_poster_got" );
    var_1 = getentarray( "mpq_poster_model", "targetname" );

    if ( !var_0 )
    {
        foreach ( var_3 in var_1 )
            var_3._id_C211 = getent( var_3._id_0334, "targetname" );
    }
    else
    {
        foreach ( var_3 in var_1 )
            var_3 notify( "reset_posters" );
    }

    var_1 = scripts\engine\utility::_id_22A8( var_1 );
    var_7 = [ "281", "407", "420", "596", "713", "818" ];
    var_7 = scripts\engine\utility::_id_22A8( var_7 );
    level.morse_number = var_7[0];
    var_8 = 0;

    foreach ( var_3 in var_1 )
    {
        if ( var_3 == var_1[0] )
        {
            var_3.model_num = level.morse_number;

            if ( var_0 )
                var_3 thread use_poster_logic( 1 );

            var_8++;
        }
        else
        {
            var_3.model_num = var_7[var_8];

            if ( var_8 + 1 >= var_7.size )
                var_8 = 1;
            else
                var_8++;

            if ( var_0 )
                var_3 thread use_poster_logic( 0 );
        }

        var_3._id_C211 setmodel( "cp_disco_film_registration_decal_" + var_3.model_num );
    }

    if ( !var_0 )
        return var_1;
}

use_poster_logic( var_0 )
{
    level endon( "game_ended" );
    scripts\engine\utility::_id_6E4C( "skq_p2t2_1" );
    self makeusable( 1 );
    self _meth_84A5( 45 );
    self _meth_84A2( 96 );
    var_1 = scripts\engine\utility::_id_13734( "trigger", "correct_poster_got", "reset_posters" );

    if ( var_1 == "correct_poster_got" || var_1 == "reset_posters" )
        return;

    if ( var_0 )
    {
        var_2 = getentarray( "mpq_poster_model", "targetname" );

        foreach ( var_4 in var_2 )
            var_4 notify( "correct_poster_got" );

        self._id_C211 delete();
        self delete();
        level _id_0A77::_id_F55F( 16 );
        scripts\engine\utility::_id_6E3E( "correct_poster_got" );
        level.phone_puzzle_phone = undefined;
    }
    else
        level thread reset_phone_puzzle();
}

empty_hint( var_0, var_1 )
{
    return "";
}

p2t2_4_kung_fu_fight()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t2_4", "skq_p2t2_4dbg" );
    var_1 = scripts\engine\utility::_id_817E( "kf_zombies_disco_roof", "targetname" );
    level.spotlight_roof_zoms = 0;
    var_1 mpq_spawn_special_wave( level.spotlight_roof_zoms, 10 );
    scripts\engine\utility::_id_6E3E( "skq_p2t2_5" );
}

p2t2_5_rat_king_puzzle()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t2_5", "skq_p2t2_5dbg" );
    var_1 = build_word_codex_list();
    solve_word_logic( var_1 );
}

solve_word_logic( var_0 )
{
    level endon( "game_ended" );
    var_1 = [];
    var_1[0] = scripts\engine\utility::_id_817E( "letter_puzzle_solve_struct", "targetname" );
    level.bchartoggle = 0;
    level.cur_puzzle_letter = undefined;
    level.rooftopcypherglyphs = [];

    while ( isdefined( var_1[var_1.size - 1]._id_0334 ) )
    {
        var_1[var_1.size] = scripts\engine\utility::_id_817E( var_1[var_1.size - 1]._id_0334, "targetname" );
        wait 0.05;
    }

    var_2 = 0;
    var_3 = thread setup_cipher_glyphs();
    var_4 = 0;
    wait 1;
    var_5 = determine_puzzle_wordlist( var_0 );
    var_6 = 0;
    var_7 = 0;

    while ( !var_2 )
    {
        if ( var_4 >= var_5.size )
        {
            var_4 = 0;
            var_5 = determine_puzzle_wordlist( var_0 );
            var_6 = 0;

            foreach ( var_9 in level.players )
                var_9 playlocalsound( "ww_magicbox_laughter" );

            wait_for_wave_change( 1 );
        }

        var_11 = 0;
        var_2 = 0;
        var_12 = undefined;
        var_13 = [];
        var_3 = [];
        var_14 = var_5[var_6];

        if ( !var_7 && randomint( 101 ) == 100 )
        {
            var_7 = 1;
            var_14 = "savagemadethis";
        }

        for (;;)
        {
            var_15 = getsubstr( var_14, var_11, var_11 + 1 );

            if ( !isdefined( var_15 ) || var_15 == "" )
            {
                var_2 = 1;
                break;
            }
            else
            {
                if ( var_11 != 0 )
                {
                    level.cur_puzzle_letter = var_15;
                    level.bchartoggle = 1;
                    level waittill( "puzzle_letter_shot", var_12 );

                    if ( var_12 != var_15 )
                    {
                        playloopsound( var_1[var_11].origin, "mpq_fail_buzzer" );
                        var_4++;
                        var_6++;

                        foreach ( var_17 in var_13 )
                            var_17 delete();

                        wait 0.2;
                        break;
                    }
                }

                var_13[var_11] = spawnfx( level._effect["magnet_alphabet_" + var_15], var_1[var_11].origin, anglestoforward( var_1[var_11].angles ), anglestoup( var_1[var_11].angles ) );
                wait 0.1;
                triggerfx( var_13[var_11] );
            }

            var_11++;
        }

        if ( var_2 )
            level thread delaydeleteletters( var_13 );
    }

    foreach ( var_17 in level.rooftopcypherglyphs )
    {
        if ( isdefined( var_17 ) )
            var_17 delete();
    }

    level.rooftopcypherglyphs = undefined;
    thread rk_symbol_handler( "rk_symbol_punk_rooftops", "skq_p2t2_6" );
}

delaydeleteletters( var_0 )
{
    level endon( "game_ended" );
    wait 5;

    foreach ( var_2 in var_0 )
        var_2 delete();
}

waittill_character_change()
{
    level endon( "game_ended" );

    while ( !level.bchartoggle )
        wait 0.1;

    level.bchartoggle = 0;
    return level.cur_puzzle_letter;
}

setup_cipher_glyphs()
{
    level endon( "game_ended" );
    level endon( "skq_p2t2_6" );
    var_0 = scripts\engine\utility::_id_8180( "letter_puzzle_struct", "script_noteworthy" );
    var_1 = getent( "letter_puzzle_clip", "targetname" );
    var_2 = [ "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z" ];

    foreach ( var_4 in var_0 )
        var_4.current_letter = undefined;

    var_6 = undefined;

    for (;;)
    {
        var_7 = [];
        var_8 = waittill_character_change();
        var_0 = scripts\engine\utility::_id_22A8( var_0 );
        var_2 = scripts\engine\utility::_id_22A8( var_2 );
        var_9 = 0;

        if ( isdefined( var_6 ) )
        {
            while ( var_0[0] == var_6 )
            {
                var_0 = scripts\engine\utility::_id_22A8( var_0 );
                wait 0.1;
            }
        }

        foreach ( var_4 in var_0 )
        {
            if ( !isdefined( var_4.angles ) )
                var_4.angles = ( 0, 0, 0 );

            if ( var_4 == var_0[0] )
            {
                var_6 = var_4;
                var_4.current_letter = var_8;
            }
            else
            {
                for ( var_11 = var_9; var_11 < 26; var_11++ )
                {
                    if ( var_2[var_11] != var_8 )
                    {
                        var_4.current_letter = var_2[var_11];
                        var_9++;
                        break;
                    }
                    else
                        var_9++;
                }
            }

            var_12 = spawnfx( level._effect["cipher_alphabet_" + var_4.current_letter], var_4.origin + anglestoforward( var_4.angles + ( 0, 90, 0 ) ) * -1, anglestoforward( var_4.angles ), anglestoup( var_4.angles ) );
            var_7[var_7.size] = var_12;
        }

        level.rooftopcypherglyphs = var_7;
        wait 0.1;

        foreach ( var_12 in var_7 )
            triggerfx( var_12 );

        var_4 = undefined;
        var_1 setcandamage( 1 );
        var_1.health = 999999;

        while ( !isdefined( var_4 ) )
        {
            var_1 waittill( "damage", var_16, var_17, var_16, var_4 );

            if ( !isplayer( var_17 ) )
            {
                var_4 = undefined;
                var_1.health = 999999;
                continue;
            }
        }

        var_1 setcandamage( 0 );
        var_0 = sortbydistance( var_0, var_4 );
        var_18 = var_0[0].current_letter;
        level notify( "puzzle_letter_shot", var_18 );

        foreach ( var_12 in var_7 )
            var_12 delete();
    }
}

p2t2_6_rat_king_fight()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_817E( "p2t2_6", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_6E4F( "skq_p2t2_6", "skq_p2t2_6dbg" );
    scripts\cp\maps\cp_disco\rat_king::spawn_rat_king( var_0.origin, var_0.angles, 1 );
    level thread scripts\cp\maps\cp_disco\cp_disco::enableratkingpas();
    setrkabilities_p2t2_6();

    foreach ( var_3 in level.players )
    {
        var_3 playsoundtoplayer( "quest_stage_completed_gong_lr", var_3 );

        if ( var_3._id_134FD == "p5_" )
        {
            var_3 thread _id_0A6A::_id_12885( "ww_ratking_spawn_p5", "rave_ww_vo", "highest", 70, 0, 0, 1 );
            continue;
        }

        var_3 thread _id_0A6A::_id_12885( "ww_ratking_spawn", "rave_ww_vo", "highest", 70, 0, 0, 1 );
    }

    if ( level.players.size == 4 )
        level thread play_rat_king_vo_discussion( 2 );

    level watchrkretreat( 1000 );
    thread createrelicinteraction( "brain" );
    scripts\cp\maps\cp_disco\kung_fu_mode::increase_trainer_interaction_progression();

    foreach ( var_3 in level.players )
        var_3 thread play_corresponding_vo( 2 );
}

play_corresponding_vo( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( !isplayer( self ) && !isdefined( self._id_134FD ) )
        return;

    var_1 = "";

    switch ( var_0 )
    {
        case 1:
            var_1 = "defeat_ratking_1";
            break;
        case 2:
            var_1 = "defeat_ratking_2";
            break;
        case 3:
            var_1 = "defeat_ratking_3";
            break;
    }

    thread _id_0A6A::_id_12885( var_1, "disco_comment_vo", "highest", 30, 1 );
    wait( _id_0A6A::_id_7C76( self._id_134FD + var_1 ) + 5 );
    thread _id_0A6A::_id_12885( "pam_quest_complete", "disco_comment_vo", "highest", 30, 1 );
}

createrelicinteraction( var_0 )
{
    level endon( "game_ended" );

    while ( isdefined( level.rat_king ) )
        scripts\engine\utility::waitframe();

    var_1 = spawnstruct();
    var_1.origin = getrelicspawnpos();
    var_1.script_noteworthy = "mpq_relics";
    var_1.name = "mpq_relics";
    var_1._id_EE79 = "default";
    var_1._id_E1B9 = 0;
    var_1._id_D776 = 1;
    var_1._id_109DA = undefined;
    var_2 = spawn( "script_model", var_1.origin + ( 0, 0, 4 ) );
    var_2 setmodel( "tag_origin_rk_relics" );

    if ( isdefined( var_1.angles ) )
        var_2.angles = var_1.angles;

    var_1._id_01F1 = var_2;
    var_1.relic = var_0;
    var_3 = scripts\engine\utility::_id_5D14( var_1.origin, 32, -100 );
    var_4 = spawnfx( level._effect["relic_active"], var_3 + ( 0, 0, 1 ) );
    var_1._id_7542 = var_4;
    triggerfx( var_4 );
    var_1._id_01F1 setscriptablepartstate( "rk_models", "active_" + var_1.relic );
    var_1 thread startrelicmoveloop( var_1, var_1._id_01F1 );
    _id_0A59::_id_175C( var_1 );
    var_1 thread hiderkrelicsduringrkfight( var_1 );
}

hiderkrelicsduringrkfight( var_0 )
{
    level endon( "game_ended" );
    scripts\engine\utility::_id_6E4C( "rk_fight_started" );
    var_0._id_01F1 hide();
    _id_0A59::_id_E019( var_0 );
    scripts\engine\utility::_id_6E5A( "rk_fight_started" );
    var_0._id_01F1 show();
    _id_0A59::_id_175C( var_0 );
}

startrelicmoveloop( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 endon( "death" );

    for (;;)
    {
        var_2 = 3;
        var_1 moveto( var_0.origin + ( 0, 0, 32 ), var_2 );
        wait( var_2 );
        var_1 moveto( var_0.origin, var_2 );
        wait( var_2 );
    }
}

getrelicspawnpos()
{
    if ( isdefined( level.rat_king_death_pos ) )
        var_0 = level.rat_king_death_pos;
    else
        var_0 = level.players[0].origin;

    if ( !isinactivevolume( var_0 ) )
        var_0 = getpositionnearclosestplayer( var_0 );

    var_1 = getclosestpointonnavmesh( var_0 ) + ( 0, 0, 4 );
    return var_1;
}

isinactivevolume( var_0 )
{
    if ( !isdefined( level._id_1646 ) )
        return 1;

    var_1 = sortbydistance( level._id_1646, var_0 );

    foreach ( var_3 in var_1 )
    {
        if ( ispointinvolume( var_0, var_3 ) )
            return 1;
    }

    return 0;
}

getpositionnearclosestplayer( var_0 )
{
    var_1 = scripts\engine\utility::_id_7E2E( var_0, level.players );
    return getclosestpointonnavmesh( scripts\engine\utility::_id_5D14( var_1.origin, 32, -100 ) );
}

mpqrelichintfunc( var_0, var_1 )
{
    return "";
}

mpqrelicusefunc( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_9CEE( var_1.kung_fu_mode ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_1._id_98F3 ) )
        return;

    switch ( var_0.relic )
    {
        case "brain":
            if ( !scripts\engine\utility::_id_6E25( "brain_picked" ) )
            {
                scripts\engine\utility::_id_6E3E( "brain_picked" );

                if ( var_1._id_134FD == "p5_" )
                    var_1 thread _id_0A6A::_id_12885( "ratking_brain", "disco_comment_vo" );
                else
                    var_1 thread _id_0A6A::_id_12885( "pam_collect_brain", "disco_comment_vo" );

                var_1 thread _id_0A6A::_id_1769( "pam_quest_return", "disco_comment_vo", 120, 120, 4, 1 );
                level _id_0A77::_id_F55F( 17 );
                level _id_0A77::set_completed_quest_mark( 2 );
                var_0._id_01F1 thread cleanupmpqbrain( var_0, var_1 );
            }

            break;
        case "heart":
            if ( !scripts\engine\utility::_id_6E25( "heart_picked" ) )
            {
                scripts\engine\utility::_id_6E3E( "heart_picked" );

                if ( var_1._id_134FD == "p5_" )
                    var_1 thread _id_0A6A::_id_12885( "ratking_heart", "disco_comment_vo" );
                else
                    var_1 thread _id_0A6A::_id_12885( "pam_collect_heart", "disco_comment_vo" );

                var_1 thread _id_0A6A::_id_1769( "pam_quest_return", "disco_comment_vo", 120, 120, 4, 1 );
                level _id_0A77::_id_F55F( 7 );
                level _id_0A77::set_completed_quest_mark( 1 );
            }

            if ( !scripts\engine\utility::_id_9CEE( var_1.has_heart ) )
            {
                var_1 _id_0D15::_id_8397( "power_heart", "primary", undefined, undefined, undefined, undefined, 1 );
                var_0._id_01F1 thread cleanupmpqrelic( var_0, var_1 );
            }

            break;
        case "eye":
            if ( !scripts\engine\utility::_id_6E25( "eye_picked" ) )
            {
                scripts\engine\utility::_id_6E3E( "eye_picked" );
                var_1 thread _id_0A6A::_id_12885( "pam_collect_eye", "disco_comment_vo" );
                var_1 thread _id_0A6A::_id_1769( "pam_quest_return", "disco_comment_vo", 120, 120, 4, 1 );
                level _id_0A77::_id_F55F( 13 );
                level _id_0A77::set_completed_quest_mark( 4 );
            }

            if ( !scripts\engine\utility::_id_9CEE( var_1.has_eye ) )
            {
                var_1 _id_0D15::_id_8397( "power_rat_king_eye", "secondary", undefined, undefined, undefined, 1, 1 );
                var_0._id_01F1 thread cleanupmpqrelic( var_0, var_1 );
            }

            break;
    }
}

cleanupmpqbrain( var_0, var_1 )
{
    var_0 notify( "clean_up_relic" );
    _id_0A59::_id_E019( var_0 );
    var_0._id_01F1 setscriptablepartstate( "interactions", "pickup" );
    wait 0.5;

    if ( isdefined( var_0._id_7542 ) )
        var_0._id_7542 delete( var_1 );

    if ( isdefined( var_0._id_01F1 ) )
        var_0._id_01F1 delete( var_1 );
}

cleanupmpqrelic( var_0, var_1 )
{
    var_0 notify( "clean_up_relic" );
    var_0._id_01F1 setscriptablepartstate( "interactions", "pickup_" + var_0.relic );
}

setrkabilities_p2t2_6()
{
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "teleport", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "melee_attack", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "shield_attack", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "summon", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "block", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "staff_stomp", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "staff_projectile", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "shield_attack_spot", 0 );
    level.rat_king_attack_priorities = [];
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "shield_attack";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "melee_attack";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "teleport";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "summon";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "staff_stomp";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "staff_projectile";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "block";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "shield_attack_spot";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "attack_zombies";
}

p2t2_7_complete_task()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t2_7", "skq_p2t2_7dbg" );
    scripts\cp\maps\cp_disco\kung_fu_mode::disable_trainer_interactions();

    foreach ( var_2 in level.players )
    {
        var_2 thread _id_0A6A::_id_12885( "pam_quest_ratking_heart", "pam_dialogue_vo", "highest", 100, 1 );

        if ( var_2._id_134FD == "p5_" )
            var_2 thread play_pam_reaction_vo( "pam_quest_ratking_heart", 0, 1, 0 );
    }

    scripts\engine\utility::_id_6E3E( "skq_p2t3_0" );
}

play_pam_reaction_vo( var_0, var_1, var_2, var_3 )
{
    self endon( "disconnect" );
    wait( _id_0A6A::_id_7C76( var_0 ) );

    if ( scripts\engine\utility::_id_9CEE( var_1 ) )
        thread _id_0A6A::_id_12885( "pam_instuctions_rat_eye", "disco_comment_vo" );
    else if ( scripts\engine\utility::_id_9CEE( var_2 ) )
        thread _id_0A6A::_id_12885( "pam_instuctions_rat_heart", "disco_comment_vo" );
    else
        thread _id_0A6A::_id_12885( "pam_instuctions_rat_brain", "disco_comment_vo" );
}

phase_2_task_3()
{
    thread p2t3_0_missing_reel();
    thread p2t3_1_turnstile_puzzle();
    thread p2t3_2_chi_symbol();
    thread p2t3_3_disco_fever();
    thread p2t3_4_final_chi_door();
    thread p2t3_5_rat_king_fight();
    thread p2t3_6_complete_task();
}

p2t3_0_missing_reel()
{
    level endon( "game_ended" );
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t3_0", "skq_p2t3_0dbg" );

    if ( issubstr( var_0, "dbg" ) )
    {

    }
    else
        wait_for_wave_change( 3, 1 );

    wait 35;
    var_1 = 0;

    while ( !var_1 )
    {
        var_1 = 1;

        foreach ( var_3 in level.players )
        {
            if ( isdefined( level.clock_interaction ) && isdefined( level.clock_interaction.clock_owner ) && level.clock_interaction.clock_owner == var_3 )
                var_1 = 0;

            if ( isdefined( level.clock_interaction_q2 ) && isdefined( level.clock_interaction_q2.clock_owner ) && level.clock_interaction_q2.clock_owner == var_3 )
                var_1 = 0;

            if ( isdefined( level.clock_interaction_q3 ) && isdefined( level.clock_interaction_q3.clock_owner ) && level.clock_interaction_q3.clock_owner == var_3 )
                var_1 = 0;

            if ( scripts\engine\utility::_id_9CEE( var_3.isfasttravelling ) || scripts\engine\utility::_id_9CEE( var_3._id_9C54 ) )
                var_1 = 0;
        }

        if ( scripts\engine\utility::_id_9CEE( level.gns_active ) )
            var_1 = 0;

        wait 0.1;
    }

    var_5 = scripts\engine\utility::_id_8180( "missing_reel_tp_struct", "targetname" );
    var_6 = getent( "missing_reel_fire_trig", "targetname" );
    var_7 = scripts\engine\utility::_id_8180( "missing_reel_fire_struct", "targetname" );
    stop_spawn_wave();

    foreach ( var_3 in level.players )
        var_3 playlocalsound( "bink_ducking_alias" );

    _id_0A77::play_bink_video( "MissingReel", 8, 1 );
    clear_existing_enemies();
    var_10 = 0;

    foreach ( var_3 in level.players )
    {
        if ( var_3 _id_0A77::_id_9FA2() )
            var_3 _id_0A77::_id_1C5E( 0 );

        thread missing_reel_pickup_players( var_5[var_10], var_3 );
        var_10++;
    }

    thread missing_reel_fire_fx( var_7 );
    var_6 thread missing_reel_trigger_damage( var_5 );
    wait 7;
    level._id_13BD3 = level._id_13BD3 + randomintrange( 2, 4 );

    foreach ( var_3 in level.players )
        var_3 setclientomnvar( "zombie_wave_number", level._id_13BD3 );

    thread spawn_missing_reel_wave( var_5 );
    wait 1;
    scripts\engine\utility::_id_6E59( "reel_zoms_beaten", 60 );
    scripts\engine\utility::_id_6E3E( "cleanup_reel_assets" );

    foreach ( var_16 in level.players )
    {
        if ( !var_16 _id_0A77::_id_9FA2() )
            var_16 _id_0A77::_id_1C5E( 1 );
    }

    scripts\engine\utility::_id_6E2A( "pause_wave_progression" );
    level._id_13FA3 = 0;
    level.dont_resume_wave_after_solo_afterlife = 0;
    var_6._id_12778 = 1;
    var_6 notify( "trigger_off" );
    var_5 = scripts\engine\utility::_id_22A8( var_5 );
    var_18 = scripts\engine\utility::_id_5D14( var_5[0].origin, 30, -100 );
    var_19 = spawn( "script_model", var_18 + ( 0, 0, 32 ) );
    var_20 = scripts\engine\utility::_id_107E6( var_19.origin + anglestoforward( var_19.angles ) * 2, ( 0, 0, 0 ) );
    var_19 setmodel( "tag_origin" );
    var_19 linkto( var_20 );
    var_20 thread spin_linker_turnstile( var_19 );
    wait 0.5;
    playfxontag( level._effect["turnstile_arm"], var_19, "tag_origin" );
    var_19 makeusable();
    var_19 waittill( "trigger", var_3 );

    if ( isdefined( var_3 ) && isplayer( var_3 ) )
    {
        var_3 thread _id_0A6A::_id_12885( "pam_collect_turnstile", "disco_comment_vo" );
        var_3 thread _id_0A6A::_id_1769( "missing_item_misc", "disco_comment_vo", 200, 120, 4, 1 );
    }

    level _id_0A77::_id_F55F( 9 );
    var_19 delete();
    var_20 delete();
    scripts\engine\utility::_id_6E3E( "skq_p2t3_1" );
}

missing_reel_pickup_players( var_0, var_1 )
{
    wait 1;
    var_0.tp_active = 1;

    if ( scripts\engine\utility::_id_9CEE( var_1._id_98F3 ) || scripts\engine\utility::_id_9CEE( var_1._id_9387 ) )
    {
        var_1 notify( "arcade_special_interrupt" );
        var_1.ignoreselfrevive = 1;
        _id_0A5B::_id_4164( var_1 );
        var_1 notify( "revive_success" );

        if ( isdefined( var_1._id_E4A9 ) )
            var_1._id_E4A9 notify( "revive_success" );

        wait 6;

        if ( isdefined( var_1._id_B0A0 ) )
            _id_0D50::_id_E2CD( var_1 );
    }

    var_1 setorigin( var_0.origin );
    var_1 setplayerangles( var_0.angles );
    var_1.missing_reel = 1;
    var_1.ignoreselfrevive = undefined;
}

spin_linker_turnstile( var_0 )
{
    var_0 endon( "trigger" );

    for (;;)
    {
        self _meth_8271( 360, 2, 0, 0 );
        wait 2;
    }
}

spawn_missing_reel_wave( var_0 )
{
    level.reel_zombies = 0;
    var_1 = [];
    var_2 = 0;

    foreach ( var_4 in var_0 )
    {
        if ( isdefined( var_4.tp_active ) )
        {
            var_5 = scripts\engine\utility::_id_8180( var_4._id_0334, "targetname" );
            var_6 = 6;
            var_6 = var_6 - floor( level.players.size / 2 );
            var_6 = int( var_6 );

            foreach ( var_8 in var_5 )
            {
                if ( var_6 <= 0 )
                    break;

                var_9 = scripts\engine\utility::_id_5D14( var_8.origin, 30, -100 );
                var_10 = spawnstruct();
                var_10.origin = var_9;
                var_11 = var_10 _id_0D61::_id_1081B( "generic_zombie", 1 );
                var_1[var_1.size] = var_11;
                _id_0D61::_id_93EB( 1 );
                var_2++;
                var_6--;
            }
        }
    }

    for (;;)
    {
        var_14 = 1;

        foreach ( var_11 in var_1 )
        {
            if ( isdefined( var_11 ) && isalive( var_11 ) )
            {
                var_14 = 0;
                break;
            }
        }

        if ( var_14 )
            break;

        wait 0.1;
    }

    scripts\engine\utility::_id_6E3E( "reel_zoms_beaten" );
    _id_0D61::_id_4FB8( var_2 );
}

teleport_zoms( var_0 )
{
    var_1 = scripts\engine\utility::_id_8180( self._id_0334, "targetname" );
    var_2 = 0;

    foreach ( var_4 in var_0 )
    {
        var_4 scripts\cp\zombies\cp_disco_spawning::_id_BC94( var_1[var_2] );

        if ( var_2 + 1 == var_1.size )
        {
            var_2 = 0;
            continue;
        }

        var_2++;
    }
}

missing_reel_fire_fx( var_0 )
{
    level endon( "game_ended" );
    var_1 = [];

    foreach ( var_3 in var_0 )
        var_1[var_1.size] = spawnfx( level._effect["vfx_zb_carfire_b"], var_3.origin, anglestoforward( var_3.angles ), anglestoup( var_3.angles ) );

    wait 0.1;

    foreach ( var_6 in var_1 )
        triggerfx( var_6 );

    scripts\engine\utility::_id_6E4C( "cleanup_reel_assets" );

    foreach ( var_6 in var_1 )
        var_6 delete();
}

missing_reel_trigger_damage( var_0 )
{
    level endon( "game_ended" );
    level endon( "cleanup_reel_assets" );
    var_1 = 0;
    thread damage_reel_trigger_solo();

    for (;;)
    {
        level waittill( "connected", var_2 );
        var_2 setorigin( var_0[var_1].origin );
        var_2 setplayerangles( var_0[var_1].angles );
        var_2 thread damage_reel_trigger_solo( self );

        if ( var_1 == 3 )
        {
            var_1 = 0;
            continue;
        }

        var_1++;
    }
}

damage_reel_trigger_solo()
{
    level endon( "game_ended" );
    level endon( "cleanup_reel_assets" );

    for (;;)
    {
        self waittill( "trigger", var_0 );
        var_0 _meth_80B0( var_0.health * 2, self.origin );
    }
}

p2t3_1_turnstile_puzzle()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t3_1", "skq_p2t3_1dbg" );
    var_1 = getent( "window_cover", "targetname" );
    var_1.ogpos = var_1.origin;
    var_2 = getent( "window_cover_struct_clip", "targetname" );
    var_3 = 25;
    thread turnstile_glyph_logic();
    scripts\engine\utility::_id_6E4C( "turnstile_done" );
    level thread _id_0A6A::_id_E01F( "missing_item_misc" );
    var_1 _meth_8212( 60, 8, 3, 3 );
    scripts\engine\utility::_id_6E4C( "turnstyle_glyph_hit" );
    var_4 = var_1.ogpos[2] - var_1.origin[2];
    var_1 _meth_8212( var_4, 1, 0, 0 );
    scripts\engine\utility::_id_6E3E( "skq_p2t3_2" );
}

turnstile_glyph_logic()
{
    var_0 = scripts\engine\utility::_id_817E( "window_cover_struct", "targetname" );
    var_1 = getent( "window_cover_struct_clip", "targetname" );
    var_2 = spawnfx( level._effect["test_glyph_mpq"], var_0.origin, anglestoforward( var_0.angles ), anglestoup( var_0.angles ) );
    scripts\engine\utility::_id_6E4C( "turnstile_done" );
    triggerfx( var_2 );
    var_1 setcandamage( 1 );
    var_1.health = 9999;
    var_1 waittill( "damage" );
    var_2 delete();
    scripts\engine\utility::_id_6E3E( "turnstyle_glyph_hit" );
    wait 2;
    _id_0A77::deactivatebrushmodel( var_1, 1 );
}

init_turnstile()
{
    var_0 = scripts\engine\utility::_id_817E( "turnstile", "script_noteworthy" );
    var_0._id_86A2 = "locoverride";
    scripts\cp\maps\cp_disco\cp_disco::addtopersonalinteractionlist( var_0 );
    level.special_mode_activation_funcs["turnstile"] = ::setup_turnstile;
    level.normal_mode_activation_funcs["turnstile"] = ::setup_turnstile;
}

setup_turnstile( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_6E25( "skq_p2t3_2" ) || scripts\engine\utility::_id_6E25( "turnstile_done" ) )
        var_0 setmodel( "cp_disco_subway_turnstyle_animated" );
    else
        var_0 setmodel( "cp_disco_subway_turnstyle_missing_arm" );
}

use_turnstile( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "skq_p2t3_1" ) && !scripts\engine\utility::_id_6E25( "turnstile_done" ) )
    {
        var_2 = var_0.currentlyownedby[var_1.name];
        var_2 setmodel( "cp_disco_subway_turnstyle_animated" );
        playloopsound( var_2.origin, "disco_turnstile" );
        var_2 scriptmodelplayanim( "IW7_cp_turnstyle_rotate" );
        scripts\engine\utility::_id_6E3E( "turnstile_done" );

        foreach ( var_1 in level.players )
            var_1 _id_0D2A::_id_12D7C( "MESSAGE_RECEIVED", 1 );

        wait 2;
        var_2 scriptmodelclearanim();
    }
}

p2t3_2_chi_symbol()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t3_2", "skq_p2t3_2dbg" );
    level.task3ring_fxstruct = scripts\engine\utility::_id_817E( "task_3_ring_struct", "targetname" );
    var_1 = randomintrange( 6, 10 );
    zombie_challenge_ring( var_1, level.task3ring_fxstruct );
    var_2 = 5;

    for ( var_3 = 0; var_3 < var_2; var_3++ )
    {
        next_ring_struct();
        var_1 = randomintrange( 6, 10 );
        zombie_challenge_ring( var_1, level.task3ring_fxstruct );
    }

    level notify( "task3RingDone" );

    foreach ( var_5 in level.players )
        var_5 playsoundtoplayer( "quest_stage_completed_gong_lr", var_5 );

    wait 1;
    scripts\engine\utility::_id_6E3E( "skq_p2t3_3" );
}

next_ring_struct()
{
    var_0 = scripts\engine\utility::_id_8180( "task_3_ring_struct_rand", "targetname" );
    var_0 = scripts\engine\utility::_id_22A8( var_0 );

    foreach ( var_2 in var_0 )
    {
        if ( level.task3ring_fxstruct != var_2 )
        {
            level.task3ring_fxstruct = var_2;
            return;
        }
    }
}

ring_explode_zombies()
{
    level endon( "task3RingDone" );
    self endon( "death" );
    var_0 = 1.5;
    var_1 = 0.3;
    var_2 = var_0 / var_1;

    for (;;)
    {
        var_3 = 1;

        if ( distancesquared( level.task3ring_fxstruct.origin, self.origin ) <= 30625 )
        {
            for ( var_4 = 0; var_4 < var_2; var_4++ )
            {
                wait( var_1 );

                if ( distancesquared( level.task3ring_fxstruct.origin, self.origin ) > 30625 )
                {
                    var_3 = 0;
                    break;
                }
            }

            if ( var_3 )
                break;
        }

        wait 0.1;
    }

    level notify( "ring_kill" );
    self.atomize_me = 1;
    self _meth_80B0( self.health * 2, level.task3ring_fxstruct.origin );
}

p2t3_3_disco_fever()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t3_3", "skq_p2t3_3dbg" );
    scripts\engine\utility::_id_6E4C( "fever_started" );
    var_1 = 10;
    var_2 = undefined;
    var_3 = 1;
    var_4 = scripts\engine\utility::_id_817E( "disco_fever_spawn_struct", "targetname" );

    for (;;)
    {
        if ( isdefined( var_2 ) )
        {
            var_1--;

            if ( var_1 <= 0 )
                break;

            var_5 = var_2;

            if ( isdefined( var_5 ) )
            {
                var_5._id_0180 = 1;
                var_5._id_5273 = ( 0, 0, 0 );
                var_5.bhasdiscofever = 1;
                var_5.dontmutilate = 1;
                var_5 _meth_841F();
                var_5 thread handle_fx_for_fever();
                var_5 waittill( "death" );
                var_2 = find_near_disco_zombie( var_4.origin );
            }
            else
                var_2 = undefined;

            continue;
        }

        if ( var_3 )
            var_3 = 0;
        else
        {
            level notify( "update_fx" );
            wait 10;
        }

        var_1 = 10;

        for ( var_5 = undefined; !isdefined( var_5 ); var_5 = spawn_fever_zombie() )
            wait 0.05;

        var_5 _meth_841F();
        var_5 thread handle_fx_for_fever();
        var_5 waittill( "death" );
        var_2 = find_near_disco_zombie( var_4.origin );
    }

    scripts\engine\utility::_id_6E3E( "skq_p2t3_4" );
}

handle_fx_for_fever()
{
    self endon( "death" );
    wait 0.15;
    playfxontag( level._effect["disco_fever"], self, "tag_origin" );
    thread setfevereffectsonhostmigration();
}

setfevereffectsonhostmigration()
{
    self endon( "death" );
    self endon( "disconnect" );
    level waittill( "host_migration_begin" );
    level waittill( "host_migration_end" );

    if ( !scripts\engine\utility::_id_6E25( "skq_p2t3_4" ) )
        playfxontag( level._effect["disco_fever"], self, "tag_origin" );
}

find_near_disco_zombie( var_0 )
{
    var_1 = getent( "disco_fever_vol", "targetname" );
    var_2 = [];

    foreach ( var_4 in level._id_1084F )
    {
        if ( isdefined( var_4._id_565C ) && var_4._id_565C )
            continue;

        if ( isdefined( var_4.agent_type ) && var_4.agent_type == "karatemaster" || var_4.agent_type == "skater" )
            continue;

        var_2[var_2.size] = var_4;
    }

    var_6 = sortbydistance( var_2, var_0 );

    if ( isdefined( var_6[0] ) && var_6[0] istouching( var_1 ) )
        return var_6[0];
    else
        return undefined;
}

spawn_fever_zombie()
{
    var_0 = scripts\engine\utility::_id_817E( "disco_fever_spawn_struct", "targetname" );
    var_1 = scripts\engine\utility::_id_5D14( var_0.origin, 30, -100 );
    var_2 = spawnstruct();
    var_2.origin = var_1;
    var_2._id_ECF5 = undefined;
    var_2._id_EE79 = undefined;
    var_3 = var_2 _id_0D61::_id_1081B( "generic_zombie", 1 );

    if ( !isdefined( var_3 ) )
        return undefined;

    var_3.dontmutilate = 1;
    var_3._id_0180 = 1;
    var_3._id_5273 = ( 0, 0, 0 );
    var_3.bhasdiscofever = 1;
    return var_3;
}

init_turntable()
{
    var_0 = scripts\engine\utility::_id_817E( "disco_fever_interact", "script_noteworthy" );
    var_0._id_86A2 = "locoverride";
    scripts\cp\maps\cp_disco\cp_disco::addtopersonalinteractionlist( var_0 );
    level.special_mode_activation_funcs["disco_fever_interact"] = ::setup_turntable;
    level.normal_mode_activation_funcs["disco_fever_interact"] = ::setup_turntable;
}

setup_turntable( var_0, var_1, var_2, var_3 )
{
    var_0 setmodel( "cp_disco_record_02" );

    if ( scripts\engine\utility::_id_6E25( "skq_p2t3_3" ) || scripts\engine\utility::_id_6E25( "skq_p2t3_3dbg" ) )
        var_0 thread rotate_platter( var_3 );
}

rotate_platter( var_0 )
{
    var_0 endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "p_ent_reset" );

    while ( self._id_01F1 == "cp_disco_record_02" )
    {
        self _meth_8271( 360, 1.5, 0, 0 );
        wait 1.5;
    }
}

discofeverhintfunc( var_0, var_1 )
{
    var_1._id_9A3F _meth_83D6( 0 );
    var_1._id_9A3F _meth_84A5( 360 );
    return "";
}

use_turntable( var_0, var_1 )
{
    if ( scripts\engine\utility::_id_6E25( "skq_p2t3_3" ) && !scripts\engine\utility::_id_6E25( "fever_started" ) )
        scripts\engine\utility::_id_6E3E( "fever_started" );
}

p2t3_4_final_chi_door()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t3_4", "skq_p2t3_4dbg" );
    thread rk_symbol_handler( "rk_symbol_disco_streets", "skq_p2t3_5" );
}

p2t3_5_rat_king_fight()
{
    var_0 = scripts\engine\utility::_id_817E( "p2t3_5", "script_noteworthy" );
    var_1 = scripts\engine\utility::_id_6E4F( "skq_p2t3_5", "skq_p2t3_5dbg" );
    scripts\cp\maps\cp_disco\rat_king::spawn_rat_king( var_0.origin, var_0.angles, 1 );
    level thread scripts\cp\maps\cp_disco\cp_disco::enableratkingpas();
    setrkabilities_p2t3_5();

    foreach ( var_3 in level.players )
    {
        var_3 playsoundtoplayer( "quest_stage_completed_gong_lr", var_3 );

        if ( var_3._id_134FD == "p5_" )
        {
            var_3 thread _id_0A6A::_id_12885( "ww_ratking_spawn_p5", "rave_ww_vo", "highest", 70, 0, 0, 1 );
            continue;
        }

        var_3 thread _id_0A6A::_id_12885( "ww_ratking_spawn", "rave_ww_vo", "highest", 70, 0, 0, 1 );
    }

    if ( level.players.size == 4 )
        level thread play_rat_king_vo_discussion( 3 );

    level watchrkretreat( 2500 );
    thread createrelicinteraction( "heart" );
    scripts\cp\maps\cp_disco\kung_fu_mode::increase_trainer_interaction_progression();

    foreach ( var_3 in level.players )
        var_3 thread play_corresponding_vo( 3 );
}

setrkabilities_p2t3_5()
{
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "teleport", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "melee_attack", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "staff_stomp", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "staff_projectile", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "summon", 1 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "block", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "shield_attack", 0 );
    scripts\cp\maps\cp_disco\rat_king_fight::togglerkability( "shield_attack_spot", 0 );
    level.rat_king_attack_priorities = [];
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "staff_projectile";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "staff_stomp";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "melee_attack";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "summon";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "teleport";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "shield_attack";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "shield_attack_spot";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "attack_zombies";
    level.rat_king_attack_priorities[level.rat_king_attack_priorities.size] = "block";
}

p2t3_6_complete_task()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_p2t3_6", "skq_p2t3_6dbg" );
    level thread watchforallplayersinroom();
}

watchforallplayersinroom()
{
    level endon( "game_Ended" );
    var_0 = getent( "slime_pool", "targetname" );

    for (;;)
    {
        wait 0.1;
        var_0 waittill( "trigger", var_1 );

        if ( !isplayer( var_1 ) )
            continue;

        var_2 = 1;

        if ( isdefined( level.clock_interaction ) && scripts\engine\utility::_id_9CEE( level.clock_interaction.clock_active ) )
            continue;

        if ( isdefined( level.clock_interaction_q2 ) && scripts\engine\utility::_id_9CEE( level.clock_interaction_q2.clock_active ) )
            continue;

        if ( isdefined( level.clock_interaction_q3 ) && scripts\engine\utility::_id_9CEE( level.clock_interaction_q3.clock_active ) )
            continue;

        foreach ( var_4 in level.players )
        {
            if ( scripts\engine\utility::_id_9CEE( var_4._id_9F2A ) )
            {
                var_2 = 0;
                break;
            }

            if ( scripts\engine\utility::_id_9CEE( var_4.isfasttravelling ) )
            {
                var_2 = 0;
                break;
            }

            if ( scripts\engine\utility::_id_9CEE( var_4._id_9C54 ) )
            {
                var_2 = 0;
                break;
            }
        }

        if ( var_2 )
            break;
    }

    scripts\engine\utility::_id_6E3E( "skq_phase_3" );
}

phase_3()
{
    var_0 = scripts\engine\utility::_id_6E4F( "skq_phase_3", "skq_phase_3dbg" );
    level scripts\cp\maps\cp_disco\rat_king_fight::start_rk_fight();
}

mpq_spawn_special_wave( var_0, var_1, var_2, var_3, var_4 )
{
    level endon( "game_ended" );
    var_0 = var_1;
    var_5 = 0;
    var_6 = undefined;
    var_7 = undefined;
    var_8 = undefined;
    var_9 = undefined;

    if ( _id_0D61::_id_C209() < var_1 )
    {
        var_6 = level._id_4B6E;
        var_7 = level._id_B467;
        var_8 = level._id_5274;
        var_9 = level._id_13BD3;

        while ( level._id_4B6E == level._id_5274 )
            wait 0.05;

        level._id_4B6E = 0;
        level._id_5274 = 24;
        level._id_10942 = 1;
        scripts\engine\utility::_id_6E3E( "pause_wave_progression" );
        level._id_13FA3 = 1;
        var_5 = 1;
    }

    if ( isdefined( var_2 ) )
        playloopsound( self.origin, var_2 );

    if ( isdefined( var_3 ) )
        playfx( level._effect[var_3], self.origin );

    var_10 = _func_275( self.origin, 1024, var_1 );
    _id_0D61::_id_93EB( var_1 );
    wait 2;
    var_11 = skeleton_spawner( var_10, var_0, var_4 );

    if ( isdefined( var_4 ) )
        return var_11;

    wait_for_skeleton_death_or_timeout( var_11, 300 );
    self.finished_final_part = 1;

    if ( var_5 )
    {
        level._id_10847 = undefined;
        level._id_13BD6 = undefined;
        level._id_10942 = undefined;
        level._id_13FA3 = 0;
        scripts\engine\utility::_id_6E2A( "pause_wave_progression" );

        if ( level._id_13BD3 == var_9 )
        {
            level._id_4B6E = var_6;
            level._id_B467 = var_7;
            level._id_5274 = var_8;
        }
        else
        {
            level._id_4B6E = 0;
            level._id_B467 = _id_0D61::_id_7ACD( level._id_13BD3 );
            level._id_5274 = _id_0D61::_id_7D10( level._id_13BD3 );
        }
    }

    _id_0D61::_id_4FB8( var_1 );
    return 1;
}

wait_for_skeleton_death_or_timeout( var_0, var_1 )
{
    level endon( "skeleton_timeout" );
    level thread _id_C128( "skeleton_timeout", var_1 );

    for (;;)
    {
        var_2 = 1;
        var_3 = 0;

        foreach ( var_5 in var_0 )
        {
            if ( isdefined( var_5 ) && isalive( var_5 ) && isdefined( var_5.agent_type ) && var_5.agent_type == "karatemaster" )
            {
                var_2 = 0;
                var_3++;
            }
        }

        if ( var_2 )
            break;
        else
        {

        }

        wait 0.5;
    }
}

_id_C128( var_0, var_1 )
{
    wait( var_1 );
    self notify( var_0 );
}

determine_best_shovel_spawns( var_0, var_1 )
{
    var_2 = [];
    var_3 = scripts\engine\utility::_id_8180( "camper_to_lake_spawner", "targetname" );
    var_3 = sortbydistance( var_3, var_0 );

    for ( var_4 = 0; var_4 < var_1; var_4++ )
        var_2[var_4] = var_3[var_4];

    var_5 = scripts\engine\utility::_id_22A8( var_2 );
    return var_2;
}

get_rand_point( var_0 )
{
    while ( ![[ level._id_164B ]]( var_0 ) )
    {
        var_0 = _func_274( var_0, 64 );
        scripts\engine\utility::waitframe();
    }

    return var_0;
}

skeleton_spawner( var_0, var_1, var_2 )
{
    var_3 = [];

    for ( var_4 = 0; var_4 < var_0.size; var_4++ )
    {
        var_0[var_4] = get_rand_point( var_0[var_4] );
        var_5 = spawn_skeleton_solo( var_0[var_4], var_2 );

        if ( isdefined( var_5 ) )
        {
            var_5 thread skeleton_death_watcher( var_1 );
            var_3[var_3.size] = var_5;
            var_5 thread set_skeleton_attributes();
            wait 1;
            continue;
        }

        var_1--;
    }

    return var_3;
}

skeleton_death_watcher( var_0 )
{
    level endon( "game_ended" );
    self waittill( "death" );
    var_0--;
}

spawn_skeleton_solo( var_0, var_1 )
{
    var_0 = scripts\engine\utility::_id_5D14( var_0, 30, -100 );
    var_2 = spawnstruct();
    var_2.origin = var_0;
    var_2._id_EE79 = "ground_spawn_no_boards";
    var_2._id_ECF5 = "spawn_ground";
    var_3 = 4;
    var_4 = 0.3;

    for ( var_5 = 0; var_5 < var_3; var_5++ )
    {
        if ( isdefined( var_1 ) )
        {
            var_2._id_ECF5 = undefined;
            var_2._id_EE79 = undefined;
            var_6 = var_2 _id_0D61::_id_1081B( var_1, 1 );
        }
        else
            var_6 = var_2 _id_0D61::_id_1081B( "karatemaster", 1 );

        wait( var_4 );

        if ( isdefined( var_6 ) )
            return var_6;
    }

    return undefined;
}

set_skeleton_attributes()
{
    level endon( "game_ended" );
    self endon( "death" );
    self.dont_cleanup = 1;
    self._id_01F5 = "sprint";
    self.is_skeleton = 1;
    self.health = 800;
    self.maxhealth = 800;
    self waittill( "intro_vignette_done" );
    self.health = scripts\cp\zombies\cp_disco_spawning::_id_3728( "karatemaster" );
}

skeleton_arrival_cowbell( var_0 )
{
    var_1 = ( 0, 0, -11 );
    var_2 = spawnfx( level._effect["superslasher_summon_zombie_portal"], var_0 + var_1, ( 0, 0, 1 ), ( 1, 0, 0 ) );
    triggerfx( var_2 );
    scripts\engine\utility::waittill_any( "death", "intro_vignette_done" );
    var_2 delete();
}

build_word_codex_list()
{
    var_0 = [];
    var_0["rave"] = [];
    var_0["spaceland"] = [];
    var_0["disco"] = [];
    var_0["disco2"] = [];
    var_0["extinction"] = [];
    var_0["willard"] = [];
    var_0["characters"] = [];
    var_0["rave"] = [ "harpoon", "trees", "dance", "basement", "slasher", "memories", "charms", "boat", "kevinsmith", "fairies" ];
    var_0["spaceland"] = [ "brute", "octonian", "rollercoaster", "arcade", "slide", "geyser", "zapper", "forgefreeze", "bumpercars", "yetieyes" ];
    var_0["disco"] = [ "rollerskates", "katana", "kungfu", "nunchucks", "dragon", "crane", "snake", "tiger", "pamgrier", "arthur" ];
    var_0["disco2"] = [ "disco", "ratking", "subway", "punks", "blackcat", "pinkcat", "inferno", "mcintosh", "staff", "shield" ];
    var_0["extinction"] = [ "cryptid", "drcross", "hives", "ancestor", "breeder", "kraken", "obelisk", "davidarcher", "nightfall", "samantha" ];
    var_0["willard"] = [ "shuffle", "winonawyler", "director", "death", "redwoods", "mephistopheles", "sixtymillion", "afterlife", "spaceland", "shaolin" ];
    var_0["characters"] = [ "werewolfpoets", "losangeles", "realitytv", "beverlyhills", "ghetto", "broadway", "comicbooks", "newyork", "actors", "audition" ];
    return var_0;
}

determine_puzzle_wordlist( var_0 )
{
    var_1 = [];
    var_2 = randomintrange( 0, 101 );
    var_3 = scripts\engine\utility::_id_22A8( getarraykeys( var_0 ) );

    if ( !isdefined( level.current_active_word_list ) || var_3[0] == level.current_active_word_list )
    {
        level.current_active_word_list = var_3[1];
        var_1 = scripts\engine\utility::_id_22A8( var_0[var_3[1]] );
        return var_1;
    }
    else
    {
        level.current_active_word_list = var_3[0];
        var_1 = scripts\engine\utility::_id_22A8( var_0[var_3[0]] );
        return var_1;
    }
}

clear_existing_enemies()
{
    foreach ( var_1 in level._id_1084F )
    {
        if ( isalive( var_1 ) && var_1.health >= 1 )
        {
            var_1._id_54CB = 1;
            var_1._id_C026 = 1;
            var_1 suicide();
        }
    }

    scripts\engine\utility::waitframe();
}

stop_spawn_wave()
{
    scripts\engine\utility::_id_6E3E( "pause_wave_progression" );
    level._id_13FA3 = 1;
    level.dont_resume_wave_after_solo_afterlife = 1;
}

wait_for_wave_change( var_0, var_1 )
{
    if ( !isdefined( var_0 ) )
        var_0 = 1;

    var_2 = 4;

    if ( isdefined( var_1 ) )
    {
        foreach ( var_4 in level.players )
            var_4 setclientomnvar( "zom_escape_gate_score", var_2 );
    }

    for ( var_6 = 0; var_6 < var_0; var_6++ )
    {
        var_2--;
        var_7 = level._id_13BD3;

        while ( var_7 == level._id_13BD3 )
            wait 1;

        if ( isdefined( var_1 ) )
        {
            foreach ( var_4 in level.players )
                var_4 setclientomnvar( "zom_escape_gate_score", var_2 );
        }
    }
}

show_effects_for_eye_only( var_0, var_1, var_2 )
{
    level endon( "game_ended" );

    for (;;)
    {
        foreach ( var_4 in level.players )
            var_4 thread determine_effect_visibility( var_0, var_2 );

        var_6 = level scripts\engine\utility::_id_13734( "rat_king_eye_activated", "rat_king_eye_deactivated", "connected", var_1 );

        if ( var_6 == var_1 )
            break;
    }

    foreach ( var_4 in level.players )
        var_4 thread determine_effect_visibility();
}

determine_effect_visibility( var_0, var_1 )
{
    if ( !isdefined( var_0 ) || !isdefined( var_1 ) )
    {
        if ( isdefined( self.active_effect ) )
            self.active_effect delete();
    }
    else
    {
        var_2 = var_1;

        if ( scripts\engine\utility::_id_9CEE( self.wearing_rat_king_eye ) )
        {
            var_3 = spawnfxforclient( level._effect[var_0], var_2.origin, self, anglestoforward( var_2.angles ), anglestoup( var_2.angles ) );
            self.active_effect = var_3;
            wait 1;
            triggerfx( var_3 );
        }
        else if ( isdefined( self.active_effect ) )
            self.active_effect delete();
    }
}

monitor_spawning_agents( var_0, var_1 )
{
    level endon( var_1 );
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "agent_spawned", var_2 );
        var_2 scripts\engine\utility::delaythread( 0.05, var_0 );
    }
}

rk_symbol_handler( var_0, var_1 )
{
    level endon( "game_ended" );
    var_2 = scripts\engine\utility::_id_817E( var_0, "targetname" );
    var_3 = scripts\engine\utility::_id_107E6( var_2.origin, var_2.angles );
    var_3 makeusable();
    var_3 _meth_84A5( 45 );
    var_3 _meth_84A2( 96 );
    var_4 = scripts\engine\utility::_id_5D14( var_2.origin, 30, -100 );
    var_4 = var_4 + ( 0, 0, 1 );
    var_5 = spawnfx( level._effect["test_glyph_mpq"], var_4, anglestoforward( var_2.angles ), anglestoup( var_2.angles ) );
    triggerfx( var_5 );

    foreach ( var_7 in level.players )
        var_7 playsoundtoplayer( "quest_stage_completed_gong_lr", var_7 );

    var_3 _meth_84A5( 180 );
    var_3 waittill( "trigger" );
    var_3 delete();
    var_5 delete();
    scripts\engine\utility::_id_6E3E( var_1 );
}

failmpqstep()
{
    foreach ( var_1 in level.players )
        var_1 playsoundtoplayer( "mpq_fail_buzzer", var_1 );
}
