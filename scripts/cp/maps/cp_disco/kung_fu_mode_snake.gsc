// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

snake_kung_fu_init()
{
    level._effect["skeleton_summon_portal"] = loadfx( "vfx/iw7/levels/cp_rave/superslasher/vfx_rave_superslasher_spawn_portal.vfx" );
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );
    _id_0D15::_id_D787( "power_shuriken_snake", scripts\cp\maps\cp_disco\kung_fu_mode_dragon::set_dragon_shuriken_power, scripts\cp\maps\cp_disco\kung_fu_mode_dragon::unset_dragon_shuriken_power, scripts\cp\maps\cp_disco\kung_fu_mode_dragon::use_dragon_shuriken, undefined, undefined, undefined );
    _id_0D15::_id_D787( "power_summon_pet_snake", scripts\cp\maps\cp_disco\kung_fu_mode::blank, scripts\cp\maps\cp_disco\kung_fu_mode::blank, ::summon_skeleton_pet, undefined, "snake_chi_power", undefined );
}

summon_skeleton_pet()
{
    self endon( "watch_for_kung_fu_timeout" );
    self endon( "disconnect" );
    self endon( "last_stand" );
    wait 0.1;

    if ( scripts\engine\utility::_id_9CEE( self.snake_super ) )
        return;

    _id_0D15::_id_D728();
    var_0 = 250;

    if ( self.chi_meter_amount - var_0 <= 0 )
        self.kung_fu_exit_delay = 1;

    _id_0D61::_id_93EB( 1 );
    self playlocalsound( "chi_snake_skeleton_summon" );
    wait 1;

    if ( isdefined( self.pet_skeleton ) )
    {
        self.pet_skeleton notify( "owner_spawned_new_guy" );
        self.pet_skeleton _meth_80B0( self.pet_skeleton.health + 100, self.pet_skeleton.origin );
        wait 0.1;
        self.pet_skeleton = undefined;
    }

    self.pet_skeleton = skeleton_spawner();

    if ( isdefined( self.pet_skeleton ) )
        scripts\cp\zombies\zombies_chi_meter::chi_meter_kill_decrement( 250 );
    else
        _id_0D61::_id_4FB8( 1 );

    self.kung_fu_exit_delay = 0;
    _id_0D15::_id_D72E();
    self notify( "snake_chi_power", 1 );
}

skeleton_spawner()
{
    var_0 = determine_skeleton_spawn_point( self.origin );
    var_1 = spawn_skeleton_solo( var_0 );

    if ( isdefined( var_1 ) )
    {
        var_1 thread skeleton_arrival_cowbell( var_0 );
        var_1 thread set_skeleton_attributes( self );
    }

    return var_1;
}

spawn_skeleton_solo( var_0 )
{
    var_0 = scripts\engine\utility::_id_5D14( var_0, 30, -100 );
    var_1 = spawnstruct();
    var_1.origin = var_0;
    var_1._id_EE79 = "ground_spawn_no_boards";
    var_1._id_ECF5 = "spawn_ground";
    var_2 = 4;
    var_3 = 0.3;

    for ( var_4 = 0; var_4 < var_2; var_4++ )
    {
        var_5 = var_1 _id_0D61::_id_1081B( "skeleton", 1 );

        if ( isdefined( var_5 ) )
        {
            level thread skeleton_spawn_fx_pillar( var_0, 2 );
            wait( var_3 );
            return var_5;
        }

        wait( var_3 );
    }

    return undefined;
}

skeleton_spawn_fx_pillar( var_0, var_1 )
{
    var_2 = spawn( "script_model", var_0 );
    var_2 setmodel( "tag_origin_snake_chi" );
    wait( var_1 );
    var_2 delete();
}

skeleton_arrival_cowbell( var_0 )
{
    var_1 = ( 0, 0, -11 );
    var_2 = spawnfx( level._effect["skeleton_summon_portal"], var_0 + var_1, ( 0, 0, 1 ), ( 1, 0, 0 ) );
    thread scripts\engine\utility::_id_CE2B( "chi_snake_skeleton_spawn", var_2.origin );
    triggerfx( var_2 );
    self playsound( "chi_snake_skeleton_spawn_foley" );
    scripts\engine\utility::waittill_any( "death", "intro_vignette_done" );
    var_2 delete();
}

set_skeleton_attributes( var_0 )
{
    level endon( "game_ended" );
    self endon( "death" );
    self.playerowner = var_0;
    self.owner = var_0;
    var_1 = self;
    var_1.team = "allies";
    var_1._id_01F5 = "sprint";
    var_1._id_9CA2 = 1;
    var_1._id_9CEF = 1;
    var_1.maxhealth = 900;
    var_1.health = 900;
    var_1._id_0033 = 0;
    var_1 notify( "turned" );
    var_1 thread zombie_movement_update( self );
    var_1._id_B57A = int( _id_0D61::_id_3728( "generic_zombie" ) * 1.5 );
    level._id_1084F = scripts\engine\utility::array_remove( level._id_1084F, var_1 );
    level._id_4B95--;
    var_1 thread _id_A626( 30 );
    var_1 thread _id_E0B2();
    var_1 thread watch_zombie_collision();

    if ( isdefined( level._id_1299F ) )
        level._id_1299F = scripts\engine\utility::_id_2279( level._id_1299F, var_1 );
    else
    {
        level._id_1299F = [];
        level._id_1299F = scripts\engine\utility::_id_2279( level._id_1299F, var_1 );
    }
}

watch_zombie_collision()
{
    self endon( "death" );
    var_0 = 576;

    for (;;)
    {
        var_1 = _id_0A4A::_id_7DB0( "axis" );

        if ( var_1.size == 0 )
        {
            wait 0.05;
            continue;
        }

        var_2 = scripts\engine\utility::_id_7E2E( self.origin, var_1 );

        if ( distancesquared( var_2.origin, self.origin ) < var_0 )
        {
            var_2._id_74B5 = 1;
            var_2._id_4C87 = 1;
            var_2 _meth_80B0( var_2.health + 100, var_2.origin, self, self, "MOD_MELEE", "none" );
        }

        wait 0.05;
    }
}

_id_A626( var_0 )
{
    level endon( "game_ended" );
    self endon( "death" );
    self waittill( "intro_vignette_done" );

    while ( var_0 > 0 )
    {
        wait 1;
        var_0--;
    }

    thread scripts\engine\utility::_id_CE2B( "chi_snake_skeleton_death", self.origin );
    self _meth_80B0( self.health + 100, self.origin );
}

_id_E0B2()
{
    level endon( "game_ended" );
    self waittill( "death" );
    level._id_1299F = scripts\engine\utility::array_remove( level._id_1299F, self );
    _id_0D61::_id_4FB8( 1 );
}

determine_skeleton_spawn_point( var_0 )
{
    var_1 = self.angles;
    var_2 = self.origin + anglestoforward( self.angles ) * 64;

    for ( var_3 = 0; var_3 <= 360; var_2 = self.origin + anglestoforward( var_1 ) * 64 )
    {
        if ( _func_279( var_2 ) && scripts\cp\maps\cp_disco\cp_disco::_id_9C0E( var_2 ) )
            break;

        var_1 = var_1 + ( 0, 15, 0 );
        var_3 = var_3 + 15;
    }

    if ( var_3 >= 360 )
        return self.origin;
    else
        return var_2;
}

zombie_movement_update( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "death" );
    self endon( "death" );

    for (;;)
    {
        var_1 = determine_skeleton_mode( var_0 );

        switch ( var_1 )
        {
            case "move":
                skeleton_move_to_player( var_0 );
                break;
            case "fight":
                self._id_EF64 = 0;
                wait 3;
                break;
            default:
                wait 0.25;
                break;
        }
    }
}

skeleton_move_to_player( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "death" );
    self endon( "death" );
    self._id_EF64 = 1;
    self _meth_8287( 96 );
    self _meth_8284( self.playerowner );
    scripts\engine\utility::_id_13736( 2, "goal_reached" );
}

determine_skeleton_mode( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "death" );
    self endon( "death" );

    if ( distance2dsquared( self.origin, var_0.origin ) >= 1048576 )
        return "move";

    var_1 = sortbydistance( level._id_1084F, var_0.origin );

    if ( !isdefined( var_1 ) || var_1.size == 0 )
        return "move";
    else if ( distance2dsquared( var_1[0].origin, var_0.origin ) >= 1048576 )
        return "move";
    else
        return "fight";
}

snake_super_use( var_0 )
{
    self.snake_super = 1;
    scripts\engine\utility::_id_1C53( 0 );
    var_1 = 500;

    if ( self.chi_meter_amount - var_1 <= 0 )
        self.kung_fu_exit_delay = 1;

    self _meth_8441( "ges_snake_melee_super", undefined, 1 );
    thread play_snake_hand_fx();
    self.kung_fu_shield = 1;
    wait 0.75;
    self _meth_84D3( "power_active_cp", "gesture024" );
    var_2 = 4;
    var_3 = 0.1;
    var_4 = var_2 / var_3;

    for ( var_5 = 0; var_5 < var_4; var_5++ )
    {
        snake_super_damage_nearby_enemies();
        wait( var_3 );
    }

    self _meth_8442( "ges_snake_melee_super" );
    self.kung_fu_shield = undefined;
    self.kung_fu_exit_delay = 0;
    self.snake_super = undefined;
    scripts\engine\utility::_id_1C53( 1 );
    _id_0D15::_id_D72E();
}

play_snake_hand_fx()
{
    self setscriptablepartstate( "kung_fu_super_fx", "snake" );
    wait 4.75;
    self setscriptablepartstate( "kung_fu_super_fx", "off" );
}

snake_super_damage_nearby_enemies()
{
    var_0 = 50;
    var_1 = [];
    var_2 = _id_0A4A::_id_7DB0( "axis" );
    var_3 = sortbydistance( var_2, self.origin );

    foreach ( var_5 in var_3 )
    {
        isdefined( var_5 );

        if ( distance2dsquared( self.origin, var_5.origin ) >= var_0 * var_0 )
            break;

        if ( scripts\engine\utility::within_fov( self.origin, self getplayerangles(), var_5.origin, cos( 90 ) ) )
            var_1[var_1.size] = var_5;
    }

    var_7 = 0;

    foreach ( var_5 in var_1 )
    {
        if ( var_7 >= 3 )
            return;

        if ( isdefined( var_5 ) )
            var_5 _meth_80B0( var_5.maxhealth + 1000, self.origin, self, undefined, "MOD_EXPLOSIVE" );

        var_7++;
    }
}
