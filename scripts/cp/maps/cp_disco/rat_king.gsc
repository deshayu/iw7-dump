// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

rat_king_init()
{
    var_0 = scripts\engine\utility::_id_8180( "rat_king_spawner", "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2.script_noteworthy ) )
            continue;

        level.rat_king_spawn_loc = var_2.origin;
        level.rat_king_spawn_angles = var_2.angles;
    }

    level.rat_king_vo_prefix = "disco_ratking_";
    setuprkbouncestructs();
}

setuprkbouncestructs()
{
    level.rat_king_bounce_structs = scripts\engine\utility::_id_8180( "shield_bounce_loc", "targetname" );
}

spawn_rat_king( var_0, var_1, var_2 )
{
    level notify( "spawn_rat_king" );
    level endon( "spawn_rat_king" );
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );

    if ( isdefined( level.rat_king ) )
    {
        if ( scripts\engine\utility::_id_9CEE( var_2 ) )
            level.rat_king suicide();
        else
            return;
    }

    if ( !isdefined( var_0 ) )
        var_0 = level.rat_king_spawn_loc;

    if ( !isdefined( var_1 ) )
        var_1 = level.rat_king_spawn_angles;

    for (;;)
    {
        level.rat_king = scripts\mp\mp_agent::_id_108E8( "ratking", "axis", var_0, var_1 );

        if ( isdefined( level.rat_king ) )
        {
            level.rat_king._id_13550 = level.rat_king_vo_prefix;
            level.rat_king thread setrkscriptablestates();
            level.rat_king thread rkaudiomonitor();
            level._id_1084F[level._id_1084F.size] = level.rat_king;

            if ( scripts\engine\utility::_id_6E25( "rk_fight_started" ) )
                playloopsound( level.rat_king_spawn_loc + ( 0, 0, 100 ), "rk_spawn_in_lr" );

            level.rat_king thread runspawnlogic();
            break;
        }
        else
            scripts\engine\utility::waitframe();
    }
}

setrkscriptablestates()
{
    wait 2;

    if ( scripts\aitypes\ratking\behaviors::rk_isonplatform() )
    {
        self setscriptablepartstate( "movement", "neutral" );
        self setscriptablepartstate( "rat_skirt", "platform" );
    }
}

runspawnlogic()
{
    self._id_0180 = 1;
    self._id_EF64 = 1;
    self.outofplayspace = 1;
    self notify( "spawn" );
    self setscriptablepartstate( "movement", "materialize" );
    wait 2;
    self.outofplayspace = undefined;
    self._id_0180 = 0;
    self._id_EF64 = 0;
}

rkaudiomonitor()
{
    level endon( "game_ended" );
    self endon( "death" );
    var_0 = 10;
    self._id_D4AA = 0;

    for (;;)
    {
        var_1 = scripts\engine\utility::_id_1372E( [ "spawn", "summon", "pain", "melee", "shield_throw", "over", "under", "stomp" ], var_0 );
        var_0 = randomintrange( 4, 10 );

        switch ( var_1 )
        {
            case "spawn":
                level thread _id_0D62::_id_CE9C( self, "spawn", 0 );
                break;
            case "summon":
                level thread _id_0D62::_id_CE9C( self, "summon", 0 );
                break;
            case "pain":
                level thread _id_0D62::_id_CE9C( self, "pain", 0 );
                break;
            case "under":
                level thread _id_0D62::_id_CE9C( self, "melee", 0 );
                break;
            case "shield_throw":
                level thread _id_0D62::_id_CE9C( self, "shield_throw", 0 );
                break;
            case "stomp":
                level thread _id_0D62::_id_CE9C( self, "staff_stomp", 0 );
                break;
            case "timeout":
                level thread _id_0D62::_id_CE9C( self, "staff_over", 0 );
                level thread _id_0D62::_id_CE9C( self, "staff_under", 0 );
                break;
        }
    }
}
