// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_DEBC()
{
    level._id_9A12["debris_350"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["debris_1000"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["debris_1500"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["debris_2000"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["debris_2500"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["debris_1250"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["debris_750"] = &"CP_DISCO_INTERACTIONS_PURCHASE_AREA";
    level._id_9A12["power_door_sliding"] = &"COOP_INTERACTIONS_REQUIRES_POWER";
    level._id_9A12["power_door_pivot"] = &"COOP_INTERACTIONS_REQUIRES_POWER";
    level._id_9A12["chi_0"] = "";
    level._id_9A12["chi_1"] = "";
    level._id_9A12["chi_2"] = "";
    level._id_9A12["fan_trap"] = &"CP_DISCO_INTERACTIONS_FAN_TRAP";
    level._id_9A12["electric_trap"] = &"CP_DISCO_INTERACTIONS_ELECTRIC_TRAP";
    level._id_9A12["trap_buffer"] = &"CP_DISCO_INTERACTIONS_TRAP_BUFFER_HINT";
    level._id_9A12["trap_hydrant"] = &"CP_DISCO_INTERACTIONS_TRAP_HYDRANT_HINT";
    level._id_9A12["trap_mosh"] = &"CP_DISCO_INTERACTIONS_TRAP_MOSH_HINT";
    _id_0A59::_id_DEBB( "debris_350", "door_buy", undefined, undefined, _id_0D39::_id_4142, 350 );
    _id_0A59::_id_DEBB( "debris_1000", "door_buy", undefined, undefined, _id_0D39::_id_4142, 1000 );
    _id_0A59::_id_DEBB( "debris_1500", "door_buy", undefined, undefined, _id_0D39::_id_4142, 1500 );
    _id_0A59::_id_DEBB( "debris_2000", "door_buy", undefined, undefined, _id_0D39::_id_4142, 2000 );
    _id_0A59::_id_DEBB( "debris_2500", "door_buy", undefined, undefined, _id_0D39::_id_4142, 2500 );
    _id_0A59::_id_DEBB( "debris_1250", "door_buy", undefined, undefined, _id_0D39::_id_4142, 1250 );
    _id_0A59::_id_DEBB( "debris_750", "door_buy", undefined, undefined, _id_0D39::_id_4142, 750 );
    _id_0A59::_id_DEBB( "team_killdoor", "team_killdoor", undefined, undefined, undefined, 0, 1 );
    _id_0A59::_id_DEBB( "chi_0", "chi_door", undefined, undefined, _id_0D39::_id_4142, 0, 0 );
    _id_0A59::_id_DEBB( "chi_1", "chi_door", undefined, undefined, _id_0D39::_id_4142, 1, 0 );
    _id_0A59::_id_DEBB( "chi_2", "chi_door", undefined, undefined, _id_0D39::_id_4142, 2, 0 );
    _id_0A59::_id_DEBB( "power_door_sliding", "door_buy", undefined, undefined, undefined, 0, 1, ::_id_9749 );
    _id_0A59::_id_DEBB( "power_door_pivot", "door_buy", undefined, undefined, undefined, 0, 1, ::init_pivot_power_doors );
    disco_register_interaction( 1, "phonebooth", undefined, undefined, scripts\cp\maps\cp_disco\phonebooth::hint_phonebooth, scripts\cp\maps\cp_disco\phonebooth::use_phonebooth, 0, 1, scripts\cp\maps\cp_disco\phonebooth::init_phonebooth );
    disco_register_interaction( 1, "disco_record", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::discorecordhint, scripts\cp\maps\cp_disco\cp_disco::discorecorduse, 0, 1, scripts\cp\maps\cp_disco\cp_disco::init_disco_record );
    disco_register_interaction( 1, "punk_record", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::punkrecordhint, scripts\cp\maps\cp_disco\cp_disco::punkrecorduse, 0, 1, scripts\cp\maps\cp_disco\cp_disco::init_punk_record );
    disco_register_interaction( 1, "pa_turntable", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::paturntablehint, scripts\cp\maps\cp_disco\cp_disco::paturntableuse, 0, 1, scripts\cp\maps\cp_disco\cp_disco::init_pa_turntables );
    disco_register_interaction( 1, "clock", undefined, undefined, ::hint_nunchucks, ::use_nunchucks_object, 0, 0, ::init_nunchucks );
    disco_register_interaction( 1, "clock_2", undefined, undefined, ::hint_nunchucks, ::use_nunchucks_object_2, 0, 0, ::init_nunchucks_2 );
    disco_register_interaction( 1, "clock_3", undefined, undefined, ::hint_nunchucks, ::use_nunchucks_object_3, 0, 0, ::init_nunchucks_3 );
    disco_register_interaction( 1, "memory_tv", undefined, undefined, ::hint_nunchucks, ::use_memory_tv_object, 0, 0, ::init_memory_tv );
    disco_register_interaction( 1, "memory_object_three", undefined, undefined, ::mem_object_hint, ::mem_object_func, 0, 0, ::init_mem3 );
    disco_register_interaction( 1, "memory_object_four", undefined, undefined, ::mem_object_hint, ::mem_object_func, 0, 0, ::init_mem4 );
    disco_register_interaction( 1, "memory_object_five", undefined, undefined, ::mem_object_hint, ::mem_object_func, 0, 0, ::init_mem5 );
    disco_register_interaction( 1, "memory_object_six", undefined, undefined, ::mem_object_hint, ::mem_object_func, 0, 0, ::init_mem6 );
    register_environment_interactions();
    disco_register_interaction( 1, "rk_relic_pos", undefined, undefined, scripts\cp\maps\cp_disco\rat_king_fight::rkrelic_hint_func, scripts\cp\maps\cp_disco\rat_king_fight::pickuprkrelic, 0, 0, scripts\cp\maps\cp_disco\rat_king_fight::init_rkrelic );
    disco_register_interaction( 1, "rk_arena_center", undefined, undefined, scripts\cp\maps\cp_disco\rat_king_fight::rkarenacenter_hint_func, scripts\cp\maps\cp_disco\rat_king_fight::userkarenacenter, 0, 0, undefined );
    disco_register_interaction( 1, "rk_debug", undefined, undefined, scripts\cp\maps\cp_disco\rat_king_fight::rkdebug_hint_func, scripts\cp\maps\cp_disco\rat_king_fight::userkdebug, 0, 0, undefined );
    _id_0A59::_id_DEBB( "trap_buffer", "trap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_traps::use_buffer_trap, 750, 1, scripts\cp\maps\cp_disco\cp_disco_traps::init_buffer_trap );
    _id_0A59::_id_DEBB( "trap_hydrant", "trap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_traps::use_hydrant_trap, 350, 1, scripts\cp\maps\cp_disco\cp_disco_traps::init_hydrant_trap );
    _id_0A59::_id_DEBB( "trap_mosh", "trap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_traps::use_mosh_trap, 750, 1, scripts\cp\maps\cp_disco\cp_disco_traps::init_mosh_trap );
    _id_0A59::_id_DEBB( "fan_trap", "trap", undefined, undefined, ::use_fan_trap, 750, 1, ::init_fan_trap );
    _id_0A59::_id_DEBB( "electric_trap", "trap", undefined, undefined, ::_id_12FE5, 750, 0, ::init_electric_trap );
    disco_register_interaction( 1, "turnstile", undefined, undefined, scripts\cp\maps\cp_disco\disco_mpq::empty_hint, scripts\cp\maps\cp_disco\disco_mpq::use_turnstile, 0, 0, scripts\cp\maps\cp_disco\disco_mpq::init_turnstile );
    disco_register_interaction( 1, "disco_fever_interact", undefined, undefined, scripts\cp\maps\cp_disco\disco_mpq::discofeverhintfunc, scripts\cp\maps\cp_disco\disco_mpq::use_turntable, 0, 0, scripts\cp\maps\cp_disco\disco_mpq::init_turntable );
    disco_register_interaction( 1, "mpq_relics", undefined, undefined, scripts\cp\maps\cp_disco\disco_mpq::mpqrelichintfunc, scripts\cp\maps\cp_disco\disco_mpq::mpqrelicusefunc, 0, 0 );
    register_martial_arts_style_interactions();
    register_weapon_interactions();
    register_pack_a_punch_interactions();
    _id_DE92();
    _id_DEA7();
    level notify( "interactions_initialized" );
    scripts\engine\utility::_id_6E3E( "interactions_initialized" );

    if ( isdefined( level._id_66F9 ) )
        [[ level._id_66F9 ]]();
}

register_pack_a_punch_interactions()
{
    level._id_9A12["enter_stall"] = &"CP_DISCO_INTERACTIONS_NEED_TOKENS";
    level._id_9A12["enter_stall_allowed"] = &"CP_DISCO_INTERACTIONS_ENTER_THIS_AREA";
    level._id_9A12["enter_peepshow"] = &"CP_DISCO_INTERACTIONS_NEED_TICKET";
    level._id_9A12["enter_peepshow_allowed"] = &"CP_DISCO_INTERACTIONS_ENTER_THIS_AREA";
    level._id_9A12["peepshow_flyer"] = "";
    level._id_9A12["pickup_reel"] = "";
    level._id_9A12["add_reel"] = &"CP_DISCO_INTERACTIONS_ADD_REEL";
    level._id_9A12["pap_fuse_switch"] = "";
    level._id_9A12["pap_fusebox"] = "";
    level._id_9A12["weapon_upgrade"] = &"CP_DISCO_INTERACTIONS_UPGRADE_WEAPON";
    _id_0A59::_id_DEBB( "enter_stall", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::enter_pap_stall, 0, 0 );
    _id_0A59::_id_DEBB( "add_reel", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::add_reel, 0, 0, scripts\cp\maps\cp_disco\cp_disco::init_projector );
    _id_0A59::_id_DEBB( "pickup_reel", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::pickup_reel, 0, 0 );
    _id_0A59::_id_DEBB( "pap_portal", "fast_travel", undefined, scripts\cp\maps\cp_disco\cp_disco::pap_portal_hint_logic, scripts\cp\maps\cp_disco\cp_disco::pap_portal_use_func, 0, 0 );
    _id_0A59::_id_DEBB( "enter_stall_allowed", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::enter_pap_stall, 0, 0 );
    _id_0A59::_id_DEBB( "enter_peepshow", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::enter_peepshow, 0, 0 );
    _id_0A59::_id_DEBB( "enter_peepshow_allowed", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::enter_peepshow, 0, 0 );
    _id_0A59::_id_DEBB( "peepshow_flyer", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::take_peepshow_flyer, 0, 0, scripts\cp\maps\cp_disco\cp_disco::init_peepshow_flyer );
    _id_0A59::_id_DEBB( "pap_fuse_switch", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::use_pap_upgrade_switch, 0, 0 );
    _id_0A59::_id_DEBB( "pap_fusebox", "pap", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco::take_fuses, 0, 0 );
    _id_0A59::_id_DEBB( "weapon_upgrade", "pap", undefined, scripts\cp\maps\cp_disco\cp_disco_weapon_upgrade::weapon_upgrade_hint_func, scripts\cp\maps\cp_disco\cp_disco_weapon_upgrade::_id_13C62, 5000, 1, _id_0D41::_id_94F2 );
}

register_martial_arts_style_interactions()
{
    disco_register_interaction( 1, "martial_arts_animals", undefined, undefined, scripts\cp\maps\cp_disco\kung_fu_mode::style_hint_func, scripts\cp\maps\cp_disco\kung_fu_mode::choose_martial_arts_style, 0, 0, scripts\cp\maps\cp_disco\kung_fu_mode::ma_style_init );
    disco_register_interaction( 1, "gourd_station", undefined, undefined, scripts\cp\maps\cp_disco\kung_fu_mode::usegourd_hint_func, scripts\cp\maps\cp_disco\kung_fu_mode::usegourdstation, 0, 0, scripts\cp\maps\cp_disco\kung_fu_mode::guord_interaction_init );
    disco_register_interaction( 0, "martial_arts_trainer", undefined, undefined, scripts\cp\maps\cp_disco\kung_fu_mode::trainer_hint_func, scripts\cp\maps\cp_disco\kung_fu_mode::talk_to_trainer, 0, 0, scripts\cp\maps\cp_disco\kung_fu_mode::init_martial_arts_trainer );
    disco_register_interaction( 1, "black_cat", undefined, undefined, scripts\cp\maps\cp_disco\kung_fu_mode::blackcathintfunc, scripts\cp\maps\cp_disco\kung_fu_mode::blackcatusefunc, 0, 0, scripts\cp\maps\cp_disco\kung_fu_mode::blackcatinitfunc );
    disco_register_interaction( 1, "perk_candy_box", undefined, undefined, scripts\cp\maps\cp_disco\rat_king_fight::perkbox_hintfunc, scripts\cp\maps\cp_disco\rat_king_fight::perkbox_usefunc, 0, 0, scripts\cp\maps\cp_disco\rat_king_fight::init_rk_candy_interactions );
}

register_environment_interactions()
{
    level._id_9A12["atm_deposit"] = &"CP_DISCO_INTERACTIONS_ATM_DEPOSIT";
    level._id_9A12["atm_withdrawal"] = &"CP_DISCO_INTERACTIONS_ATM_WITHDRAWAL";
    disco_register_interaction( 1, "pay_phones", "atm", undefined, ::blank_hint, ::blank, 0 );
    disco_register_interaction( 1, "trash_cans", "atm", undefined, ::blank_hint, ::trash_can_use, 0 );
    disco_register_interaction( 0, "atm_deposit", "atm", undefined, _id_0A59::atm_deposit_hint, ::atm_deposit, 1000, 1, undefined );
    disco_register_interaction( 0, "atm_withdrawal", "atm", undefined, ::atm_withdrawal_hint, ::atm_withdrawal, 0, 1, ::setup_atm_system );
}

trash_can_use( var_0, var_1 )
{
    if ( !isdefined( var_0._id_1305D ) )
        var_0._id_1305D = [];

    if ( isdefined( var_1.first_cipher_seen ) && var_1.first_cipher_seen && !scripts\engine\utility::array_contains( var_0._id_1305D, var_1 ) )
    {
        var_0._id_1305D[var_0._id_1305D.size] = var_1;
        var_0.used_by_player = 1;
        var_1.treasure_cans_used++;
        var_1 notify( "player_used_trashcan" );
        var_1 playlocalsound( "skullbuster_arcade_pickup_spraycleaner" );
        level notify( "player_used_trashcan" );
    }
}

blank( var_0, var_1 )
{

}

blank_hint( var_0, var_1 )
{
    return "";
}

blank_use( var_0, var_1 )
{
    var_1 playlocalsound( "part_pickup" );
    thread disableinteractionfortime( var_0, 5 );
}

register_weapon_interactions()
{
    level._id_9A12["iw7_ar57_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_m4_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_fmg_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_ake_zml"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_sonic_zmr"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_g18_zmr"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_revolver_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_m1_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_m1c_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_spas_zmr"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_crb_zml"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_erad_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_kbs_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_g18c_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_ripper_zmr"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_ump45_zml"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_m8_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_cheytac_zmr"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_devastator_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_axe_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_katana_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_rvn_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_udm45_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    level._id_9A12["iw7_katana_zm"] = &"CP_DISCO_INTERACTIONS_BUY_WEAPON";
    disco_register_interaction( 1, "iw7_katana_zm", "wall_buy", undefined, scripts\cp\maps\cp_disco\rat_king_fight::katanahintfunc, scripts\cp\maps\cp_disco\rat_king_fight::katanausefunc, 10000 );
    var_0 = 500;
    _id_0A59::_id_DEBB( "iw7_revolver_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_m1c_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    var_0 = 750;
    _id_0A59::_id_DEBB( "iw7_g18c_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_sonic_zmr", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_udm45_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    var_0 = 1000;
    _id_0A59::_id_DEBB( "iw7_m8_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_cheytac_zmr", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_g18_zmr", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_rvn_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_spas_zmr", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_kbs_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_crb_zml", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_erad_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_ripper_zmr", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_ump45_zml", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_devastator_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, var_0 );
    _id_0A59::_id_DEBB( "iw7_m4_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, 1500 );
    _id_0A59::_id_DEBB( "iw7_ar57_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, 1500 );
    _id_0A59::_id_DEBB( "iw7_ake_zml", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, 1500 );
    _id_0A59::_id_DEBB( "iw7_fmg_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, 1500 );
    _id_0A59::_id_DEBB( "iw7_axe_zm", "wall_buy", undefined, _id_0D2C::_id_7D50, _id_0D2C::_id_9A38, 1500 );
}

_id_DE92()
{
    level._id_9A12["basketball_game_afterlife"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["laughingclown_afterlife"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["bowling_for_planets_afterlife"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["clown_tooth_game_afterlife"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["game_race"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_icehock"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_seaques"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_boxing"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_oink"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_keyston"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_plaque"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_crackpo"] = &"COOP_INTERACTIONS_PLAY_GAME";
    level._id_9A12["arcade_hero"] = &"COOP_INTERACTIONS_PLAY_GAME";
    _id_0A59::_id_DEBB( "arcade_hero", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_icehock", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_seaques", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_boxing", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_oink", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_keyston", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_plaque", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "arcade_crackpo", "arcade_game", undefined, undefined, _id_0D46::_id_12FA3, 0, 1 );
    _id_0A59::_id_DEBB( "basketball_game_afterlife", "afterlife_game", undefined, undefined, _id_0D2E::_id_12FA8, 0, 0, _id_0D2E::_id_94D8 );
    _id_0A59::_id_DEBB( "clown_tooth_game_afterlife", "afterlife_game", undefined, undefined, _id_0D33::_id_12FBC, 0, 0, _id_0D33::_id_94D9 );
    _id_0A59::_id_DEBB( "laughingclown_afterlife", "afterlife_game", undefined, undefined, _id_0D36::_id_AA4B, 0, 0, _id_0D36::_id_94EC );
    _id_0A59::_id_DEBB( "bowling_for_planets_afterlife", "afterlife_game", undefined, undefined, _id_0D31::_id_12FAB, 0, 0, _id_0D31::_id_9549 );
    _id_0A59::_id_DEBB( "game_race", "arcade_game", undefined, _id_0D3A::_id_DBB3, _id_0D3A::_id_13003, 0, 1, _id_0D3A::_id_94F0 );
}

_id_DEA7()
{
    level._id_9A12["craft_robot"] = "";
    level._id_9A12["purchase_robot"] = &"CP_DISCO_PURCHASE_ROBOT";
    level._id_9A12["craft_zombgone"] = "";
    level._id_9A12["purchase_zombgone"] = &"CP_DISCO_PURCHASE_ZOMBGONE";
    level._id_9A12["craft_turret"] = "";
    level._id_9A12["purchase_turret"] = &"CP_DISCO_PURCHASE_TURRET";
    level._id_9A12["craft_boombox"] = "";
    level._id_9A12["purchase_boombox"] = &"CP_DISCO_PURCHASE_BOOMBOX";
    level._id_9A12["craft_lavalamp"] = "";
    level._id_9A12["purchase_lavalamp"] = &"CP_DISCO_PURCHASE_LAVALAMP";
    level._id_9A12["puzzle"] = "";
    _id_0A59::_id_DEBB( "craft_zombgone", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "purchase_zombgone", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "craft_turret", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "purchase_turret", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "craft_boombox", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "purchase_boombox", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "craft_lavalamp", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "purchase_lavalamp", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "craft_robot", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "purchase_robot", "souvenir_station", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::_id_12FBE, 0 );
    _id_0A59::_id_DEBB( "pillage_item", undefined, undefined, _id_0D5E::_id_CB59, _id_0D5E::_id_D31E, 0, 0 );
    _id_0A59::_id_DEBB( "puzzle", "souvenir_coin", undefined, undefined, scripts\cp\maps\cp_disco\cp_disco_crafting::pickup_puzzle, 0 );
    scripts\cp\maps\cp_disco\cp_disco_crafting::_id_9594();
}

disco_register_interaction( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    var_10 = spawnstruct();
    var_10.name = var_1;
    var_10._id_8FFA = var_4;
    var_10._id_109DA = var_2;
    var_10._id_12AA2 = var_3;
    var_10._id_161A = var_5;
    var_10._id_6261 = 1;
    var_10.disable_guided_interactions = var_0;

    if ( !isdefined( var_6 ) )
        var_6 = 0;

    var_10._id_46A2 = var_6;

    if ( isdefined( var_7 ) )
        var_10._id_E1B9 = var_7;
    else
        var_10._id_E1B9 = 0;

    var_10._id_95F2 = var_8;
    var_10._id_3865 = var_9;
    level._id_9A43[var_1] = var_10;
}

init_pivot_power_doors()
{
    var_0 = scripts\engine\utility::_id_8180( "power_door_pivot", "script_noteworthy" );

    foreach ( var_2 in var_0 )
        var_2 thread pivot_power_door();
}

pivot_power_door()
{
    if ( scripts\engine\utility::_id_9CEE( self._id_E1B9 ) )
        level scripts\engine\utility::waittill_any( "power_on", self._id_D71C + " power_on" );

    self._id_D776 = 1;

    if ( isdefined( self._id_EEB0 ) )
        playloopsound( self.origin, self._id_EEB0 );

    if ( isdefined( self._id_0334 ) && self._id_0334 == "subway_left_door" )
    {
        wait 0.2;
        playloopsound( self.origin, "power_buy_subway_gate_open_left" );
        wait 0.7;
    }

    if ( isdefined( self._id_0334 ) && self._id_0334 == "subway_right_door" )
    {
        playloopsound( self.origin, "power_buy_subway_gate_open_right" );
        wait 0.9;
    }

    var_0 = getentarray( self._id_0334, "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( var_2.classname == "script_brushmodel" )
        {
            var_2 connectpaths();
            var_2 notsolid();
        }

        if ( isdefined( self._id_ECF3 ) )
        {
            if ( !isdefined( var_2.angles ) )
                var_2.angles = ( 0, 0, 0 );

            var_2 rotateto( var_2.angles + self._id_ECF3, 1 );
            continue;
        }

        var_2 hide();
    }

    _id_0A59::_id_554F( self );
    _id_0D61::_id_F28B( self );
    _id_0D61::_id_15FC( self._id_ECFA );
}

_id_9749()
{
    var_0 = scripts\engine\utility::_id_8180( "power_door_sliding", "script_noteworthy" );

    foreach ( var_2 in var_0 )
        var_2 thread _id_102F8();
}

_id_102F8()
{
    if ( scripts\engine\utility::_id_9CEE( self._id_E1B9 ) )
        level scripts\engine\utility::waittill_any( "power_on", self._id_D71C + " power_on" );

    self._id_D776 = 1;

    if ( isdefined( self._id_EEB0 ) )
        playloopsound( self.origin, self._id_EEB0 );

    var_0 = getentarray( self._id_0334, "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( var_2.classname == "script_brushmodel" )
        {
            var_2 connectpaths();
            var_2 notsolid();
        }

        var_3 = undefined;

        if ( isdefined( var_2._id_0334 ) )
            var_3 = scripts\engine\utility::_id_817E( var_2._id_0334, "targetname" );

        if ( isdefined( var_3 ) )
        {
            var_4 = var_3.origin - var_2.origin;
            var_2 moveto( var_2.origin + ( var_4[0], var_4[1], 0 ), 0.5, 0.1, 0.1 );
            continue;
        }

        if ( isdefined( var_2._id_ECF3 ) )
        {
            var_2 rotateto( var_2._id_ECF3, 0.75 );
            continue;
        }

        var_2 hide();
    }

    _id_0A59::_id_554F( self );
    _id_0D61::_id_F28B( self );
    _id_0D61::_id_15FC( self._id_ECFA );
}

disableinteractionfortime( var_0, var_1 )
{
    _id_0A59::_id_E019( var_0 );

    if ( isdefined( var_1 ) )
        wait( var_1 );
    else
        wait 3;

    _id_0A59::_id_175C( var_0 );
}

setup_atm_system()
{
    level._id_2416 = 0;
}

atm_deposit( var_0, var_1 )
{
    var_1 notify( "stop_interaction_logic" );
    var_1._id_A8D3 = undefined;
    level._id_2416 = level._id_2416 + 1000;
    _id_0A59::increase_total_deposit_amount( var_1, 1000 );
    var_1 thread _id_0A6A::_id_12885( "atm_deposit", "zmb_comment_vo", "low" );
    _id_0D45::_id_AF5D( 1, level._id_13BD3, var_1 );
    var_1 _id_0A59::_id_DE6E();

    if ( _id_0A59::exceed_deposit_limit( var_1 ) )
        _id_0A59::_id_E01A( var_0, var_1 );
}

atm_withdrawal( var_0, var_1 )
{
    if ( level._id_2416 < 1000 )
        return;

    var_2 = 1000;
    var_1 _id_0A63::_id_82F9( var_2, undefined, undefined, undefined, "atm" );
    level._id_2416 = level._id_2416 - var_2;
    var_1 thread _id_0A77::_id_1308C( var_1, "iw7_pickup_zm" );
    _id_0D45::_id_AF5D( 1, level._id_13BD3, var_1 );
    var_1 thread _id_0A6A::_id_12885( "withdraw_cash", "zmb_comment_vo", "low" );
    var_1 _id_0A59::_id_DE6E();
}

atm_withdrawal_hint( var_0, var_1 )
{
    if ( var_0._id_E1B9 && !var_0._id_D776 )
        return &"COOP_INTERACTIONS_REQUIRES_POWER";

    if ( isdefined( level._id_2416 ) && level._id_2416 < 1000 )
        return &"CP_DISCO_INTERACTIONS_ATM_INSUFFICIENT_FUNDS";

    return level._id_9A12[var_0.script_noteworthy];
}

final_part_rewind_quest()
{
    if ( !isdefined( self.clocks_destroyed ) )
        self.clocks_destroyed = 0;

    if ( !isdefined( self.array_of_clocks ) )
        self.array_of_clocks = [];

    self.array_of_clocks = level.clocks_to_be_destroyed;
    self.start_breaking_clock = 1;

    foreach ( var_2, var_1 in self.array_of_clocks )
    {
        var_1.object_num = var_2 + 1;
        thread watch_for_damage_on_clock( var_1 );
    }

    thread watch_for_final_quest_end();
    thread reset_clocks_on_failure( self );
}

watch_for_rewind_triggered_on_completion()
{
    self endon( "disconnect" );
    self endon( "death" );
    self endon( "ended_on_successful_teleport" );

    for (;;)
    {
        if ( !scripts\engine\utility::_id_9CEE( self._id_9F2A ) || !isdefined( self.rewindmover ) )
        {
            scripts\engine\utility::waitframe();
            continue;
        }
        else
        {
            var_0 = getclosestpointonnavmesh( self.origin );
            _id_0D44::_id_1794();
            thread _id_0D44::_id_E0AE( 0.05 );
            thread play_fx_rewind( 0.05 );
            self setscriptablepartstate( "scripted_rewind", "inactive" );
            self setscriptablepartstate( "clockFx", "inactive" );
            self dontinterpolate();
            self setorigin( var_0, 1 );
            self _meth_8366( ( 0, 0, 0 ) );
            self setstance( "stand" );

            if ( !scripts\engine\utility::_id_A009() )
                scripts\engine\utility::_id_1C76( 1 );

            if ( !scripts\engine\utility::_id_9FBE() )
                scripts\engine\utility::_id_1C6E( 1 );

            if ( !_id_0A77::_id_9FA2() )
                _id_0A77::_id_1C5E( 1 );

            _id_0A77::_id_E0E6( "rewind_invulnerability", 0 );
            self _meth_84D3( "power_exit", "rewind" );
            self _meth_8447();
            self _meth_84D8( 0 );
            scripts\engine\utility::_id_1C53( 1 );
            scripts\engine\utility::_id_1C71( 1 );
            scripts\engine\utility::_id_1C4E( 1 );
            self _meth_8010( 1 );
            self _meth_855A( 0 );
            self unlink();

            if ( isdefined( self.rewindmover ) )
                self.rewindmover delete();

            if ( scripts\engine\utility::_id_9CEE( self._id_9F2A ) )
                self._id_9F2A = 0;

            self notify( "ended_on_successful_teleport" );
            break;
        }

        scripts\engine\utility::waitframe();
    }
}

watch_for_final_quest_end()
{
    self endon( "backstory_quest_complete" );
    self endon( "disconnect" );

    for (;;)
    {
        if ( self.clocks_destroyed == 3 )
        {
            if ( isdefined( self.rewindmover ) || scripts\engine\utility::_id_9CEE( self._id_9F2A ) )
                thread watch_for_rewind_triggered_on_completion();

            foreach ( var_1 in level.players )
            {
                var_1.start_breaking_clock = 0;
                var_1.clocks_destroyed = 0;

                if ( !isdefined( var_1.array_of_clocks ) )
                    var_1.array_of_clocks = level.clocks_to_be_destroyed;

                foreach ( var_3 in var_1.array_of_clocks )
                {
                    var_3.health = 5;
                    var_3._id_4CE9 = 0;
                    var_3.maxhealth = 5;
                    var_3 _meth_8388( self );
                    var_3.already_attacked_by_player = 0;
                }
            }

            switch ( self._id_134FD )
            {
                case "p1_":
                    thread _id_0A6A::_id_12885( "ww_bio_all_sally", "rave_ww_vo", "highest", 70, 0, 0, 1 );
                    self setrankedplayerdata( "cp", "alienSession", "escapedRank0", 1 );
                    break;
                case "p2_":
                    thread _id_0A6A::_id_12885( "ww_bio_all_poindexter", "rave_ww_vo", "highest", 70, 0, 0, 1 );
                    self setrankedplayerdata( "cp", "alienSession", "escapedRank1", 1 );
                    break;
                case "p3_":
                    thread _id_0A6A::_id_12885( "ww_bio_all_andre", "rave_ww_vo", "highest", 70, 0, 0, 1 );
                    self setrankedplayerdata( "cp", "alienSession", "escapedRank2", 1 );
                    break;
                case "p4_":
                    thread _id_0A6A::_id_12885( "ww_bio_all_aj", "rave_ww_vo", "highest", 70, 0, 0, 1 );
                    self setrankedplayerdata( "cp", "alienSession", "escapedRank3", 1 );
                    break;
                default:
                    level thread _id_0A6A::_id_12885( "ww_bio_all", "rave_announcer_vo", "highest", 70, 0, 0, 1 );
            }

            level thread dont_play_powerup_vo_for_delay( 30 );
            self.start_breaking_clock = 0;
            self setscriptablepartstate( "scripted_rewind", "inactive" );
            self setscriptablepartstate( "clockFx", "inactive" );

            if ( !isdefined( level._id_B15E["nunchucks"] ) )
                level._id_B15E["nunchucks"] = "iw7_nunchucks_zm";

            self.finished_backstory = 1;
            _id_107AA( self, "fire_30" );
            self notify( "backstory_quest_complete" );
        }

        wait 1;
    }
}

_id_107AA( var_0, var_1 )
{
    var_2 = var_0.origin;
    var_3 = ( 0, 0, 0 );
    var_4 = self getplayerangles();
    var_5 = 7;
    var_2 = var_2 + var_3[0] * anglestoright( var_4 );
    var_2 = var_2 + var_3[1] * anglestoforward( var_4 );
    var_2 = var_2 + var_3[2] * anglestoup( var_4 );
    var_6 = rotatepointaroundvector( anglestoup( var_4 ), anglestoforward( var_4 ), var_5 );
    var_7 = physics_createcontents( [ "physicscontents_solid", "physicscontents_glass", "physicscontents_vehicleclip", "physicscontents_item", "physicscontents_detail", "physicscontents_vehicleclip", "physicscontents_vehicle", "physicscontents_canshootclip", "physicscontents_missileclip", "physicscontents_clipshot" ] );
    var_8 = scripts\engine\trace::_id_DCED( var_0 geteye(), var_2 + var_6, self, var_7 );
    var_2 = scripts\engine\utility::_id_5D14( var_8["position"] + var_6 * -18, 32, -2000 );

    if ( !_id_0A6B::_id_9E54( var_2, level._id_9B0B, undefined, undefined, 1 ) )
        var_2 = getclosestpointonnavmesh( var_0.origin );

    level _id_0A76::_id_5CF6( var_2, var_0, var_1 );
}

start_rewind_sequence()
{
    self setscriptablepartstate( "clockFx", "active" );
    level thread player_clock_tick_sfx( self );
    _id_E266();
    self._id_E4C8[self._id_E4D8] = self getplayerangles();
    self._id_E4D7[self._id_E4D8] = self.origin;
    self._id_E4DA[self._id_E4D8] = self _meth_816B();
    var_0 = gettime();
    thread _id_DDF2( 4 );
    _id_E897( 4 );
}

watch_for_damage_on_clock( var_0 )
{
    self endon( "backstory_quest_complete" );
    self endon( "end_this_thread" );
    self endon( "disconnect" );
    self endon( "death" );
    self endon( "last_stand" );

    for (;;)
    {
        var_0 waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

        if ( !isplayer( var_2 ) && !isagent( var_2 ) )
        {
            var_0.health = var_0.maxhealth;
            continue;
        }

        if ( scripts\engine\utility::_id_9CEE( var_0.already_attacked_by_player ) )
        {
            var_0.health = var_0.maxhealth;
            continue;
        }

        if ( scripts\engine\utility::_id_9CEE( var_2.finished_backstory ) )
            continue;

        if ( var_2 != self )
            continue;

        if ( scripts\engine\utility::_id_9CEE( var_2.kung_fu_mode ) )
            continue;

        if ( isdefined( var_5 ) && var_5 != "MOD_MELEE" )
        {
            var_0.health = var_0.maxhealth;
            continue;
        }

        if ( var_1 >= var_0.health )
        {
            var_2.clocks_destroyed++;
            var_0.already_attacked_by_player = 1;

            if ( var_2.clocks_destroyed == 1 )
                var_2 thread start_rewind_sequence();

            var_0 playfx_and_shatter_clock( var_2 );
            continue;
        }

        var_0.health = var_0.maxhealth;
        continue;
    }
}

playfx_and_shatter_clock( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    playfx( level._effect["crafting_pickup"], self.origin );
    var_0 playlocalsound( "disco_backstory_clock_smash" );

    if ( self.health < 0 )
        self.health = 5;

    if ( isdefined( var_0.clocks_destroyed ) && var_0.clocks_destroyed == 3 )
    {
        self _meth_8429( var_0 );
        var_0 notify( "end_this_thread" );
    }
}

reset_clocks_on_failure( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "death" );
    var_0 notify( "ended_on_successful_teleport" );

    for (;;)
    {
        scripts\engine\utility::waittill_any( "rewind_power_finished", "remove_rewind_ability", "rewind_activated", "rat_king_fight_started", "last_stand" );

        if ( var_0.clocks_destroyed != 3 )
        {
            foreach ( var_2 in var_0.array_of_clocks )
            {
                var_2.health = 5;
                var_2._id_4CE9 = 0;
                var_2.maxhealth = 5;
                var_2 _meth_8388( var_0 );
                var_2.already_attacked_by_player = 0;
            }

            var_0.start_breaking_clock = 0;
            var_0.clocks_destroyed = 0;
            var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
            var_0 setscriptablepartstate( "clockFx", "inactive" );
            var_0 notify( "stop_clock_sfx" );
            var_0 notify( "clocks_reset" );
        }
    }
}

hint_memory_tv( var_0, var_1 )
{
    return &"CP_DISCO_INTERACTIONS_PHONEBOOTH_USE";
}

init_memory_tv()
{
    foreach ( var_1 in level.players )
    {
        while ( !isdefined( var_1._id_134FD ) )
            wait 1;
    }

    level.tv_channels_models = [ "cp_disco_tv_crt", "cp_disco_tv_sally", "cp_disco_tv_pointd", "cp_disco_tv_andre", "cp_disco_tv_aj", "cp_disco_tv_yeti" ];
    level.tv_modelsarray = [];
    level.tv_modelsarray = scripts\engine\utility::_id_8180( "tv_model", "script_noteworthy" );
    level.tv_array = [];
    level.tv_array = scripts\engine\utility::_id_8180( "memory_tv", "script_noteworthy" );

    if ( level.tv_array.size <= 0 )
        return;

    foreach ( var_6, var_4 in level.tv_modelsarray )
    {
        var_5 = undefined;

        switch ( var_4.name )
        {
            case "tv_sally":
                var_5 = spawn( "script_model", var_4.origin );
                var_5 setmodel( "cp_disco_tv_crt_01_off" );
                var_5.angles = var_4.angles;
                var_4._id_01F1 = var_5;
                var_4.owner = "p1_";
                break;
            case "tv_pointd":
                var_5 = spawn( "script_model", var_4.origin );
                var_5 setmodel( "cp_disco_tv_crt_01_off" );
                var_5.angles = var_4.angles;
                var_4._id_01F1 = var_5;
                var_4.owner = "p2_";
                break;
            case "tv_andre":
                var_5 = spawn( "script_model", var_4.origin );
                var_5 setmodel( "cp_disco_tv_crt_01_off" );
                var_5.angles = var_4.angles;
                var_4._id_01F1 = var_5;
                var_4.owner = "p3_";
                break;
            case "tv_aj":
                var_5 = spawn( "script_model", var_4.origin );
                var_5 setmodel( "cp_disco_tv_crt_01_off" );
                var_5.angles = var_4.angles;
                var_4._id_01F1 = var_5;
                var_4.owner = "p4_";
                break;
            default:
        }

        level.tv_modelsarray[var_6] = var_4;
    }

    var_7 = getentarray( "clock_model", "targetname" );

    foreach ( var_6, var_9 in var_7 )
    {
        switch ( var_9.script_noteworthy )
        {
            case "clock_3":
            case "clock_2":
            case "clock":
                var_9.maxhealth = 5;
                var_9.health = 5;
                var_9._id_4CE9 = 0;
                var_9 setcandamage( 1 );
                break;
            default:
                break;
        }

        level.clocks_to_be_destroyed[var_6] = var_9;
    }

    foreach ( var_4 in level.tv_array )
    {
        switch ( var_4.name )
        {
            case "tv_p1":
                var_4.number_of_tv_interactions = 4;
                var_4.times_interacted = 0;
                var_4.owner_prefix = "p1_";
                break;
            case "tv_p2":
                var_4.number_of_tv_interactions = 4;
                var_4.times_interacted = 0;
                var_4.owner_prefix = "p2_";
                break;
            case "tv_p3":
                var_4.number_of_tv_interactions = 4;
                var_4.times_interacted = 0;
                var_4.owner_prefix = "p3_";
                break;
            case "tv_p4":
                var_4.number_of_tv_interactions = 4;
                var_4.times_interacted = 0;
                var_4.owner_prefix = "p4_";
                break;
            default:
                break;
        }

        foreach ( var_1 in level.players )
        {
            if ( var_1._id_134FD == var_4.owner_prefix )
            {
                if ( !isdefined( var_1.tv_interaction ) )
                    var_1.tv_interaction = var_4;
            }
        }
    }
}

watch_for_quest_progress( var_0 )
{
    level endon( "game_ended" );
    self endon( "tv_quest_complete" );
    self endon( "disconnect" );

    if ( scripts\engine\utility::_id_9CEE( self.finished_final_part ) )
        return;

    for (;;)
    {
        if ( scripts\engine\utility::_id_9CEE( self.finished_final_part ) )
        {
            self.tv_interaction.times_interacted = 0;
            self.interacted_with_set = undefined;
            thread final_part_rewind_quest();
            wait 5;
            self notify( "tv_quest_complete" );
        }

        wait 1;
    }
}

use_memory_tv_object( var_0, var_1 )
{
    level endon( "game_ended" );
    var_1 endon( "tv_quest_complete" );
    var_1 endon( "disconnect" );
    var_1 endon( "last_stand" );
    var_1 endon( "death" );

    if ( var_1._id_134FD == "p5_" )
        playloopsound( var_0.origin, "ww_magicbox_laughter" );
    else
    {
        if ( scripts\engine\utility::_id_9CEE( var_1.kung_fu_mode ) )
            return;

        if ( scripts\engine\utility::_id_9CEE( var_1._id_9F2A ) )
            return;

        var_2 = 666;
        var_3 = " ";

        if ( var_1._id_134FD == "p5_" )
        {
            playloopsound( var_0.origin, "ww_magicbox_laughter" );
            return;
        }

        if ( !isdefined( var_1.tv_interaction ) )
        {
            foreach ( var_5 in level.tv_array )
            {
                if ( var_5.owner_prefix == var_1._id_134FD )
                    var_1.tv_interaction = var_5;
            }
        }

        if ( !isdefined( var_1.tv_model ) )
        {
            foreach ( var_8 in level.tv_modelsarray )
            {
                if ( var_8.owner == var_1._id_134FD )
                    var_1.tv_model = var_8;
            }
        }

        if ( scripts\engine\utility::_id_9CEE( var_1.finished_part_one ) && scripts\engine\utility::_id_9CEE( var_1.finished_part_two ) && scripts\engine\utility::_id_9CEE( var_1.finished_part_three ) || getdvar( "scr_tv_quest" ) != "" )
        {
            if ( !isdefined( var_1._id_134FD ) )
                return;

            if ( scripts\engine\utility::_id_9CEE( var_1.finished_backstory ) )
                return;

            if ( scripts\engine\utility::_id_9CEE( var_1.interacted_with_set ) )
                return;

            if ( var_1.tv_interaction.name != var_0.name )
            {
                playloopsound( var_0.origin, "ww_magicbox_laughter" );
                return;
                return;
            }

            var_10 = randomint( 6 );

            switch ( var_10 )
            {
                case 0:
                    var_2 = 0;
                    var_3 = "yeti";
                    var_1.tv_model._id_01F1 setmodel( "cp_disco_tv_yeti" );
                    playloopsound( var_0.origin, "ww_magicbox_laughter" );
                    level thread delay_tv_interaction( var_0, 3, var_1 );
                    return;
                case 1:
                    var_2 = 1;
                    var_3 = "p1_";
                    var_1.tv_model._id_01F1 setmodel( "cp_disco_tv_sally" );
                    break;
                case 2:
                    var_2 = 2;
                    var_3 = "p2_";
                    var_1.tv_model._id_01F1 setmodel( "cp_disco_tv_pointdexter" );
                    break;
                case 3:
                    var_2 = 3;
                    var_3 = "p3_";
                    var_1.tv_model._id_01F1 setmodel( "cp_disco_tv_andre" );
                    break;
                case 4:
                    var_2 = 4;
                    var_3 = "p4_";
                    var_1.tv_model._id_01F1 setmodel( "cp_disco_tv_aj" );
                    break;
                default:
                    var_2 = 5;
                    var_3 = "crt";
                    var_1.tv_model._id_01F1 setmodel( "cp_disco_tv_crt" );
                    var_1 playlocalsound( "disco_backstory_tv_channel" );
                    level thread delay_tv_interaction( var_0, 3, var_1 );
                    return;
            }

            var_1 playlocalsound( "disco_backstory_tv_channel" );

            if ( var_3 == var_1._id_134FD )
            {
                var_1 thread watch_for_quest_progress( var_0 );
                var_1.interacted_with_set = 1;
                wait 1;
                var_1 thread start_fake_spawn_sequence( var_1 );
                level thread delay_tv_interaction( var_0, 60, var_1 );
                return;
            }

            level thread delay_tv_interaction( var_0, 3, var_1 );
            return;
            return;
        }
    }
}

delay_tv_interaction( var_0, var_1, var_2 )
{
    var_2 endon( "disconnect" );
    _id_0A59::_id_E01A( var_0, var_2 );
    level scripts\engine\utility::_id_13736( var_1, "tv_quest_complete" );
    _id_0A59::_id_175D( var_0, var_2 );
}

watch_for_tries()
{
    self endon( "tv_quest_complete" );
    level endon( "game_ended" );
    self endon( "disconnect" );

    if ( self.tv_interaction.times_interacted == self.tv_interaction.number_of_tv_interactions )
        thread start_fake_spawn_sequence( self );
    else
        self.interacted_with_set = undefined;
}

choose_number_of_karatemasters()
{
    var_0 = 1;

    if ( isdefined( level.players.size ) && level.players.size > 0 )
    {
        switch ( level.players.size )
        {
            case 1:
                var_0 = 4;
                break;
            case 4:
            case 3:
            case 2:
                var_0 = 8;
                break;
            default:
                var_0 = 4;
                break;
        }

        return var_0;
    }
}

start_fake_spawn_sequence( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    var_1 = choose_number_of_karatemasters();
    var_2 = var_1;
    level.skeletons_alive = var_2;
    var_3 = 0;
    var_4 = undefined;
    var_5 = undefined;
    var_6 = undefined;
    var_7 = undefined;

    if ( _id_0D61::_id_C209() < var_2 )
    {
        var_4 = level._id_4B6E;
        var_5 = level._id_B467;
        var_6 = level._id_5274;
        var_7 = level._id_13BD3;

        while ( level._id_4B6E == level._id_5274 )
            wait 0.05;

        level._id_4B6E = 0;
        level._id_5274 = 24;
        level._id_10942 = 1;
        var_3 = 1;
    }

    var_8 = _func_275( self.tv_interaction.origin, 128, var_2 );
    _id_0D61::_id_93EB( var_2 );
    wait 2;
    var_9 = skeleton_spawner( var_8, var_0 );

    while ( level.skeletons_alive > 0 )
        wait 0.1;

    var_0.finished_final_part = 1;
    var_0.tv_model._id_01F1 setmodel( "cp_disco_tv_crt" );

    if ( var_3 )
    {
        level._id_10847 = undefined;
        level._id_13BD6 = undefined;
        level._id_10942 = undefined;
        level._id_13FA3 = 0;

        if ( level._id_13BD3 == var_7 )
        {
            level._id_4B6E = var_4;
            level._id_B467 = var_5;
            level._id_5274 = var_6;
        }
        else
        {
            level._id_4B6E = 0;
            level._id_B467 = _id_0D61::_id_7ACD( level._id_13BD3 );
            level._id_5274 = _id_0D61::_id_7D10( level._id_13BD3 );
        }
    }

    _id_0D61::_id_4FB8( var_2 );
    return 1;
}

determine_best_shovel_spawns( var_0, var_1 )
{
    var_2 = [];
    var_3 = scripts\engine\utility::_id_8180( "camper_to_lake_spawner", "targetname" );
    var_3 = sortbydistance( var_3, var_0 );

    for ( var_4 = 0; var_4 < var_1; var_4++ )
        var_2[var_4] = var_3[var_4];

    var_5 = scripts\engine\utility::_id_22A7( var_2 );
    return var_2;
}

get_rand_point( var_0 )
{
    while ( ![[ level._id_164B ]]( var_0 ) )
    {
        var_0 = _func_274( var_0, 128 );
        scripts\engine\utility::waitframe();
    }

    return var_0;
}

skeleton_spawner( var_0, var_1 )
{
    var_1 endon( "disconnect" );
    var_2 = [];

    for ( var_3 = 0; var_3 < var_0.size; var_3++ )
    {
        var_0[var_3] = get_rand_point( var_0[var_3] );
        var_4 = spawn_skeleton_solo( var_0[var_3] );

        if ( isdefined( var_4 ) )
        {
            var_4 thread skeleton_death_watcher( var_1 );
            var_2[var_2.size] = var_4;
            var_4 thread set_skeleton_attributes();

            if ( !isdefined( var_1.skeletons ) )
                var_1.skeletons = [];

            var_1.skeletons[var_1.skeletons.size] = var_4;
            wait 1;
            continue;
        }

        level.skeletons_alive--;
    }

    return var_2;
}

skeleton_death_watcher( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "disconnect" );
    self waittill( "death" );
    level.skeletons_alive--;

    if ( level.skeletons_alive <= 0 )
        var_0.finished_final_part = 1;
}

spawn_skeleton_solo( var_0 )
{
    var_0 = scripts\engine\utility::_id_5D14( var_0, 30, -100 );
    var_1 = spawnstruct();
    var_1.origin = var_0;
    var_1._id_EE79 = "ground_spawn_no_boards";
    var_1._id_ECF5 = "spawn_ground";
    var_2 = 4;
    var_3 = 0.3;

    for ( var_4 = 0; var_4 < var_2; var_4++ )
    {
        var_5 = var_1 _id_0D61::_id_1081B( "karatemaster", 1, var_1, var_0 );

        if ( isdefined( var_5 ) )
            return var_5;

        wait( var_3 );
    }

    return undefined;
}

set_skeleton_attributes()
{
    level endon( "game_ended" );
    self endon( "death" );
    self.dont_cleanup = 1;
    self._id_01F5 = "sprint";

    if ( !scripts\engine\utility::_id_9CEE( self.aj_karatemaster ) )
        self.aj_karatemaster = 1;

    self.health = scripts\cp\zombies\cp_disco_spawning::_id_3728( "karatemaster" );
    self.maxhealth = scripts\cp\zombies\cp_disco_spawning::_id_3728( "karatemaster" );
}

skeleton_arrival_cowbell( var_0 )
{
    var_1 = ( 0, 0, -11 );
    var_2 = spawnfx( level._effect["superslasher_summon_zombie_portal"], var_0 + var_1, ( 0, 0, 1 ), ( 1, 0, 0 ) );
    triggerfx( var_2 );
    scripts\engine\utility::waittill_any( "death", "intro_vignette_done" );
    var_2 delete();
}

hint_nunchucks( var_0, var_1 )
{
    return "";
}

remove_influence_of_rewind_afterlife( var_0 )
{
    if ( isdefined( var_0.rewindmover ) )
    {
        var_0 setstance( "stand" );
        var_0.rewindmover solid();

        if ( !var_0 scripts\engine\utility::_id_A009() )
            var_0 scripts\engine\utility::_id_1C76( 1 );

        if ( !var_0 scripts\engine\utility::_id_9FBE() )
            var_0 scripts\engine\utility::_id_1C6E( 1 );

        if ( !var_0 _id_0A77::_id_9FA2() )
            var_0 _id_0A77::_id_1C5E( 1 );

        var_0 _id_0A77::_id_E0E6( "rewind_invulnerability", 0 );
        var_0 _meth_84D3( "power_exit", "rewind" );
        var_0 _meth_8447();
        var_0 _meth_84D8( 0 );
        var_0 scripts\engine\utility::_id_1C53( 1 );
        var_0 scripts\engine\utility::_id_1C71( 1 );
        var_0 scripts\engine\utility::_id_1C4E( 1 );
        var_0 _meth_8010( 1 );
        var_0 _meth_855A( 0 );
        var_0 unlink();
        var_0._id_6F73 = undefined;
        var_0.rewindmover delete();
        var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
        var_0 setscriptablepartstate( "clockFx", "inactive" );
        var_0 notify( "rewind_power_finished" );

        if ( isdefined( var_0.clocks_destroyed ) )
            var_0.clocks_destroyed = 0;

        var_0._id_9F2A = 0;
    }
}

init_nunchucks()
{
    level.rewind_afterlife_func = ::remove_influence_of_rewind_afterlife;

    if ( !isdefined( level.clock ) )
        level.clock = [];

    if ( !isdefined( level.clock[0] ) )
        level.clock[0] = undefined;

    level.quest_one_objects = [];

    foreach ( var_2, var_1 in scripts\engine\utility::_id_8180( "clock", "script_noteworthy" ) )
        level.clock[0] = var_1;

    var_3 = scripts\engine\utility::_id_8180( "mem", "targetname" );

    foreach ( var_2, var_1 in var_3 )
    {
        var_5 = undefined;

        switch ( var_1.script_noteworthy )
        {
            case "memory_object_one":
                var_5 = spawn( "script_model", var_1.origin );
                var_5 setmodel( "p7_book_vintage_05" );
                var_5.angles = var_1.angles;
                var_1.object_num = 1;
                break;
            case "memory_object_two":
                var_5 = spawn( "script_model", var_1.origin );
                var_5 setmodel( "p7_book_vintage_05" );
                var_5.angles = var_1.angles;
                var_1.object_num = 2;
                break;
            default:
        }

        var_5 setcandamage( 1 );
        var_5.maxhealth = 5;
        var_5.health = 5;
        var_5._id_4CE9 = 0;

        if ( isdefined( var_5 ) )
            var_1._id_01F1 = var_5;

        level.quest_one_objects[var_2] = var_1;
    }

    foreach ( var_7 in level.players )
        var_7.attacked_first_object = 0;

    if ( isdefined( level.clock_interaction ) )
        _id_0A59::_id_6214( level.clock_interaction );
}

watch_for_player_disconnect( var_0, var_1, var_2, var_3 )
{
    level endon( "clock_tick_done_1" );
    level endon( "objects_reset" );
    level endon( var_2 );
    var_0 waittill( "disconnect" );

    foreach ( var_5 in var_3 )
    {
        var_5.health = 5;
        var_5._id_4CE9 = 0;
        var_5._id_01F1 _meth_8388( var_0 );
        var_5.maxhealth = 5;
    }

    var_0 setscriptablepartstate( "clockFx", "inactive" );
    var_1.clock_owner = undefined;
    var_0.objects_array_sequence["part1"] = [];
    var_1.clock_active = 0;
    _id_0A59::_id_6214( var_1 );
    level notify( "objects_reset" );
}

use_nunchucks_object( var_0, var_1 )
{
    level endon( "clock_tick_done_1" );

    if ( var_1._id_134FD == "p5_" )
    {
        playloopsound( var_0.origin, "ww_magicbox_laughter" );
        return;
    }

    if ( scripts\engine\utility::_id_9CEE( var_1.kung_fu_mode ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_1._id_9F2A ) )
        return;

    foreach ( var_3 in level.players )
    {
        if ( var_3 == var_1 )
        {
            if ( isdefined( level.clock_interaction_q2 ) && isdefined( level.clock_interaction_q2.clock_owner ) && level.clock_interaction_q2.clock_owner == var_3 )
                return;
            else if ( isdefined( level.clock_interaction_q3 ) && isdefined( level.clock_interaction_q3.clock_owner ) && level.clock_interaction_q3.clock_owner == var_3 )
                return;
        }
        else if ( isdefined( level.clock_interaction ) && isdefined( level.clock_interaction.clock_owner ) && level.clock_interaction.clock_owner == var_3 )
            return;
    }

    if ( scripts\engine\utility::_id_9CEE( var_1._id_9F2A ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_1.finished_part_one ) && getdvar( "scr_nunchucks" ) == "" )
        return;

    var_1 setscriptablepartstate( "clockFx", "active" );
    level thread player_clock_tick_sfx( var_1 );
    level thread watch_for_player_disconnect( var_1, var_0, "part_1_VO_done", level.quest_one_objects );
    level thread watch_for_player_laststand( var_1, var_0, "part_1_VO_done", level.quest_one_objects );
    _id_0A59::_id_E01A( var_0, var_1 );
    level.clock_interaction = var_0;
    var_0.clock_owner = var_1;

    if ( !isdefined( var_1.objects_array_sequence ) )
        var_1.objects_array_sequence = [];

    if ( !isdefined( var_1.objects_array_sequence["part1"] ) )
        var_1.objects_array_sequence["part1"] = [];

    var_0.clock_active = 1;
    var_1.angles_when_using_clock = var_1 getplayerangles();
    var_1 _id_E266();
    var_1._id_E4D8 = 0;
    var_1._id_E4C8[var_1._id_E4D8] = var_1 getplayerangles();
    var_1._id_E4D7[var_1._id_E4D8] = var_1.origin;
    var_1._id_E4DA[var_1._id_E4D8] = var_1 _meth_816B();
    var_5 = gettime();
    var_1 thread _id_DDF2( 1 );
    var_1 thread watch_for_sequence_trigger( var_1, "1" );
    var_1 thread clock_watcher( var_0, var_5, var_1, 1 );
    var_1 _id_E897( 1 );
    level thread delay_enable_linked_interaction( var_0, 30, var_1 );
}

player_clock_tick_sfx( var_0 )
{
    var_1 = spawn( "script_origin", var_0.origin );
    var_1 linkto( var_0 );
    var_1 playloopsound( "quest_rewind_clock_tick_long" );
    var_0 scripts\engine\utility::waittill_any( "stop_clock_sfx", "objects_reset_q2", "objects_reset_q3", "part_1_VO_done", "part_2_VO_done", "part_3_VO_done", "backstory_quest_complete", "clocks_reset" );
    var_1 stoploopsound();
    var_1 delete();
}

watch_for_player_laststand( var_0, var_1, var_2, var_3 )
{
    level endon( "clock_tick_done_1" );
    level endon( "objects_reset" );
    level endon( var_2 );
    var_0 endon( "disconnect" );
    var_0 waittill( "last_stand" );

    foreach ( var_5 in var_3 )
    {
        var_5._id_01F1.health = 5;
        var_5._id_01F1._id_4CE9 = 0;
        var_5._id_01F1.maxhealth = 5;
        var_5._id_01F1 _meth_8388( var_0 );
    }

    foreach ( var_8 in level.players )
        var_8.attacked_first_object = 0;

    var_1.clock_owner = undefined;
    var_0 notify( "stop_clock_sfx" );
    var_0.objects_array_sequence["part1"] = [];
    var_0 setscriptablepartstate( "clockFx", "inactive" );
    var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
    var_1.clock_active = 0;
    _id_0A59::_id_6214( var_1 );
    level notify( "objects_reset" );
}

clock_watcher( var_0, var_1, var_2, var_3 )
{
    var_2 endon( "disconnect" );
    var_2 endon( "death" );
    level endon( "game_ended" );
    var_4 = 0;

    if ( isdefined( var_3 ) )
    {
        switch ( var_3 )
        {
            case 1:
                var_4 = 14.0;
                break;
            case 2:
                var_4 = 15.45;
                break;
            case 3:
                var_4 = 16.25;
                break;
        }
    }

    while ( gettime() <= var_1 + var_4 * 1000 )
        scripts\engine\utility::waitframe();

    var_0.clock_active = 0;
    var_0.clock_owner = undefined;
    var_2 notify( "stop_clock_sfx" );
    level notify( "clock_tick_done_" + var_3 );
    var_2 setscriptablepartstate( "scripted_rewind", "inactive" );
    var_2 setscriptablepartstate( "clockFx", "inactive" );
    level thread delay_enable_linked_interaction( var_0, 30, var_2 );
}

delay_enable_linked_interaction( var_0, var_1, var_2 )
{
    var_2 endon( "disconnect" );
    level waittill( "spawn_wave_done" );
    _id_0A59::_id_175D( var_0, var_2 );
}

watch_for_sequence_trigger( var_0, var_1 )
{
    var_0 endon( "part_" + var_1 + "_VO_done" );
    var_0 endon( "disconnect" );
    var_0 endon( "death" );
    level endon( "game_ended" );
    level endon( "objects_reset" );
    var_0 endon( "objects_reset_q" + var_1 );
    var_0 notify( "ending_thread_for_" + var_0.name + " running quest " + var_1 );
    var_0 endon( "ending_thread_for_" + var_0.name + " running quest " + var_1 );
    var_2 = [];
    var_3 = 0;
    var_4 = "part";
    var_5 = undefined;

    if ( isdefined( var_1 ) )
    {
        switch ( var_1 )
        {
            case "1":
                var_2 = level.quest_one_objects;
                var_3 = 2;
                var_4 = "part1";
                var_5 = ::watch_for_damage_on_struct;
                break;
            case "2":
                var_2 = var_0.quest_two_objects;
                var_3 = 2;
                var_6 = scripts\engine\utility::_id_8180( "memory_object_three", "script_noteworthy" );

                foreach ( var_8 in var_6 )
                {
                    var_0.quest_active_q2 = 1;
                    var_0 _id_0A59::_id_175D( var_8, var_0 );
                }

                var_6 = scripts\engine\utility::_id_8180( "memory_object_four", "script_noteworthy" );

                foreach ( var_8 in var_6 )
                {
                    var_0.quest_active_q2 = 1;
                    var_0 _id_0A59::_id_175D( var_8, var_0 );
                }

                var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
                var_4 = "quest_2";
                break;
            case "3":
                var_2 = var_0.quest_three_objects;
                var_3 = 2;
                var_6 = scripts\engine\utility::_id_8180( "memory_object_five", "script_noteworthy" );

                foreach ( var_8 in var_6 )
                {
                    var_0.quest_active_q3 = 1;
                    var_0 _id_0A59::_id_175D( var_8, var_0 );
                }

                var_6 = scripts\engine\utility::_id_8180( "memory_object_six", "script_noteworthy" );

                foreach ( var_8 in var_6 )
                {
                    var_0.quest_active_q3 = 1;
                    var_0 _id_0A59::_id_175D( var_8, var_0 );
                }

                var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
                var_4 = "quest_3";
                break;
        }
    }

    if ( isdefined( var_5 ) )
    {
        foreach ( var_8 in var_2 )
            var_8 thread [[ var_5 ]]( var_0 );
    }

    for (;;)
    {
        if ( var_0.objects_array_sequence[var_4].size == var_3 )
        {
            var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
            var_0 setscriptablepartstate( "clockFx", "inactive" );
            level thread play_character_bio( int( var_1 ), var_0 );
            var_0 thread reset_rewind_mover( var_1 );

            switch ( var_1 )
            {
                case "1":
                    foreach ( var_19 in level.players )
                        var_19.attacked_first_object = 0;

                    var_0.finished_part_one = 1;
                    level.clock_interaction.clock_owner = undefined;
                    var_0 notify( "part_" + var_1 + "_VO_done" );
                    break;
                case "2":
                    foreach ( var_19 in level.players )
                        var_19.attacked_first_object_q2 = 0;

                    var_0.finished_part_two = 1;
                    var_0.quest_active_q2 = 0;
                    level.clock_interaction_q2.clock_owner = undefined;
                    var_0 notify( "part_" + var_1 + "_VO_done" );
                    break;
                case "3":
                    foreach ( var_19 in level.players )
                        var_19.attacked_first_object_q3 = 0;

                    var_0.finished_part_three = 1;
                    var_0.quest_active_q3 = 0;
                    level.clock_interaction_q3.clock_owner = undefined;
                    var_0 notify( "part_" + var_1 + "_VO_done" );
                    break;
            }
        }

        scripts\engine\utility::waitframe();
    }
}

play_char_bio_vo_after_delay( var_0, var_1, var_2 )
{
    var_1 endon( "disconnect" );
    wait( var_2 + 10 );

    switch ( var_0 )
    {
        case 1:
            if ( var_1._id_134FD == "p1_" )
            {
                if ( !isdefined( level._id_4481["sally_willard_bio_1_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "sally_willard_bio_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["sally_willard_bio_1_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p2_" )
            {
                if ( !isdefined( level._id_4481["pdex_willard_bio_1_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "pdex_willard_bio_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["pdex_willard_bio_1_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p3_" )
            {
                if ( !isdefined( level._id_4481["andre_willard_bio_1_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "andre_willard_bio_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["andre_willard_bio_1_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p4_" )
            {
                if ( !isdefined( level._id_4481["aj_willard_bio_1_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "aj_willard_bio_1_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["aj_willard_bio_1_1"] = 1;
                }
            }

            break;
        case 2:
            if ( var_1._id_134FD == "p1_" )
            {
                if ( !isdefined( level._id_4481["sally_willard_bio_2_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "sally_willard_bio_2_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["sally_willard_bio_2_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p2_" )
            {
                if ( !isdefined( level._id_4481["pdex_willard_bio_2_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "pdex_willard_bio_2_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["pdex_willard_bio_2_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p3_" )
            {
                if ( !isdefined( level._id_4481["andre_willard_bio_2_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "andre_willard_bio_2_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["andre_willard_bio_2_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p4_" )
            {
                if ( !isdefined( level._id_4481["aj_willard_bio_2_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "aj_willard_bio_2_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["aj_willard_bio_2_1"] = 1;
                }
            }

            break;
        case 3:
            if ( var_1._id_134FD == "p1_" )
            {
                if ( !isdefined( level._id_4481["sally_willard_bio_3_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "sally_willard_bio_3_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["sally_willard_bio_3_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p2_" )
            {
                if ( !isdefined( level._id_4481["pdex_willard_bio_3_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "pdex_willard_bio_3_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["pdex_willard_bio_3_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p3_" )
            {
                if ( !isdefined( level._id_4481["andre_willard_bio_3_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "andre_willard_bio_3_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["andre_willard_bio_3_1"] = 1;
                }
            }

            if ( var_1._id_134FD == "p4_" )
            {
                if ( !isdefined( level._id_4481["aj_willard_bio_3_1"] ) )
                {
                    var_1 thread _id_0A6A::_id_12885( "aj_willard_bio_3_1", "rave_dialogue_vo", "highest", 666, 0, 0, 0, 100 );
                    level._id_4481["aj_willard_bio_3_1"] = 1;
                }
            }

            break;
    }
}

play_character_bio( var_0, var_1 )
{
    var_1 endon( "disconnect" );
    wait 3;
    var_2 = 60;
    var_3 = " ";

    switch ( var_0 )
    {
        case 1:
            if ( var_1._id_134FD == "p1_" )
                var_3 = "ww_bio_sally_1";

            if ( var_1._id_134FD == "p2_" )
                var_3 = "ww_bio_pdex_1";

            if ( var_1._id_134FD == "p3_" )
                var_3 = "ww_bio_andre_1";

            if ( var_1._id_134FD == "p4_" )
                var_3 = "ww_bio_aj_1";

            break;
        case 2:
            if ( var_1._id_134FD == "p1_" )
                var_3 = "ww_bio_sally_2";

            if ( var_1._id_134FD == "p2_" )
                var_3 = "ww_bio_pdex_2";

            if ( var_1._id_134FD == "p3_" )
                var_3 = "ww_bio_andre_2";

            if ( var_1._id_134FD == "p4_" )
                var_3 = "ww_bio_aj_2";

            break;
        case 3:
            if ( var_1._id_134FD == "p1_" )
                var_3 = "ww_bio_sally_3";

            if ( var_1._id_134FD == "p2_" )
                var_3 = "ww_bio_pdex_3";

            if ( var_1._id_134FD == "p3_" )
                var_3 = "ww_bio_andre_3";

            if ( var_1._id_134FD == "p4_" )
                var_3 = "ww_bio_aj_3";

            break;
    }

    var_1 thread _id_0A6A::_id_12885( var_3, "rave_ww_vo", "highest", 30, 1, 0, 1, 100 );
    var_2 = _id_0A6A::_id_7C76( var_3 );
    level thread dont_play_powerup_vo_for_delay( var_2 );
    play_char_bio_vo_after_delay( var_0, var_1, var_2 );
}

dont_play_powerup_vo_for_delay( var_0 )
{
    level.dont_play_powerup_vo = 1;
    wait( var_0 );
    level.dont_play_powerup_vo = 0;
}

reset_rewind_mover( var_0 )
{
    if ( scripts\engine\utility::_id_9CEE( self.finished_part_one ) || scripts\engine\utility::_id_9CEE( self.finished_part_two ) || scripts\engine\utility::_id_9CEE( self.finished_part_three ) )
    {
        if ( isdefined( self.rewindmover ) )
        {
            var_0 = int( var_0 );
            var_1 = level.clock[var_0 - 1].origin;
            var_2 = level.clock[var_0 - 1].angles;
            var_3 = ( 0, 0, 0 );
            thread watch_for_rewind_triggered_on_completion();
        }

        return;
    }

    var_0 = int( var_0 );
    var_1 = level.clock[var_0 - 1].origin;
    var_2 = level.clock[var_0 - 1].angles;
    var_3 = ( 0, 0, 0 );

    if ( isdefined( self.rewindmover ) || scripts\engine\utility::_id_9CEE( self._id_9F2A ) )
        thread watch_for_rewind_triggered_on_completion();
}

reset_on_failure( var_0 )
{
    level endon( "objects_reset" );
    level endon( "game_ended" );
    self endon( "death" );
    var_0 endon( "part_1_VO_done" );
    var_0 endon( "part_one_complete" );
    var_0 endon( "disconnect" );
    var_0 endon( "death" );
    var_0 endon( "last_stand" );

    for (;;)
    {
        level waittill( "clock_tick_done_1" );

        if ( var_0.objects_array_sequence["part1"].size != 2 )
        {
            foreach ( var_2 in level.quest_one_objects )
            {
                var_2._id_01F1.health = 5;
                var_2._id_01F1._id_4CE9 = 0;
                var_2._id_01F1 _meth_8388( var_0 );
                var_2._id_01F1.maxhealth = 5;
            }

            foreach ( var_5 in level.players )
                var_5.attacked_first_object = 0;

            level.clock_interaction.clock_owner = undefined;
            var_0.objects_array_sequence["part1"] = [];
            level.clock_interaction.clock_active = 0;
            var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
            var_0 setscriptablepartstate( "clockFx", "inactive" );

            if ( isdefined( var_0.rewindmover ) )
                var_0 thread reset_rewind_mover( 1 );

            var_0.quest_num = undefined;
            level notify( "objects_reset" );
        }

        wait 1;
    }
}

watch_for_damage_on_struct( var_0 )
{
    var_0 endon( "part_one_complete" );
    level endon( "objects_reset" );
    var_0 endon( "disconnect" );
    var_0 endon( "death" );
    var_0 endon( "last_stand" );
    thread reset_on_failure( var_0 );

    for (;;)
    {
        self._id_01F1 waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

        if ( !isplayer( var_2 ) && !isagent( var_2 ) )
            continue;

        if ( isdefined( level.clock_interaction.clock_owner ) && level.clock_interaction.clock_owner != var_2 )
            continue;

        if ( isdefined( var_5 ) && var_5 != "MOD_MELEE" )
            continue;

        if ( self.object_num == 2 && var_2.objects_array_sequence["part1"].size == 0 )
            continue;
        else if ( !scripts\engine\utility::_id_9CEE( var_2.attacked_first_object ) && self.object_num == 1 && var_2.objects_array_sequence["part1"].size == 0 )
        {
            var_2.objects_array_sequence["part1"][self.object_num - 1] = self;
            self._id_01F1._id_4CE9 = self._id_01F1._id_4CE9 + var_1;
            var_2.attacked_first_object = 1;
            self._id_01F1 _meth_8429( var_2 );
            var_2 playlocalsound( "part_pickup" );
        }

        if ( self.object_num == 2 && scripts\engine\utility::_id_9CEE( var_2.attacked_first_object ) )
        {
            var_2.objects_array_sequence["part1"][self.object_num - 1] = self;
            self._id_01F1._id_4CE9 = self._id_01F1._id_4CE9 + var_1;
            var_2.attacked_first_object = 1;
            self._id_01F1 _meth_8429( var_2 );
            var_2 playlocalsound( "part_pickup" );
        }

        if ( var_2.objects_array_sequence["part1"].size == 2 )
        {
            foreach ( var_12 in var_2.objects_array_sequence["part1"] )
                var_12 playfx_and_shatter( var_2 );

            var_2 playlocalsound( "zmb_ui_earn_tickets" );
            var_0 notify( "part_one_complete" );
        }
    }
}

playfx_and_shatter( var_0 )
{
    self endon( "death" );
    level endon( "game_ended" );
    playfx( level._effect["crafting_pickup"], self.origin );
    var_0 playlocalsound( "part_pickup" );

    if ( self._id_01F1.health < 0 )
    {
        self._id_01F1.health = 5;
        _id_0A59::_id_E01A( self, var_0 );
        var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
    }
}

removememorystructonconnect( var_0 )
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "connected", var_1 );
        var_1 thread removememorystructswhenvalid( var_0, var_1 );
    }
}

removememorystructswhenvalid( var_0, var_1 )
{
    while ( !isdefined( var_1._id_55BB ) )
        scripts\engine\utility::waitframe();

    _id_0A59::_id_E01A( var_0, var_1 );
    var_1 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_1 );
}

setup_backstory_models_hotjoined_player()
{
    if ( isdefined( level.quest_one_objects ) )
    {
        var_0 = level.quest_one_objects;

        foreach ( var_3, var_2 in var_0 )
        {
            var_2._id_01F1 _meth_8388( self );

            if ( !isdefined( self.quest_one_objects ) )
                self.quest_one_objects = [];

            self.quest_one_objects[var_3] = var_2;
        }
    }

    if ( !isdefined( self.quest_two_objects ) )
        self.quest_two_objects = [];

    if ( !isdefined( self.quest_three_objects ) )
        self.quest_three_objects = [];

    self.quest_two_objects = level.quest_two_objects;
    self.quest_three_objects = level.quest_three_objects;
}

setup_backstory_models( var_0, var_1 )
{
    if ( !isdefined( level.quest_two_objects ) )
        level.quest_two_objects = [];

    if ( !isdefined( level.quest_three_objects ) )
        level.quest_three_objects = [];

    scripts\cp\maps\cp_disco\cp_disco::addtopersonalinteractionlist( var_0 );

    foreach ( var_3 in level.players )
    {
        var_0.object_num = 1;

        switch ( var_1 )
        {
            case "memory_object_three":
                var_0.object_num = 1;
                var_3.attacked_first_object_q2 = 0;
                break;
            case "memory_object_four":
                var_0.object_num = 2;
                break;
            case "memory_object_five":
                var_0.object_num = 1;
                var_3.attacked_first_object_q3 = 0;
                break;
            case "memory_object_six":
                var_0.object_num = 2;
                break;
            default:
        }

        if ( var_1 == "memory_object_three" || var_1 == "memory_object_four" )
            level.quest_two_objects[var_0.object_num - 1] = var_0;

        if ( var_1 == "memory_object_five" || var_1 == "memory_object_six" )
            level.quest_three_objects[var_0.object_num - 1] = var_0;

        if ( !isdefined( var_3.quest_two_objects ) )
            var_3.quest_two_objects = [];

        if ( !isdefined( var_3.quest_three_objects ) )
            var_3.quest_three_objects = [];

        var_3.quest_two_objects[var_0.object_num - 1] = level.quest_two_objects[var_0.object_num - 1];
        var_3.quest_three_objects[var_0.object_num - 1] = level.quest_three_objects[var_0.object_num - 1];

        if ( isdefined( level.quest_one_objects ) )
            var_3.quest_one_objects = level.quest_one_objects;
    }
}

mem_object_hint( var_0, var_1 )
{
    return "";
}

mem_object_func( var_0, var_1 )
{

}

getcurrentquestfromstruct( var_0, var_1 )
{
    if ( !isdefined( var_0.script_noteworthy ) )
        return undefined;

    switch ( var_0.script_noteworthy )
    {
        case "memory_object_four":
        case "memory_object_three":
            return "quest_2";
        case "memory_object_six":
        case "memory_object_five":
            return "quest_3";
        default:
            return undefined;
    }

    return undefined;
}

activatememquestmodel( var_0, var_1, var_2 )
{
    level notify( var_0.script_noteworthy + "_" + var_1.name );
    level endon( var_0.script_noteworthy + "_" + var_1.name );
    level endon( "game_ended" );
    var_1 endon( "disconnect" );
    var_1 endon( "last_stand" );
    var_2 endon( "p_ent_reset" );

    if ( !isdefined( var_0._id_01F1 ) )
        return;

    var_0._id_01F1.health = 5;
    var_0._id_01F1.maxhealth = 5;
    var_0._id_01F1 setcandamage( 1 );
    var_3 = getcurrentquestfromstruct( var_0, var_1 );

    for (;;)
    {
        var_0._id_01F1 waittill( "damage", var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13 );

        if ( !isplayer( var_5 ) )
            continue;

        if ( var_5 != var_1 )
            continue;

        if ( !isdefined( var_3 ) )
            continue;

        if ( !var_5 _id_0A77::_id_9D05() )
            continue;

        if ( var_3 == "quest_2" && !scripts\engine\utility::_id_9CEE( var_1.quest_active_q2 ) )
            continue;

        if ( var_3 == "quest_3" && !scripts\engine\utility::_id_9CEE( var_1.quest_active_q3 ) )
            continue;

        if ( isdefined( var_8 ) && var_8 != "MOD_MELEE" )
            continue;

        if ( var_0.object_num == 2 && var_5.objects_array_sequence[var_3].size == 0 )
            continue;
        else if ( var_0.object_num == 1 && var_5.objects_array_sequence[var_3].size == 0 )
        {
            if ( var_3 == "quest_2" && !scripts\engine\utility::_id_9CEE( var_5.attacked_first_object_q2 ) )
            {
                var_5.objects_array_sequence[var_3][0] = var_0;
                var_0._id_01F1._id_4CE9 = var_0._id_01F1._id_4CE9 + var_4;
                var_5.attacked_first_object_q2 = 1;
                _id_0A59::_id_E01A( var_0, var_5 );
                var_5 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_5 );
                var_5 playlocalsound( "part_pickup" );
            }
            else if ( var_3 == "quest_3" && !scripts\engine\utility::_id_9CEE( var_5.attacked_first_object_q3 ) )
            {
                var_5.objects_array_sequence[var_3][0] = var_0;
                var_0._id_01F1._id_4CE9 = var_0._id_01F1._id_4CE9 + var_4;
                var_5.attacked_first_object_q3 = 1;
                _id_0A59::_id_E01A( var_0, var_5 );
                var_5 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_5 );
                var_5 playlocalsound( "part_pickup" );
            }
        }

        if ( var_0.object_num == 2 )
        {
            if ( var_3 == "quest_2" && scripts\engine\utility::_id_9CEE( var_5.attacked_first_object_q2 ) || var_3 == "quest_3" && scripts\engine\utility::_id_9CEE( var_5.attacked_first_object_q3 ) )
            {
                var_5.objects_array_sequence[var_3][1] = var_0;
                var_0._id_01F1._id_4CE9 = var_0._id_01F1._id_4CE9 + var_4;
                _id_0A59::_id_E01A( var_0, var_5 );
                var_5 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_5 );
                var_5 playlocalsound( "part_pickup" );
            }
        }

        if ( var_5.objects_array_sequence[var_3].size == 2 )
        {
            var_5 playlocalsound( "zmb_ui_earn_tickets" );

            if ( var_3 == "quest_2" )
                var_5 notify( "part_two_complete" );
            else if ( var_3 == "quest_3" )
                var_5 notify( "part_three_complete" );

            foreach ( var_15 in var_5.objects_array_sequence[var_3] )
                var_15 playfx_and_shatter( var_5 );
        }
    }
}

applymemquestattributes( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( var_3._id_134FD ) )
        return;

    if ( !isdefined( var_1.script_noteworthy ) )
        return;

    switch ( var_1.script_noteworthy )
    {
        case "memory_object_three":
            if ( var_3._id_134FD == "p1_" )
            {
                var_1.playeroffset[var_3.name] = ( -2462.58, 4604.5, 782.219 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_memory_quest_newspaper" );
                else
                    var_0 setmodel( "cp_disco_memory_quest_newspaper_nophy" );

                var_0.origin = ( -2462.58, 4604.5, 782.219 );
                var_0.angles = ( 0, 180, 0 );
            }
            else if ( var_3._id_134FD == "p2_" )
            {
                var_1.playeroffset[var_3.name] = ( -2462.58, 4604.5, 782.219 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_comic_book" );
                else
                    var_0 setmodel( "cp_disco_comic_book_nophy" );

                var_0.origin = ( -2462.58, 4604.5, 782.219 );
                var_0.angles = ( 0, 180, 0 );
            }
            else if ( var_3._id_134FD == "p3_" )
            {
                var_1.playeroffset[var_3.name] = ( -2459.6, 4597.5, 783.2 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_microphone_quest" );
                else
                    var_0 setmodel( "cp_disco_microphone_nophy" );

                var_0.origin = ( -2459.6, 4597.5, 783.2 );
                var_0.angles = ( 85, 0, 0 );
            }
            else if ( var_3._id_134FD == "p4_" )
            {
                var_1.playeroffset[var_3.name] = ( -2459.5, 4597.5, 782.1 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_trophy" );
                else
                    var_0 setmodel( "cp_disco_trophy_nophy" );

                var_0.origin = ( -2459.5, 4597.5, 782.1 );
                var_0.angles = ( 0, 0, 0 );
            }

            break;
        case "memory_object_four":
            if ( var_3._id_134FD == "p1_" )
            {
                var_1.playeroffset[var_3.name] = ( -1215, 294.5, 956.5 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_memory_quest_newspaper" );
                else
                    var_0 setmodel( "cp_disco_memory_quest_newspaper_nophy" );

                var_0.origin = ( -1215, 294.5, 956.5 );
                var_0.angles = ( 0, 317.1, 0 );
            }
            else if ( var_3._id_134FD == "p2_" )
            {
                var_1.playeroffset[var_3.name] = ( -1215, 294.5, 956.5 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_comic_book" );
                else
                    var_0 setmodel( "cp_disco_comic_book_nophy" );

                var_0.origin = ( -1215, 294.5, 956.5 );
                var_0.angles = ( 0, 317.1, 0 );
            }
            else if ( var_3._id_134FD == "p3_" )
            {
                var_1.playeroffset[var_3.name] = ( -1215, 301.5, 957.5 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_microphone_quest" );
                else
                    var_0 setmodel( "cp_disco_microphone_nophy" );

                var_0.origin = ( -1215, 301.5, 957.5 );
                var_0.angles = ( 0, 0, -86.6 );
            }
            else if ( var_3._id_134FD == "p4_" )
            {
                var_1.playeroffset[var_3.name] = ( -1215, 299.5, 956.5 );

                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q2 ) )
                    var_0 setmodel( "cp_disco_trophy" );
                else
                    var_0 setmodel( "cp_disco_trophy_nophy" );

                var_0.origin = ( -1215, 299.5, 956.5 );
                var_0.angles = ( 0, 90, 0 );
            }

            break;
        case "memory_object_six":
        case "memory_object_five":
            if ( var_3._id_134FD == "p1_" )
            {
                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q3 ) )
                    var_0 setmodel( "cp_disco_movie_script_book_04" );
                else
                    var_0 setmodel( "cp_disco_movie_script_book_04_nophy" );
            }
            else if ( var_3._id_134FD == "p2_" )
            {
                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q3 ) )
                    var_0 setmodel( "cp_disco_movie_script_book_02" );
                else
                    var_0 setmodel( "cp_disco_movie_script_book_02_nophy" );
            }
            else if ( var_3._id_134FD == "p3_" )
            {
                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q3 ) )
                    var_0 setmodel( "cp_disco_movie_script_book_03" );
                else
                    var_0 setmodel( "cp_disco_movie_script_book_03_nophy" );
            }
            else if ( var_3._id_134FD == "p4_" )
            {
                if ( scripts\engine\utility::_id_9CEE( var_3.quest_active_q3 ) )
                    var_0 setmodel( "cp_disco_movie_script_book_01" );
                else
                    var_0 setmodel( "cp_disco_movie_script_book_01_nophy" );
            }

            break;
    }

    var_1._id_01F1 = var_0;
    var_1._id_01F1._id_4CE9 = 0;
    thread activatememquestmodel( var_1, var_3, var_0 );
}

init_mem3()
{
    level.special_mode_activation_funcs["memory_object_three"] = ::applymemquestattributes;
    level.normal_mode_activation_funcs["memory_object_three"] = ::applymemquestattributes;
    var_0 = scripts\engine\utility::_id_8180( "memory_object_three", "script_noteworthy" );

    foreach ( var_3, var_2 in var_0 )
    {
        var_2._id_86A2 = "locOverride";
        var_2.playeroffset = [];
        setup_backstory_models( var_2, "memory_object_three" );
    }
}

init_mem4()
{
    level.special_mode_activation_funcs["memory_object_four"] = ::applymemquestattributes;
    level.normal_mode_activation_funcs["memory_object_four"] = ::applymemquestattributes;
    var_0 = scripts\engine\utility::_id_8180( "memory_object_four", "script_noteworthy" );

    foreach ( var_3, var_2 in var_0 )
    {
        var_2._id_86A2 = "locOverride";
        var_2.playeroffset = [];
        setup_backstory_models( var_2, "memory_object_four" );
    }
}

init_mem5()
{
    level.special_mode_activation_funcs["memory_object_five"] = ::applymemquestattributes;
    level.normal_mode_activation_funcs["memory_object_five"] = ::applymemquestattributes;
    var_0 = scripts\engine\utility::_id_8180( "memory_object_five", "script_noteworthy" );

    foreach ( var_3, var_2 in var_0 )
    {
        var_2._id_86A2 = "locOverride";
        var_2.playeroffset = [];
        setup_backstory_models( var_2, "memory_object_five" );
    }
}

init_mem6()
{
    level.special_mode_activation_funcs["memory_object_six"] = ::applymemquestattributes;
    level.normal_mode_activation_funcs["memory_object_six"] = ::applymemquestattributes;
    var_0 = scripts\engine\utility::_id_8180( "memory_object_six", "script_noteworthy" );

    foreach ( var_3, var_2 in var_0 )
    {
        var_2._id_86A2 = "locOverride";
        var_2.playeroffset = [];
        setup_backstory_models( var_2, "memory_object_six" );
    }
}

init_nunchucks_2()
{
    level.quest_two_objects = [];

    if ( !isdefined( level.clock[1] ) )
        level.clock[1] = undefined;

    foreach ( var_2, var_1 in scripts\engine\utility::_id_8180( "clock_2", "script_noteworthy" ) )
        level.clock[1] = var_1;

    foreach ( var_4 in level.players )
        var_4.attacked_first_object_q2 = 0;

    if ( isdefined( level.clock_interaction_q2 ) )
        _id_0A59::_id_6214( level.clock_interaction_q2 );
}

watch_for_player_disconnect_q2( var_0, var_1, var_2, var_3 )
{
    level endon( "clock_tick_done_2" );
    var_0 endon( "objects_reset_q2" );
    level endon( var_2 );
    var_0 waittill( "disconnect" );

    foreach ( var_5 in var_3 )
    {
        if ( isdefined( var_5._id_01F1 ) )
        {
            var_5._id_01F1.health = 5;
            var_5._id_01F1._id_4CE9 = 0;
            var_5._id_01F1.maxhealth = 5;
        }

        _id_0A59::_id_175D( var_5, var_0 );
        var_0.quest_active_q2 = 0;
        var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
    }

    var_1.clock_owner = undefined;
    var_0.objects_array_sequence["quest_2"] = [];
    var_0 setscriptablepartstate( "clockFx", "inactive" );
    var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
    var_1.clock_active = 0;
    _id_0A59::_id_6214( var_1 );
    var_0 notify( "objects_reset_q2" );
}

use_nunchucks_object_2( var_0, var_1 )
{
    level endon( "clock_tick_done_2" );

    if ( var_1._id_134FD == "p5_" )
    {
        playloopsound( var_0.origin, "ww_magicbox_laughter" );
        return;
    }

    if ( scripts\engine\utility::_id_9CEE( var_1.kung_fu_mode ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_1._id_9F2A ) )
        return;

    foreach ( var_3 in level.players )
    {
        if ( var_3 == var_1 )
        {
            if ( isdefined( level.clock_interaction ) && isdefined( level.clock_interaction.clock_owner ) && level.clock_interaction.clock_owner == var_3 )
                return;
            else if ( isdefined( level.clock_interaction_q3 ) && isdefined( level.clock_interaction_q3.clock_owner ) && level.clock_interaction_q3.clock_owner == var_3 )
                return;
        }
        else if ( isdefined( level.clock_interaction_q2 ) && isdefined( level.clock_interaction_q2.clock_owner ) && level.clock_interaction_q2.clock_owner == var_3 )
            return;
    }

    if ( scripts\engine\utility::_id_9CEE( var_1.finished_part_two ) && getdvar( "scr_nunchucks" ) == "" )
        return;

    if ( !isdefined( var_1.objects_array_sequence ) )
        var_1.objects_array_sequence = [];

    if ( !isdefined( var_1.objects_array_sequence["quest_2"] ) )
        var_1.objects_array_sequence["quest_2"] = [];

    var_1 setscriptablepartstate( "clockFx", "active" );
    level thread player_clock_tick_sfx( var_1 );
    var_1 thread reset_on_failure_q2( var_1 );
    level thread watch_for_player_disconnect_q2( var_1, var_0, "part_2_VO_done", var_1.quest_two_objects );
    level thread watch_for_player_laststand_q2( var_1, var_0, "part_2_VO_done", var_1.quest_two_objects );
    _id_0A59::_id_E01A( var_0, var_1 );
    level.clock_interaction_q2 = var_0;
    var_0.clock_owner = var_1;
    var_0.clock_active = 1;
    var_1.angles_when_using_clock = var_1 getplayerangles();
    var_1 _id_E266();
    var_1._id_E4D8 = 0;
    var_1._id_E4C8[var_1._id_E4D8] = var_1 getplayerangles();
    var_1._id_E4D7[var_1._id_E4D8] = var_1.origin;
    var_1._id_E4DA[var_1._id_E4D8] = var_1 _meth_816B();
    var_5 = gettime();
    var_1 thread _id_DDF2( 2 );
    var_1 thread watch_for_sequence_trigger( var_1, "2" );
    var_1 thread clock_watcher( var_0, var_5, var_1, 2 );
    var_1 _id_E897( 2 );
    level thread delay_enable_linked_interaction( var_0, 30, var_1 );
}

watch_for_player_laststand_q2( var_0, var_1, var_2, var_3 )
{
    level endon( "clock_tick_done_2" );
    var_0 endon( "objects_reset_q2" );
    level endon( var_2 );
    var_0 endon( "disconnect" );
    var_0 waittill( "last_stand" );

    foreach ( var_5 in var_3 )
    {
        if ( isdefined( var_5._id_01F1 ) )
        {
            var_5._id_01F1.health = 5;
            var_5._id_01F1._id_4CE9 = 0;
            var_5._id_01F1.maxhealth = 5;
        }

        foreach ( var_7 in level.players )
            var_7.attacked_first_object_q2 = 0;

        var_0.quest_active_q2 = 0;
        _id_0A59::_id_175D( var_5, var_0 );
        var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
    }

    var_1.clock_owner = undefined;
    var_0.objects_array_sequence["quest_2"] = [];
    var_0 setscriptablepartstate( "clockFx", "inactive" );
    var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
    var_1.clock_active = 0;
    _id_0A59::_id_6214( var_1 );
    var_0 notify( "objects_reset_q2" );
}

reset_on_failure_q2( var_0 )
{
    var_0 endon( "part_2_VO_done" );
    var_0 endon( "objects_reset_q2" );
    level endon( "game_ended" );
    self endon( "death" );
    var_0 endon( "part_two_complete" );
    var_0 notify( "end_reset_thread_for_" + var_0.name + " for quest 2" );
    var_0 endon( "end_reset_thread_for_" + var_0.name + " for quest 2" );

    for (;;)
    {
        level waittill( "clock_tick_done_2" );

        if ( var_0.objects_array_sequence["quest_2"].size != 2 )
        {
            foreach ( var_2 in var_0.quest_two_objects )
            {
                if ( isdefined( var_2._id_01F1 ) )
                {
                    var_2._id_01F1.health = 5;
                    var_2._id_01F1._id_4CE9 = 0;
                    var_2._id_01F1.maxhealth = 5;
                }

                var_0.quest_active_q2 = 0;
                _id_0A59::_id_175D( var_2, var_0 );
                var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
            }

            foreach ( var_5 in level.players )
                var_5.attacked_first_object_q2 = 0;

            level.clock_interaction_q2.clock_owner = undefined;
            var_0.objects_array_sequence["quest_2"] = [];
            var_0 setscriptablepartstate( "clockFx", "inactive" );
            var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
            level.clock_interaction_q2.clock_active = 0;

            if ( isdefined( var_0.rewindmover ) )
                var_0 thread reset_rewind_mover( 2 );

            var_0.quest_num = undefined;
            var_0 notify( "objects_reset_q2" );
        }
    }
}

watch_for_damage_on_struct_q2( var_0 )
{
    var_0 endon( "part_two_complete" );
    var_0 endon( "objects_reset_q2" );
    var_0 endon( "delete_previous_thread" );

    for (;;)
    {
        self._id_01F1 waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

        if ( !isplayer( var_2 ) && !isagent( var_2 ) )
            continue;

        if ( isdefined( level.clock_interaction_q2.clock_owner ) && level.clock_interaction_q2.clock_owner != var_2 )
            continue;

        if ( !scripts\engine\utility::_id_9CEE( var_2.quest_active ) )
            continue;

        if ( isdefined( var_5 ) && var_5 != "MOD_MELEE" )
            continue;

        if ( self.object_num == 2 && var_2.objects_array_sequence["quest_2"].size == 0 )
            continue;
        else if ( !scripts\engine\utility::_id_9CEE( var_2.attacked_first_object_q2 ) && self.object_num == 1 && var_2.objects_array_sequence["part2"].size == 0 )
        {
            var_2.objects_array_sequence["quest_2"][self.object_num - 1] = self;
            self._id_01F1._id_4CE9 = self._id_01F1._id_4CE9 + var_1;
            var_2.attacked_first_object_q2 = 1;
            _id_0A59::_id_E01A( self, var_2 );
            var_2 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_2 );
            var_2 playlocalsound( "part_pickup" );
        }

        if ( self.object_num == 2 && scripts\engine\utility::_id_9CEE( var_2.attacked_first_object_q2 ) )
        {
            var_2.objects_array_sequence["quest_2"][self.object_num - 1] = self;
            self._id_01F1._id_4CE9 = self._id_01F1._id_4CE9 + var_1;
            _id_0A59::_id_E01A( self, var_2 );
            var_2 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_2 );
            var_2 playlocalsound( "part_pickup" );
        }

        if ( var_2.objects_array_sequence["quest_2"].size == 2 )
        {
            foreach ( var_12 in var_2.objects_array_sequence["quest_2"] )
                var_12 playfx_and_shatter( var_2 );

            var_2 playlocalsound( "zmb_ui_earn_tickets" );
            var_2 notify( "part_two_complete" );
        }
    }
}

init_nunchucks_3()
{
    level.quest_three_objects = [];

    if ( !isdefined( level.clock[2] ) )
        level.clock[2] = undefined;

    foreach ( var_2, var_1 in scripts\engine\utility::_id_8180( "clock_3", "script_noteworthy" ) )
        level.clock[2] = var_1;

    foreach ( var_4 in level.players )
        var_4.attacked_first_object_q3 = 0;

    if ( isdefined( level.clock_interaction_q3 ) )
        _id_0A59::_id_6214( level.clock_interaction_q3 );
}

watch_for_player_disconnect_q3( var_0, var_1, var_2, var_3 )
{
    level endon( "clock_tick_done_3" );
    var_0 endon( "objects_reset_q3" );
    level endon( var_2 );
    var_0 waittill( "disconnect" );

    foreach ( var_5 in var_3 )
    {
        if ( isdefined( var_5._id_01F1 ) )
        {
            var_5._id_01F1.health = 5;
            var_5._id_01F1._id_4CE9 = 0;
            var_5._id_01F1.maxhealth = 5;
        }

        var_0.quest_active_q3 = 0;
        _id_0A59::_id_175D( var_5, var_0 );
        var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
    }

    var_1.clock_owner = undefined;
    var_0.objects_array_sequence["quest_3"] = [];
    var_0 setscriptablepartstate( "clockFx", "inactive" );
    var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
    var_1.clock_active = 0;
    _id_0A59::_id_6214( var_1 );
    var_0 notify( "objects_reset_q3" );
}

use_nunchucks_object_3( var_0, var_1 )
{
    level endon( "clock_tick_done_3" );

    if ( var_1._id_134FD == "p5_" )
    {
        playloopsound( var_0.origin, "ww_magicbox_laughter" );
        return;
    }

    if ( scripts\engine\utility::_id_9CEE( var_1.kung_fu_mode ) )
        return;

    if ( scripts\engine\utility::_id_9CEE( var_1._id_9F2A ) )
        return;

    foreach ( var_3 in level.players )
    {
        if ( var_3 == var_1 )
        {
            if ( isdefined( level.clock_interaction ) && isdefined( level.clock_interaction.clock_owner ) && level.clock_interaction.clock_owner == var_3 )
                return;
            else if ( isdefined( level.clock_interaction_q2 ) && isdefined( level.clock_interaction_q2.clock_owner ) && level.clock_interaction_q2.clock_owner == var_3 )
                return;
        }
        else if ( isdefined( level.clock_interaction_q3 ) && isdefined( level.clock_interaction_q3.clock_owner ) && level.clock_interaction_q3.clock_owner == var_3 )
            return;
    }

    if ( scripts\engine\utility::_id_9CEE( var_1.finished_part_three ) && getdvar( "scr_nunchucks" ) == "" )
        return;

    if ( !isdefined( var_1.objects_array_sequence ) )
        var_1.objects_array_sequence = [];

    if ( !isdefined( var_1.objects_array_sequence["quest_3"] ) )
        var_1.objects_array_sequence["quest_3"] = [];

    var_1 setscriptablepartstate( "clockFx", "active" );
    level thread player_clock_tick_sfx( var_1 );
    var_1 thread reset_on_failure_q3( var_1 );
    level thread watch_for_player_disconnect_q3( var_1, var_0, "part_3_VO_done", var_1.quest_three_objects );
    level thread watch_for_player_laststand_q3( var_1, var_0, "part_3_VO_done", var_1.quest_three_objects );
    _id_0A59::_id_E01A( var_0, var_1 );
    level.clock_interaction_q3 = var_0;
    var_0.clock_owner = var_1;
    var_0.clock_active = 1;
    var_1.angles_when_using_clock = var_1 getplayerangles();
    var_1 _id_E266();
    var_1._id_E4D8 = 0;
    var_1._id_E4C8[var_1._id_E4D8] = var_1 getplayerangles();
    var_1._id_E4D7[var_1._id_E4D8] = var_1.origin;
    var_1._id_E4DA[var_1._id_E4D8] = var_1 _meth_816B();
    var_5 = gettime();
    var_1 thread _id_DDF2( 3 );
    var_1 thread watch_for_sequence_trigger( var_1, "3" );
    var_1 thread clock_watcher( var_0, var_5, var_1, 3 );
    var_1 _id_E897( 3 );
    level thread delay_enable_linked_interaction( var_0, 30, var_1 );
}

watch_for_player_laststand_q3( var_0, var_1, var_2, var_3 )
{
    level endon( "clock_tick_done_3" );
    var_0 endon( "objects_reset_q3" );
    level endon( var_2 );
    var_0 endon( "disconnect" );
    var_0 waittill( "last_stand" );

    foreach ( var_5 in var_3 )
    {
        if ( isdefined( var_5._id_01F1 ) )
        {
            var_5._id_01F1.health = 5;
            var_5._id_01F1._id_4CE9 = 0;
            var_5._id_01F1.maxhealth = 5;
        }

        foreach ( var_7 in level.players )
            var_7.attacked_first_object_q3 = 0;

        var_0.quest_active_q3 = 0;
        _id_0A59::_id_175D( var_5, var_0 );
        var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
    }

    var_1.clock_owner = undefined;
    var_0.objects_array_sequence["quest_3"] = [];
    var_1.clock_active = 0;
    _id_0A59::_id_6214( var_1 );
    var_0 notify( "objects_reset_q3" );
}

reset_on_failure_q3( var_0 )
{
    var_0 endon( "objects_reset_q3" );
    level endon( "game_ended" );
    self endon( "death" );
    var_0 endon( "part_3_VO_done" );
    var_0 endon( "part_three_complete" );
    var_0 notify( "end_reset_thread_for_" + var_0.name + " for quest 3" );
    var_0 endon( "end_reset_thread_for_" + var_0.name + " for quest 3" );

    for (;;)
    {
        level waittill( "clock_tick_done_3" );

        if ( var_0.objects_array_sequence["quest_3"].size != 2 )
        {
            foreach ( var_2 in var_0.quest_three_objects )
            {
                if ( isdefined( var_2._id_01F1 ) )
                {
                    var_2._id_01F1.health = 5;
                    var_2._id_01F1._id_4CE9 = 0;
                    var_2._id_01F1.maxhealth = 5;
                }

                var_0.quest_active_q3 = 0;
                _id_0A59::_id_175D( var_2, var_0 );
                var_0 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_0 );
            }

            foreach ( var_5 in level.players )
                var_5.attacked_first_object_q3 = 0;

            level.clock_interaction_q3.clock_owner = undefined;
            var_0.objects_array_sequence["quest_3"] = [];
            var_0 setscriptablepartstate( "clockFx", "inactive" );
            var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
            level.clock_interaction_q3.clock_active = 0;

            if ( isdefined( var_0.rewindmover ) )
                var_0 thread reset_rewind_mover( 3 );

            var_0.quest_num = undefined;
            var_0 notify( "objects_reset_q3" );
        }
    }
}

watch_for_damage_on_struct_q3( var_0 )
{
    var_0 endon( "part_three_complete" );
    var_0 endon( "objects_reset_q3" );
    var_0 endon( "delete_previous_thread" );
    thread reset_on_failure_q3( var_0 );

    for (;;)
    {
        self._id_01F1 waittill( "damage", var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10 );

        if ( !isplayer( var_2 ) && !isagent( var_2 ) )
            continue;

        if ( isdefined( level.clock_interaction_q3.clock_owner ) && level.clock_interaction_q3.clock_owner != var_2 )
            continue;

        if ( isdefined( var_5 ) && var_5 != "MOD_MELEE" )
            continue;

        if ( self.object_num == 2 && var_2.objects_array_sequence["quest_3"].size == 0 )
            continue;
        else if ( !scripts\engine\utility::_id_9CEE( var_2.attacked_first_object_q3 ) && self.object_num == 1 && var_2.objects_array_sequence["part3"].size == 0 )
        {
            var_2.objects_array_sequence["quest_3"][self.object_num - 1] = self;
            self._id_01F1._id_4CE9 = self._id_01F1._id_4CE9 + var_1;
            var_2.attacked_first_object_q3 = 1;
            _id_0A59::_id_E01A( self, var_2 );
            var_2 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_2 );
            var_2 playlocalsound( "part_pickup" );
        }

        if ( self.object_num == 2 && scripts\engine\utility::_id_9CEE( var_2.attacked_first_object_q3 ) )
        {
            var_2.objects_array_sequence["quest_3"][self.object_num - 1] = self;
            self._id_01F1._id_4CE9 = self._id_01F1._id_4CE9 + var_1;
            var_2.attacked_first_object_q3 = 1;
            _id_0A59::_id_E01A( self, var_2 );
            var_2 thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( var_2 );
            var_2 playlocalsound( "part_pickup" );
        }

        if ( var_2.objects_array_sequence["quest_3"].size == 2 )
        {
            foreach ( var_12 in var_2.objects_array_sequence["quest_3"] )
                var_12 playfx_and_shatter( var_2 );

            var_2 playlocalsound( "zmb_ui_earn_tickets" );
            var_2 notify( "part_three_complete" );
        }
    }
}

disco_wait_for_interaction_triggered( var_0 )
{
    self notify( "interaction_logic_started" );
    self endon( "interaction_logic_started" );
    self endon( "stop_interaction_logic" );
    self endon( "disconnect" );

    for (;;)
    {
        self._id_9A3F waittill( "trigger", var_1 );

        if ( var_1 _meth_84D9() )
            continue;

        if ( !_id_0A59::_id_9A27( var_0, var_1 ) )
        {
            wait 0.1;
            continue;
        }

        var_0._id_127BA = 1;
        var_0 thread _id_0A59::_id_50FA();
        var_2 = level._id_9A43[var_0.script_noteworthy]._id_46A2;

        if ( !isdefined( level._id_9A43[var_0.script_noteworthy]._id_109DA ) )
            level._id_9A43[var_0.script_noteworthy]._id_109DA = "null";

        if ( isdefined( level._id_9A43[var_0.script_noteworthy]._id_3865 ) )
        {
            if ( ![[ level._id_9A43[var_0.script_noteworthy]._id_3865 ]]( var_0, var_1 ) )
            {
                wait 0.1;
                continue;
            }
        }
        else if ( var_0.script_noteworthy == "lost_and_found" )
        {
            if ( !scripts\engine\utility::_id_9CEE( self._id_8C46 ) )
            {
                wait 0.1;
                continue;
            }

            if ( isdefined( self._id_B0A2 ) && self._id_B0A2 != var_0 )
            {
                wait 0.1;
                continue;
            }

            if ( _id_0A77::_id_9F02() || scripts\engine\utility::_id_9CEE( level._id_C552 ) )
                var_2 = 0;
        }
        else if ( _id_0A59::_id_9A29( var_0 ) )
        {
            var_3 = var_1 getcurrentweapon();
            level._id_D8C6 = var_1 getcurrentweapon();
            var_4 = _id_0A6B::_id_7D62( var_3 );

            if ( scripts\engine\utility::_id_9CEE( level.placed_alien_fuses ) )
            {
                if ( var_4 == 3 )
                {
                    _id_0A59::_id_9A3C( var_0, &"COOP_INTERACTIONS_UPGRADE_MAXED" );
                    wait 0.1;
                    continue;
                }
                else if ( scripts\cp\maps\cp_disco\cp_disco_weapon_upgrade::_id_385F( var_3, 1 ) )
                {
                    if ( var_4 == 1 )
                        var_2 = 5000;
                    else if ( var_4 == 2 )
                        var_2 = 10000;
                }
                else
                {
                    _id_0A59::_id_9A3C( var_0, &"CP_ZMB_INTERACTIONS_UPGRADE_WEAPON_FAIL" );
                    wait 0.1;
                    continue;
                }
            }
            else if ( scripts\engine\utility::_id_9CEE( level.has_picked_up_fuses ) && !isdefined( level.placed_alien_fuses ) )
                var_2 = 0;
            else if ( var_4 == level._id_C8A4 )
            {
                _id_0A59::_id_9A3C( var_0, &"COOP_INTERACTIONS_UPGRADE_MAXED" );
                wait 0.1;
                continue;
            }
            else if ( scripts\cp\maps\cp_disco\cp_disco_weapon_upgrade::_id_385F( var_3 ) )
            {
                if ( scripts\engine\utility::_id_9CEE( level.has_picked_up_fuses ) && !isdefined( level.placed_alien_fuses ) )
                    var_2 = 0;
                else if ( var_4 == 1 )
                    var_2 = 5000;
                else if ( var_4 == 2 )
                    var_2 = 10000;
            }
            else
            {
                _id_0A59::_id_9A3C( var_0, &"CP_ZMB_INTERACTIONS_UPGRADE_WEAPON_FAIL" );
                wait 0.1;
                continue;
            }
        }
        else if ( _id_0A59::_id_9A28( var_0 ) )
        {
            if ( _id_0A77::_id_9D18() )
            {
                wait 0.1;
                continue;
            }

            var_5 = var_1 getcurrentweapon();
            var_6 = _id_0A77::_id_7DF7( var_5 );
            var_7 = issubstr( var_0.script_noteworthy, "katana" );

            if ( var_7 && ( !scripts\engine\utility::_id_9CEE( var_1.has_disco_soul_key ) && !scripts\engine\utility::_id_6E25( "rk_fight_ended" ) ) )
            {
                wait 0.1;
                continue;
            }

            if ( _id_0A6B::_id_8BBB( var_0.script_noteworthy ) )
            {
                if ( var_7 && !scripts\engine\utility::_id_9CEE( var_1.has_disco_soul_key ) )
                {
                    wait 0.1;
                    continue;
                }

                if ( !_id_0A59::_id_383D( var_0.script_noteworthy ) || var_7 )
                {
                    if ( !var_7 )
                        _id_0A59::_id_9A3C( var_0, &"COOP_GAME_PLAY_AMMO_MAX" );

                    wait 0.1;
                    continue;
                }
                else
                {
                    var_8 = _id_0A77::_id_80D8( var_0.script_noteworthy );
                    var_4 = _id_0A6B::_id_7D62( var_8 );

                    if ( var_4 > 1 )
                        var_2 = 4500;
                    else
                        var_2 = var_2 * 0.5;
                }
            }
            else if ( var_7 && scripts\engine\utility::_id_6E25( "rk_fight_ended" ) )
                var_2 = 0;
        }
        else if ( _id_0A59::_id_9A1D( var_0 ) )
        {
            if ( !var_1 _id_0A59::_id_3867( var_0 ) )
                var_2 = 0;
            else if ( ( _id_0A77::_id_9F02() || level._id_C552 ) && var_0._id_CA4C == "perk_machine_revive" && var_1._id_F1E7 <= var_1.max_self_revive_machine_use )
                var_2 = 500;
            else
                var_2 = _id_0A59::_id_7B78( var_0 );
        }
        else if ( _id_0A59::_id_9A17( var_0 ) )
        {
            if ( !isdefined( var_1._id_4B5E ) && var_0._id_269F > 0 )
            {
                level notify( "interaction", "purchase_denied", level._id_9A43[var_0.script_noteworthy], self );
                wait 0.1;
                continue;
            }
        }
        else if ( _id_0A59::_id_9A1A( var_0 ) )
        {
            if ( !scripts\engine\utility::_id_9CEE( level.unlimited_fnf ) )
            {
                if ( var_1._id_3A52 == 2 )
                {
                    _id_0A59::_id_9A3C( var_0, &"COOP_INTERACTIONS_NO_MORE_CARDS_OWNED" );
                    wait 0.1;
                    continue;
                }
            }

            if ( self._id_3A52 >= 1 )
                var_2 = level._id_732D;
            else
                var_2 = level._id_732C;
        }

        if ( !_id_0A59::_id_383E( var_0, var_2, level._id_9A43[var_0.script_noteworthy]._id_109DA ) )
        {
            level notify( "interaction", "purchase_denied", level._id_9A43[var_0.script_noteworthy], self );

            if ( var_0._id_EE79 == "tickets" )
            {
                _id_0A59::_id_9A3C( var_0, &"CP_ZMB_INTERACTIONS_NEED_TICKETS" );
                thread _id_0A6A::_id_12885( "no_tickets", "zmb_comment_vo", "high", 10, 0, 0, 1, 50 );
            }
            else if ( ( _id_0A77::_id_9F02() || level._id_C552 ) && _id_0A59::_id_9A1D( var_0 ) && var_0._id_CA4C == "perk_machine_revive" && var_1._id_F1E7 >= var_1.max_self_revive_machine_use )
                _id_0A59::_id_9A3C( var_0, &"COOP_INTERACTIONS_CANNOT_BUY_SELF_REVIVE" );
            else
            {
                thread _id_0A6A::_id_12885( "no_cash", "zmb_comment_vo", "high", 10, 0, 0, 1, 50 );
                _id_0A59::_id_9A3C( var_0, &"COOP_INTERACTIONS_NEED_MONEY" );
            }

            wait 0.1;
            continue;
        }

        if ( var_0.script_noteworthy == "atm_withdrawal" )
        {
            if ( isdefined( level._id_2417 ) )
            {
                if ( level._id_2416 < level._id_2417 )
                {
                    _id_0A59::_id_9A3C( var_0, &"COOP_INTERACTIONS_NEED_MONEY" );
                    wait 0.1;
                    continue;
                }
            }
        }

        thread _id_0A59::_id_9A33( var_0 );

        if ( _id_0A59::_id_9A28( var_0 ) )
            level notify( "interaction", var_0.name, undefined, self );
        else
            level notify( "interaction", "purchase", level._id_9A43[var_0.script_noteworthy], self );

        var_9 = level._id_9A43[var_0.script_noteworthy]._id_109DA;
        thread _id_0A59::_id_11449( var_2, var_9 );
        level thread [[ level._id_9A43[var_0.script_noteworthy]._id_161A ]]( var_0, self );

        if ( _id_0A59::_id_9A21( var_0 ) )
            level thread _id_0A59::_id_1048D( var_0.script_noteworthy, self );

        _id_0A59::_id_9A34( var_0 );
        wait 0.1;
        var_0._id_127BA = undefined;
        return;
    }
}

get_closest_interaction_struct( var_0 )
{
    var_1 = undefined;
    var_2 = 0;

    foreach ( var_4 in level._id_4B88 )
    {
        if ( !isdefined( var_4 ) )
            continue;

        var_5 = distancesquared( var_0, var_4.origin );

        if ( !isdefined( var_1 ) || var_5 < var_2 )
        {
            if ( scripts\engine\utility::array_contains( self._id_55BB, var_4 ) )
                continue;

            var_1 = var_4;
            var_2 = var_5;
        }
    }

    return var_1;
}

disco_player_interaction_monitor()
{
    self notify( "player_interaction_monitor" );
    self endon( "player_interaction_monitor" );
    self endon( "disconnect" );
    self endon( "death" );
    var_0 = 5184;
    var_1 = 9216;
    var_2 = 2304;

    for (;;)
    {
        if ( isdefined( level._id_9A45 ) )
        {
            wait 1;
            continue;
        }

        var_4 = undefined;
        level._id_4B88 = scripts\engine\utility::_id_22BC( level._id_4B88 );
        var_5 = get_closest_interaction_struct( self.origin );

        if ( !isdefined( var_5 ) )
        {
            wait 0.1;
            continue;
        }

        if ( scripts\engine\utility::_id_9CEE( self._id_50BC ) )
        {
            wait 0.1;
            continue;
        }

        if ( _id_0A59::_id_9A2B( var_5 ) && distancesquared( var_5.origin, self.origin ) < var_2 )
            var_4 = var_5;

        if ( !isdefined( var_4 ) && !_id_0A59::_id_9A2B( var_5 ) && distancesquared( var_5.origin, self.origin ) <= var_0 )
            var_4 = var_5;

        if ( isdefined( var_4 ) && ( _id_0A59::_id_9A18( var_4 ) || _id_0A59::interaction_is_chi_door( var_4 ) ) && !_id_0A59::_id_9A22( var_4 ) )
            var_4 = undefined;

        if ( !isdefined( var_4 ) && isdefined( level._id_FF11 ) )
        {
            if ( distancesquared( var_5.origin, self.origin ) <= var_1 )
                var_4 = var_5;

            if ( isdefined( var_4 ) && ![[ level._id_FF11 ]]( var_4 ) )
                var_4 = undefined;
        }
        else if ( !isdefined( var_4 ) && isdefined( var_5._id_4C72 ) )
        {
            if ( distance( var_5.origin, self.origin ) <= var_5._id_4C72 )
                var_4 = var_5;
        }

        if ( !isdefined( var_4 ) )
        {
            _id_0A59::_id_E1F6();
            continue;
        }

        if ( !_id_0A59::_id_3863( var_4 ) )
        {
            _id_0A59::_id_E1F6();
            continue;
        }

        if ( _id_0A59::_id_9A2B( var_4 ) )
        {
            var_6 = _id_0A77::_id_78B4( var_4.origin );

            if ( !isdefined( var_6 ) )
            {
                self._id_A8D3 = undefined;
                wait 0.05;
                continue;
            }

            if ( _id_0A77::_id_664F( var_6 ) )
            {
                _id_0A59::_id_E1F6();

                if ( isdefined( self._id_4B5C ) && self._id_4B5C._id_0195 == "crafted_windowtrap" )
                {
                    if ( !isdefined( var_4._id_8BB7 ) )
                        thread _id_0A59::_id_6EB9();
                }

                self._id_A8D3 = var_4;
                continue;
            }
            else
            {
                self notify( "stop_interaction_logic" );
                self._id_A8D3 = undefined;
            }

            if ( isdefined( self._id_4B5C ) && self._id_4B5C._id_0195 == "crafted_windowtrap" )
            {
                if ( !isdefined( var_4._id_8BB7 ) )
                    thread _id_0A59::_id_6EB9();
            }
        }

        if ( _id_0A59::_id_9A1D( var_4 ) && self getstance() == "prone" )
        {
            self._id_A8D3 = undefined;
            wait 0.05;
            continue;
        }

        if ( !isdefined( self._id_A8D3 ) )
            _id_0A59::_id_F421( var_4 );
        else if ( self._id_A8D3 == var_4 && _id_0A59::_id_9A28( var_4 ) && !scripts\engine\utility::_id_9CEE( self._id_50BC ) )
            _id_0A59::_id_F421( var_4, 0 );
        else if ( self._id_A8D3 != var_4 )
            _id_0A59::_id_F421( var_4 );

        wait 0.05;
    }
}

_id_DDF2( var_0 )
{
    self endon( "death" );
    self endon( "disconnect" );
    self endon( "remove_rewind_ability" );
    self endon( "clocks_reset" );
    var_1 = 0;
    var_2 = 0;

    switch ( var_0 )
    {
        case 1:
            var_1 = 7.0;
            var_2 = 2.9166;
            break;
        case 2:
            var_1 = 11.45;
            var_2 = 2.0;
            break;
        case 3:
            var_1 = 8.25;
            var_2 = 3.416;
            break;
        case 4:
            var_1 = 19.0;
            var_2 = 4;
            break;
    }

    var_3 = self.origin;
    var_4 = var_1 / var_2 * 0.05;
    var_5 = var_1 / var_4;

    for (;;)
    {
        wait( var_4 );

        if ( scripts\engine\utility::_id_9CEE( self._id_9F2A ) )
        {
            self waittill( "rewind_power_finished" );
            wait 2;
            self notify( "remove_rewind_ability" );
        }

        if ( distance2dsquared( self.origin, var_3 ) < 484.0 )
            continue;

        var_3 = self.origin;

        if ( self._id_E4D7.size < int( var_5 ) )
        {
            _id_DDF1( self._id_E4D7.size );
            continue;
        }

        _id_41DD( self._id_E4D8 );
        var_6 = self._id_E4D8 + int( var_5 );
        _id_DDF1( var_6 );
        self._id_E4D8++;
    }
}

_id_1397( var_0, var_1, var_2 )
{
    var_3 = 0.05;
    var_4 = float( gettime() ) / 1000.0;
    var_5 = var_4 + var_2;

    if ( var_2 <= 0 )
        return;

    var_0.angles = self.angles_when_using_clock;

    if ( !isdefined( var_0 ) )
        return;

    var_6 = self getplayerangles();
    var_0.angles = self.angles_when_using_clock;
    self _meth_8417( var_0 );
    self setplayerangles( ( 0, 0, 0 ) );
    self _meth_84EF( var_6, 0 );

    while ( var_4 < var_5 )
    {
        var_7 = cos( ( var_5 - var_4 ) / var_2 * 90 );
        var_0.angles = _func_2EC( var_6, var_1, var_7 );
        wait( var_3 );
        var_4 = float( gettime() ) / 1000.0;
    }

    var_0.angles = var_1;
    var_6 = self getplayerangles();
    self _meth_8417( undefined );
    self setplayerangles( ( 0, 0, 0 ) );
    self _meth_84EF( var_6, 0 );
}

_id_E897( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "backstory_quest_complete" );
    self endon( "part_1_VO_done" );
    self endon( "part_2_VO_done" );
    self endon( "part_3_VO_done" );
    self endon( "part_two_complete" );
    self endon( "part_three_complete" );
    self endon( "last_stand" );
    self endon( "death" );
    self endon( "rat_king_fight_started" );
    var_1 = 0;
    var_2 = 0;
    var_3 = 0;
    var_4 = "quest_rewind_sound_long";

    switch ( var_0 )
    {
        case 1:
            var_1 = 7.0;
            var_2 = 7.0;
            var_3 = 2.9166;
            var_4 = "quest_rewind_sound_short";
            break;
        case 2:
            var_1 = 11.45;
            var_2 = 11.45;
            var_3 = 2.0;
            var_4 = "quest_rewind_sound_med";
            break;
        case 3:
            var_1 = 8.25;
            var_2 = 8.25;
            var_3 = 3.416;
            var_4 = "quest_rewind_sound_med";
            break;
        case 4:
            var_1 = 19.0;
            var_2 = 19.0;
            var_3 = 4;
            var_4 = "quest_rewind_sound_long";
            break;
    }

    wait( var_1 - 0.2 );
    self playlocalsound( var_4 );
    wait 0.2;
    self.quest_num = var_0;

    if ( self._id_E4D7.size <= 0 )
        return;

    self notify( "rewind_activated" );
    self setscriptablepartstate( "scripted_rewind", "active" );
    self.angles_when_using_clock = self getplayerangles();
    scripts\engine\utility::waitframe();
    self _meth_805B();
    self _meth_83AB();
    self setscriptablepartstate( "screen_effects", "kung_fu_punch" );
    self._id_9F2A = 1;
    self _meth_84D8( 1 );
    var_5 = ( 0, 0, 0 );

    if ( isdefined( level.clock[int( var_0 ) - 1] ) && var_0 != 4 )
        var_5 = level.clock[int( var_0 ) - 1].origin;
    else if ( var_0 == 4 )
        var_5 = self._id_E4D7[self._id_E4D8];

    var_6 = self._id_E4C8[self._id_E4D8];
    var_7 = self._id_E4DA[self._id_E4D8];
    _id_0A77::_id_17C0( "rewind_invulnerability", 0.0, 0 );
    self.rewindmover = spawn( "script_model", self geteye() );
    self.rewindmover setmodel( "tag_origin" );
    self.rewindmover.angles = self getplayerangles();
    self.rewindmover _meth_8429( self );
    self.rewindmover notsolid();
    self _meth_823A( self.rewindmover, "tag_origin", 0.0, 10, 10, 10, 10, 0 );
    self playerhide();
    scripts\engine\utility::_id_1C53( 0 );
    scripts\engine\utility::_id_1C71( 0 );
    scripts\engine\utility::_id_1C76( 0 );
    scripts\engine\utility::_id_1C6E( 0 );
    _id_0A77::_id_1C5E( 0 );
    scripts\engine\utility::_id_1C4E( 0 );
    self _meth_8010( 0 );
    self _meth_855A( 1 );
    self._id_6F73 = 1;
    scripts\engine\utility::waitframe();
    self _meth_84D3( "power_active", "rewind" );
    var_8 = var_2 / var_3 * 0.05;
    var_9 = var_2 / var_8;
    var_10 = var_3 / var_9;
    self _meth_81DF( var_3, var_10, 0, 0, 0, 0, 0 );
    thread play_fx_rewind( var_3 );

    for ( var_11 = self._id_E4D7.size - 1; var_11 >= 0; var_11-- )
    {
        var_12 = self._id_E4D7[var_11];
        var_13 = var_11 + self._id_E4D8;
        var_14 = self._id_E4D7[var_13];
        var_15 = self._id_E4C8[var_13];
        _id_0D44::_id_1794();
        thread _id_0D44::_id_E0AE( var_10 );

        if ( !isdefined( var_14 ) )
            var_14 = self._id_E4D7[self._id_E4D7.size - 1];

        if ( isdefined( var_12 ) )
            self.rewindmover.origin = vectorlerp( var_12, var_14, 0.05 );
        else
            self.rewindmover.origin = var_14;

        wait( var_10 );
    }

    thread scripts\cp\maps\cp_disco\cp_disco::update_special_mode_for_player( self );
    _id_4485( self.rewindmover, var_5, var_6, var_7, var_0 );
}

play_fx_rewind( var_0 )
{
    self shellshock( "default_nosound", var_0 );
}

return_player_to_clock( var_0, var_1 )
{
    while ( isdefined( var_0.rewindmover ) )
        wait 0.1;

    var_2 = 2;

    switch ( var_1 )
    {
        case 1:
            var_3 = 7.0;
            var_4 = 7.0;
            var_2 = 2.9166;
            break;
        case 2:
            var_3 = 11.45;
            var_4 = 11.45;
            var_2 = 2.0;
            break;
        case 3:
            var_3 = 8.25;
            var_4 = 8.25;
            var_2 = 3.416;
            break;
        case 4:
            var_3 = 19.0;
            var_4 = 19.0;
            var_2 = 4;
            break;
    }

    var_0 _id_0D44::_id_1794();
    var_5 = level.clock[var_1 - 1].origin;
    var_6 = level.clock[var_1 - 1].angles;
    var_7 = ( 0, 0, 0 );
    var_0 thread _id_0D44::_id_E0AE( 0.05 );
    var_0 thread play_fx_rewind( var_2 );

    if ( isdefined( var_0.rewindmover ) )
        var_0 _id_4485( var_0.rewindmover, var_5, var_6, var_7, var_1 );
    else
    {
        var_8 = vectorlerp( var_0.origin, var_5, 0.05 );
        var_9 = getclosestpointonnavmesh( var_5 );
        var_0 setorigin( var_9, 0 );
        var_0 _meth_8366( var_7 );
        var_0 setstance( "stand" );
        var_0 setscriptablepartstate( "scripted_rewind", "inactive" );
    }
}

_id_DDF1( var_0 )
{
    self._id_E4D7[var_0] = self.origin;
    self._id_E4C8[var_0] = self getplayerangles();
    self._id_E4DA[var_0] = self _meth_816B();
}

_id_41DD( var_0 )
{
    self._id_E4D7[var_0] = undefined;
    self._id_E4C8[var_0] = undefined;
    self._id_E4DA[var_0] = undefined;
}

_id_E266()
{
    self._id_E4D7 = [];
    self._id_E4C8 = [];
    self._id_E4DA = [];
    self._id_E4D8 = 0;
}

_id_4485( var_0, var_1, var_2, var_3, var_4 )
{
    var_5 = vectorlerp( var_0.origin, var_1, 0.05 );
    self setorigin( var_5, 0 );
    self _meth_8366( var_3 );
    self setstance( "stand" );
    scripts\engine\utility::waitframe();
    var_0 solid();

    if ( !scripts\engine\utility::_id_A009() )
        scripts\engine\utility::_id_1C76( 1 );

    if ( !scripts\engine\utility::_id_9FBE() )
        scripts\engine\utility::_id_1C6E( 1 );

    if ( !_id_0A77::_id_9FA2() )
        _id_0A77::_id_1C5E( 1 );

    _id_0A77::_id_E0E6( "rewind_invulnerability", 0 );
    self _meth_84D3( "power_exit", "rewind" );
    self _meth_8447();
    self _meth_84D8( 0 );
    scripts\engine\utility::_id_1C53( 1 );
    scripts\engine\utility::_id_1C71( 1 );
    scripts\engine\utility::_id_1C4E( 1 );
    self _meth_8010( 1 );
    self _meth_855A( 0 );
    self unlink();
    self._id_6F73 = undefined;
    self.rewindmover delete();
    self setscriptablepartstate( "scripted_rewind", "inactive" );
    self notify( "rewind_power_finished" );

    if ( isdefined( self.clocks_destroyed ) )
        self.clocks_destroyed = 0;

    self._id_9F2A = 0;
    self.quest_num = undefined;
}

_id_E2EB()
{
    if ( scripts\engine\utility::_id_9CEE( self._id_E4D9 ) )
        return;

    self._id_E4D9 = 1;
    scripts\engine\utility::_id_1C76( 0 );
    scripts\engine\utility::_id_1C6E( 0 );
    _id_0A77::_id_1C5E( 0 );
    thread _id_E2EC();
}

_id_E2DC()
{
    if ( !scripts\engine\utility::_id_9CEE( self._id_E4D9 ) )
        return;

    self._id_E4D9 = undefined;

    if ( !scripts\engine\utility::_id_A009() )
        scripts\engine\utility::_id_1C76( 1 );

    if ( !scripts\engine\utility::_id_9FBE() )
        scripts\engine\utility::_id_1C6E( 1 );

    if ( !_id_0A77::_id_9FA2() )
        _id_0A77::_id_1C5E( 1 );
}

_id_E2EC()
{
    self endon( "disconnect" );
    self endon( "rewindUnset" );
    self notify( "rewindRestrictFunctionalityCleanup" );
    self endon( "rewindRestrictFunctionalityCleanup" );
    self waittill( "death" );
    self._id_E4D9 = undefined;
}

rotate_fans()
{
    level endon( "stop_waterfall_trap" );
    level.center_sewer_fan _meth_8271( 7200, 28, 2, 5 );

    foreach ( var_1 in level.sewer_fans )
        var_1 _meth_8271( 14400, 28, randomintrange( 1, 4 ), 5 );
}

rotate_center_fan()
{
    for (;;)
    {
        if ( isdefined( level.fan_trap_active ) )
        {
            wait 0.1;
            continue;
        }
        else
            level.center_sewer_fan _meth_8271( 15, 1 );

        wait 1;
    }
}

init_fan_trap()
{
    level.sewer_fans = getentarray( "sewer_fans", "targetname" );
    level.center_sewer_fan = getent( "center_fan", "targetname" );
    level.sewer_fan_interactions = scripts\engine\utility::_id_8180( "fan_trap", "script_noteworthy" );
    level.sewer_fan_switches = getentarray( level.sewer_fan_interactions[0]._id_0334, "targetname" );
    level.lower_sewer_phys_vol = getent( "lower_sewer_phys_vol", "targetname" );
    level.upper_sewer_phys_vol = getent( "upper_sewer_phys_vol", "targetname" );
    level.lower_sewer_phys_point = scripts\engine\utility::_id_817E( level.lower_sewer_phys_vol._id_0334, "targetname" );
    level.sewer_fan_trig = spawn( "trigger_radius", ( -882.5, 1846, 151.5 ), 0, 585, 96 );

    foreach ( var_1 in level.sewer_fan_interactions )
        var_1 thread sewer_fan_power_handler();

    level thread rotate_center_fan();
}

sewer_fan_power_handler()
{
    level scripts\engine\utility::waittill_any( "power_on", self._id_D71C + " power_on" );
    self._id_D776 = 1;

    foreach ( var_1 in level.sewer_fan_switches )
        var_1 setmodel( "mp_frag_button_on_green" );
}

init_electric_trap()
{
    scripts\engine\utility::_id_6E39( "rooftop_walkway_open" );
    var_0 = scripts\engine\utility::_id_8180( "electric_trap", "script_noteworthy" );

    foreach ( var_2 in var_0 )
        _id_0A59::_id_E019( var_2 );

    wait 10;

    for (;;)
    {
        if ( scripts\engine\utility::_id_9CEE( level._id_10816["punk_street"]._id_0019 ) && scripts\engine\utility::_id_9CEE( level._id_10816["rooftops_1"]._id_0019 ) )
            break;

        wait 1;
    }

    scripts\engine\utility::_id_6E3E( "rooftop_walkway_open" );

    foreach ( var_2 in var_0 )
        _id_0A59::_id_175C( var_2 );
}

_id_12FE5( var_0, var_1 )
{
    level thread electric_trap_fx();
    var_1 thread _id_0A6A::_id_12885( "activate_trap_generic", "zmb_comment_vo", "low", 10, 0, 1, 0, 40 );
    level thread _id_0A59::_id_9A0D( var_0, 115 );
    level thread _id_6015( var_0, var_1 );
    wait 25;
    level notify( "stop_electric_trap" );
}

electric_trap_fx()
{
    scripts\engine\utility::_id_69A3( 120 );
    playloopsound( ( -380, 532, 961 ), "disco_gen_electric_trap_power_up" );
    wait 1.3;
    var_0 = scripts\engine\utility::_id_CD86( "disco_gen_electric_trap_lp", ( -380, 532, 961 ) );
    wait 0.05;
    var_1 = scripts\engine\utility::_id_CD86( "disco_trap_electric_on_lp", ( -485, 463, 962 ) );
    level waittill( "stop_electric_trap" );
    playloopsound( ( -380, 532, 961 ), "disco_gen_electric_trap_power_down" );
    wait 0.25;
    var_0 stoploopsound();
    var_1 stoploopsound();
    var_0 delete();
    var_1 delete();
}

_id_6015( var_0, var_1 )
{
    level endon( "stop_electric_trap" );
    var_2 = gettime();
    var_3 = getent( var_0._id_0334, "targetname" );

    for (;;)
    {
        var_3 waittill( "trigger", var_4 );

        if ( isplayer( var_4 ) && isalive( var_4 ) && !_id_0A5B::_id_D0EF( var_4 ) && !isdefined( var_4._id_C85F ) )
        {
            playloopsound( var_4.origin, "trap_electric_shock" );
            playfxontagforclients( level._effect["electric_shock_plyr"], var_4, "tag_eye", var_4 );
            var_4._id_C85F = 1;
            var_4 _meth_80B0( 20, var_4.origin );
            var_4 thread _id_E069();
            continue;
        }

        if ( scripts\engine\utility::_id_9CEE( var_4._id_9CEF ) || !_id_0A77::_id_FF18( var_4, 0, 1 ) )
            continue;

        if ( var_4.agent_type == "ratking" )
            continue;

        if ( gettime() > var_2 + 1000 )
        {
            playloopsound( var_4.origin, "trap_electric_shock" );
            var_2 = gettime();
        }

        level thread _id_601A( var_4, var_1 );
        var_5 = [ "kill_trap_generic", "trap_kill_elecfence" ];
        var_1 thread _id_0A6A::_id_12885( scripts\engine\utility::_id_DC6B( var_5 ), "zmb_comment_vo", "highest", 10, 0, 0, 1, 25 );
    }
}

_id_601A( var_0, var_1 )
{
    var_0 endon( "death" );
    wait( randomfloat( 2 ) );
    var_0.dontmutilate = 1;
    var_0.electrocuted = 1;
    var_0 setscriptablepartstate( "electrocuted", "on" );

    if ( var_1 _id_0A77::_id_9D05( 1 ) )
        var_2 = var_1;
    else
        var_2 = undefined;

    var_0 _meth_80B0( var_0.health + 100, var_0.origin, var_2, var_2, "MOD_UNKNOWN", "iw7_electrictrap_zm" );
}

_id_E069()
{
    self endon( "disconnect" );
    wait 0.5;
    self._id_C85F = undefined;
}

use_fan_trap( var_0, var_1 )
{
    if ( !scripts\engine\utility::_id_9CEE( var_0._id_D776 ) )
        return;

    _id_0A59::_id_554F( var_0 );
    level thread fan_trap_sfx();

    foreach ( var_3 in level.sewer_fan_switches )
        var_3 setmodel( "mp_frag_button_on" );

    var_0._id_126A4 = 0;
    var_1 thread _id_0A6A::_id_12885( "activate_trap_generic", "zmb_comment_vo", "low", 10, 0, 1, 0, 40 );
    var_5 = gettime() + 2000;
    playrumbleonentity( "light_3s", level.center_sewer_fan.origin + ( 0, 0, 50 ) );

    while ( gettime() < var_5 )
    {
        earthquake( 0.2, 2, var_0.origin + ( 0, 0, 100 ), 500 );
        wait 0.5;
        playrumbleonentity( "light_3s", level.center_sewer_fan.origin + ( 0, 0, -50 ) );
        wait 0.5;
    }

    level thread rotate_fans();
    level.fan_trap_active = 1;
    scripts\engine\utility::_id_69A3( 49 );
    level.upper_sewer_phys_vol _meth_852B( 1, anglestoforward( ( -90, 0, 0 ) ), 5000 );
    level.upper_sewer_phys_vol _meth_8529( 1 );
    level.upper_sewer_phys_vol _meth_8526( 1 );
    level.lower_sewer_phys_vol _meth_852C( 1, level.lower_sewer_phys_point.origin, 2500 );
    level.lower_sewer_phys_vol _meth_8529( 1 );
    level.lower_sewer_phys_vol _meth_8526( 1 );
    level thread _id_A631( var_0, var_1 );
    var_5 = gettime() + 25000;

    while ( gettime() < var_5 )
    {
        playrumbleonentity( "heavy_3s", level.center_sewer_fan.origin + ( 0, 0, 50 ) );
        earthquake( 0.2, 3, level.center_sewer_fan.origin + ( 0, 0, -100 ), 500 );
        wait 1;
    }

    level notify( "stop_waterfall_trap" );
    level.fan_trap_active = undefined;
    level.upper_sewer_phys_vol _meth_8529( 0 );
    level.upper_sewer_phys_vol _meth_8526( 0 );
    level.lower_sewer_phys_vol _meth_8529( 0 );
    level.lower_sewer_phys_vol _meth_8526( 0 );
    _id_0A59::_id_6214( var_0 );
    _id_0A59::_id_9A0D( var_0, 300 );

    foreach ( var_3 in level.sewer_fan_switches )
        var_3 setmodel( "mp_frag_button_on_green" );
}

fan_trap_sfx()
{
    playloopsound( ( -920, 1832, 450 ), "giant_fan_startup_lr" );
    var_0 = scripts\engine\utility::_id_CD86( "giant_fan_grate_impacts_lp", ( -920, 1832, 450 ) );
    wait 0.85;
    var_1 = scripts\engine\utility::_id_CD86( "giant_fan_lp_lr", ( -920, 1832, 450 ) );
    var_2 = scripts\engine\utility::_id_CD86( "giant_fan_wind_paper_01", ( -1295, 1662, 234 ) );
    var_3 = scripts\engine\utility::_id_CD86( "giant_fan_wind_paper_02", ( -438, 1644, 234 ) );
    var_4 = scripts\engine\utility::_id_CD86( "giant_fan_wind_paper_03", ( -879, 2349, 234 ) );
    level waittill( "stop_waterfall_trap" );
    playloopsound( ( -920, 1832, 450 ), "giant_fan_stop_lr" );
    var_0 stoploopsound();
    var_0 delete();
    wait 0.1;
    var_1 stoploopsound();
    var_1 delete();
    wait 0.15;
    var_2 stoploopsound();
    var_2 delete();
    wait 0.2;
    var_3 stoploopsound();
    var_3 delete();
    wait 0.13;
    var_4 stoploopsound();
    var_4 delete();
}

waterfall_trap_sfx()
{
    wait 0.65;
    playloopsound( ( -1714, -2031, 248 ), "trap_waterfall_start" );
    var_0 = scripts\engine\utility::_id_CD86( "trap_waterfall_rushing_lp", ( -1717, -2013, 189 ) );
    wait 4.0;
    var_1 = scripts\engine\utility::_id_CD86( "trap_waterfall_splashing_lp", ( -1702, -1824, 101 ) );
    level waittill( "stop_waterfall_trap" );
    playloopsound( ( -1714, -2031, 248 ), "trap_waterfall_end" );
    wait 0.2;
    var_0 stoploopsound();
    var_0 delete();
    var_1 stoploopsound();
    var_1 delete();
}

_id_A631( var_0, var_1 )
{
    level endon( "stop_waterfall_trap" );

    for (;;)
    {
        level.sewer_fan_trig waittill( "trigger", var_2 );

        if ( !_id_0A77::_id_FF18( var_2, undefined, 1 ) )
            continue;

        var_0._id_126A4++;
        var_3 = [ "kill_trap_generic", "trap_kill_fanblade" ];
        var_1 thread _id_0A6A::_id_12885( scripts\engine\utility::_id_DC6B( var_3 ), "zmb_comment_vo", "high", 10, 0, 0, 1, 25 );
        var_2 thread _id_6F32( var_0, var_1 );
    }
}

_id_6F32( var_0, var_1 )
{
    self endon( "death" );
    self._id_6F73 = 1;
    self._id_B36E = 1;
    self._id_5793 = 1;
    self._id_4C87 = 1;
    self._id_5502 = 1;
    wait( randomfloatrange( 0.5, 1.5 ) );

    if ( var_1 _id_0A77::_id_9D05() )
        var_2 = var_1;
    else
        var_2 = undefined;

    self.dontmutilate = 1;
    self _meth_80B0( self.health + 100, level.sewer_fan_trig.origin, var_2, var_2, "MOD_UNKNOWN", "iw7_fantrap_zm" );
}

delay_remove_from_interactions( var_0 )
{
    var_0 notify( "delay_interaction_array" );
    var_0 endon( "delay_interaction_array" );
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );
    _id_0A59::_id_E019( var_0 );
}

delay_add_to_interactions( var_0 )
{
    var_0 notify( "delay_interaction_array" );
    var_0 endon( "delay_interaction_array" );
    scripts\engine\utility::_id_6E4C( "interactions_initialized" );
    _id_0A59::_id_E019( var_0 );
}
