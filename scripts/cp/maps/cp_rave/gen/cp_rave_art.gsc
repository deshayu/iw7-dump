// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    level._id_12ACA = 1;
    thread light_control_flags_init();
    thread strobelight_init();
    thread fire_light_flicker_init();
    thread light_fixture_flicker_init();
}

light_control_flags_init()
{
    scripts\engine\utility::_id_6E39( "light_fixture_on" );
    scripts\engine\utility::_id_6E39( "light_fixture_off" );
    scripts\engine\utility::_id_6E39( "strobe_red" );
    scripts\engine\utility::_id_6E39( "strobe_green" );
    scripts\engine\utility::_id_6E39( "strobe_blue" );
}

strobelight_init()
{
    var_0 = getentarray( "strobelight_r", "targetname" );
    var_1 = getentarray( "strobelight_g", "targetname" );
    var_2 = getentarray( "strobelight_b", "targetname" );
    thread strobe_light_rand_generator();
    scripts\engine\utility::_id_22D2( var_0, ::strobelight_setup );
    scripts\engine\utility::_id_22D2( var_1, ::strobelight_setup );
    scripts\engine\utility::_id_22D2( var_2, ::strobelight_setup );
}

strobelight_setup()
{
    var_0 = _id_C901();
    self.light_targetname = self._id_0336;
    self.light_position_show = self.origin;
    self.light_position_hide = self.origin - ( 0, 0, 1024 );

    for (;;)
    {
        if ( self.light_targetname == "strobelight_r" && scripts\engine\utility::_id_6E25( "strobe_red" ) )
            self.origin = self.light_position_show;

        if ( self.light_targetname == "strobelight_r" && !scripts\engine\utility::_id_6E25( "strobe_red" ) )
            self.origin = self.light_position_hide;

        if ( self.light_targetname == "strobelight_g" && scripts\engine\utility::_id_6E25( "strobe_green" ) )
            self.origin = self.light_position_show;

        if ( self.light_targetname == "strobelight_g" && !scripts\engine\utility::_id_6E25( "strobe_green" ) )
            self.origin = self.light_position_hide;

        if ( self.light_targetname == "strobelight_b" && scripts\engine\utility::_id_6E25( "strobe_blue" ) )
            self.origin = self.light_position_show;

        if ( self.light_targetname == "strobelight_b" && !scripts\engine\utility::_id_6E25( "strobe_blue" ) )
            self.origin = self.light_position_hide;

        scripts\engine\utility::waitframe();
    }
}

strobe_light_rand_generator()
{
    for (;;)
    {
        var_0 = randomintrange( 0, 150 );

        if ( var_0 >= 50 && var_0 <= 100 )
        {
            scripts\engine\utility::_id_6E3E( "strobe_red" );
            scripts\engine\utility::_id_6E2A( "strobe_green" );
            scripts\engine\utility::_id_6E2A( "strobe_blue" );
        }
        else if ( var_0 >= 100 )
        {
            scripts\engine\utility::_id_6E2A( "strobe_red" );
            scripts\engine\utility::_id_6E3E( "strobe_green" );
            scripts\engine\utility::_id_6E2A( "strobe_blue" );
        }
        else
        {
            scripts\engine\utility::_id_6E2A( "strobe_red" );
            scripts\engine\utility::_id_6E2A( "strobe_green" );
            scripts\engine\utility::_id_6E3E( "strobe_blue" );
        }

        wait 0.5;
    }
}

fire_light_flicker_init()
{
    var_0 = getentarray( "fire_light_flicker", "targetname" );
    scripts\engine\utility::_id_22D2( var_0, ::fire_light_flicker_setup );
}

fire_light_flicker_setup()
{
    var_0 = _id_C901();
    self._id_738E = 100;
    self._id_B442 = 750;
    self._id_B749 = 5;

    if ( isdefined( var_0["frequency"] ) )
        self._id_738E = float( var_0["frequency"] );

    if ( isdefined( var_0["max_intensity"] ) )
        self._id_B442 = float( var_0["max_intensity"] );

    if ( isdefined( var_0["min_intensity"] ) )
        self._id_B749 = float( var_0["min_intensity"] );

    thread fire_light_flicker();
}

fire_light_flicker()
{
    for (;;)
    {
        var_0 = randomfloatrange( self._id_B749, self._id_B442 );
        self setlightintensity( var_0 );
        wait( 1 / self._id_738E );
    }
}

light_fixture_flicker_init()
{
    thread light_fixture_flicker_rand_generator();
    thread light_fixture_flicker_setup();
}

light_fixture_flicker_setup()
{
    var_0 = _id_C901();
    var_1 = getentarray( "light_fixture_flicker", "targetname" );
    var_2 = getentarray( "light_fixture_flicker_off", "targetname" );
    var_3 = getentarray( "light_fixture_flicker_on", "targetname" );
    var_4 = 150;
    var_5 = 5;

    for (;;)
    {
        if ( scripts\engine\utility::_id_6E25( "light_fixture_on" ) )
        {
            foreach ( var_7 in var_3 )
                var_7 show();

            foreach ( var_10 in var_2 )
                var_10 hide();

            foreach ( var_13 in var_1 )
                var_13 setlightintensity( var_4 );
        }
        else if ( scripts\engine\utility::_id_6E25( "light_fixture_off" ) )
        {
            foreach ( var_7 in var_3 )
                var_7 hide();

            foreach ( var_10 in var_2 )
                var_10 show();

            foreach ( var_13 in var_1 )
                var_13 setlightintensity( var_5 );
        }

        scripts\engine\utility::waitframe();
    }
}

light_fixture_flicker_rand_generator()
{
    for (;;)
    {
        var_0 = randomintrange( 0, 500 );

        if ( var_0 >= 250 )
        {
            scripts\engine\utility::_id_6E2A( "light_fixture_off" );
            scripts\engine\utility::_id_6E3E( "light_fixture_on" );
        }
        else
        {
            scripts\engine\utility::_id_6E2A( "light_fixture_on" );
            scripts\engine\utility::_id_6E3E( "light_fixture_off" );
        }

        scripts\engine\utility::waitframe();
    }
}

_id_C901()
{
    var_0 = [];

    if ( isdefined( self.script_noteworthy ) )
    {
        var_1 = strtok( self.script_noteworthy, " " );

        foreach ( var_3 in var_1 )
        {
            var_4 = strtok( var_3, ":" );
            var_0[var_4[0]] = var_4[1];
        }
    }

    return var_0;
}
