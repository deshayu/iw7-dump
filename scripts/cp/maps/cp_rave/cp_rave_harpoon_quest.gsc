// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

harpoon_quest_init()
{
    scripts\engine\utility::_id_6E39( "harpoon_unlocked" );
    scripts\engine\utility::_id_6E39( "chains_unlocked" );
    level._effect["deer_head_explosion"] = loadfx( "vfx/iw7/core/expl/weap/chargeshot/vfx_expl_chargeshot.vfx" );
    level._effect["harpoon_symbol_1"] = loadfx( "vfx/iw7/levels/cp_rave/vfx_rave_harpoon_symbol_1_facing.vfx" );
    level._effect["harpoon_symbol_2"] = loadfx( "vfx/iw7/levels/cp_rave/vfx_rave_harpoon_symbol_2_facing.vfx" );
    level._effect["harpoon_symbol_3"] = loadfx( "vfx/iw7/levels/cp_rave/vfx_rave_harpoon_symbol_3_facing.vfx" );
    level._effect["chain_dissolve"] = loadfx( "vfx/iw7/levels/cp_rave/vfx_rave_chain_dissolve.vfx" );
    level.harpoon_locks = 0;
    level thread break_the_chains();
    level thread collect_bait();
    level thread init_bait_heads();
}

collect_bait()
{
    var_0 = scripts\engine\utility::_id_817E( "bait_loc", "targetname" );
    var_1 = spawn( "script_model", var_0.origin );
    var_1 setmodel( "tag_origin" );
    var_1 makeusable();
    var_1 sethintstring( &"CP_RAVE_PICK_UP_BAIT" );
    level.bait_model = getent( "bait_pickup", "targetname" );

    for (;;)
    {
        var_1 waittill( "trigger", var_2 );
        var_2.has_bait = 1;
        var_2 thread _id_0A77::_id_1308C( var_2, "iw7_pickup_zm" );
        var_2 thread _id_0D15::_id_8397( "power_bait", "secondary", undefined, undefined, undefined, 1, 1 );
        wait 0.1;
        level.bait_model _meth_8429( var_2 );
    }
}

init_bait_heads()
{
    var_0 = getentarray( "bait_head", "targetname" );

    foreach ( var_2 in var_0 )
        var_2 thread wait_to_be_fed();
}

wait_to_be_fed()
{
    thread play_signal_if_bait_nearby();
    thread fly_off_the_handle();
}

turn_on_fx( var_0 )
{
    wait( var_0 );
    self setscriptablepartstate( "symbol", "on" );
}

play_signal_if_bait_nearby()
{
    self endon( "stop_attacking_player" );
    var_0 = 160000;

    while ( !isdefined( level.players ) )
        wait 0.1;

    while ( level.players.size < 1 )
        wait 0.1;

    for (;;)
    {
        var_1 = 0;

        foreach ( var_3 in level.players )
        {
            if ( var_3 _id_0D15::_id_8C17( "power_bait" ) )
            {
                if ( distancesquared( var_3.origin, self.origin ) < var_0 )
                {
                    self setscriptablepartstate( "bait", "active" );
                    var_1 = 1;
                    break;
                }
            }
        }

        if ( !var_1 )
            self setscriptablepartstate( "bait", "inactive" );

        wait 1;
    }
}

fly_off_the_handle()
{
    wait 5;
    thread listen_for_damage();
    head_logic();
    self setscriptablepartstate( "head", "explode" );
    wait 0.1;
    self setmodel( "tag_origin" );
    playfxontag( level._effect["harpoon_symbol_1"], self, "tag_origin" );
    var_0 = scripts\engine\utility::_id_8180( "bait_head_end_spot", "targetname" );
    var_1 = scripts\engine\utility::_id_7E2E( self.origin, var_0, 500 );
    self moveto( var_1.origin, 2 );
    self waittill( "movedone" );
    self makeusable();
    self rotateby( ( 100000, 100000, 0 ), 10000 );
    self waittill( "trigger", var_2 );
    var_2.symbol_picked_up = 1;
    level.harpoon_locks++;
    var_2 playsound( "part_pickup" );

    switch ( level.harpoon_locks )
    {
        case 1:
            level _id_0A77::_id_F55F( 1 );
            remove_rave_lock();
            break;
        case 2:
            level _id_0A77::_id_F55F( 3 );
            remove_rave_lock();
            break;
        case 3:
            level _id_0A77::_id_F55F( 4 );
            remove_rave_lock();
            break;
    }

    wait_for_key_pickup();
    self delete();
}

remove_rave_lock()
{
    foreach ( var_1 in level.lock_spots )
    {
        if ( isdefined( var_1 ) )
        {
            var_1 delete();
            break;
        }
    }
}

_id_0125( var_0 )
{
    for (;;)
    {
        if ( !self._id_8C59 _id_9DD7( var_0, 0.9, ( 0, 90, 0 ) ) )
        {
            if ( self._id_8C59 isenemyrightofme( var_0, ( 0, 115, 0 ) ) )
                self _meth_8271( self.angles[2] + 10, 0.15, 0.05, 0.05 );
            else
                self _meth_8271( self.angles[2] - 10, 0.15, 0.05, 0.05 );
        }
        else
            break;

        wait 0.15;
    }
}

_id_9DD7( var_0, var_1, var_2 )
{
    var_3 = vectornormalize( ( var_0.origin - self.origin ) * ( 1, 1, 0 ) );
    var_4 = anglestoright( self.angles + var_2 );
    var_5 = vectordot( var_3, var_4 );
    return var_5 > var_1;
}

isenemyrightofme( var_0, var_1 )
{
    var_2 = vectornormalize( ( var_0.origin - self.origin ) * ( 1, 1, 0 ) );
    var_3 = anglestoforward( self.angles + var_1 );
    var_4 = vectordot( var_2, var_3 );
    return var_4 > 0;
}

listen_for_bait_throw()
{
    self endon( "disconnect" );

    for (;;)
    {
        self waittill( "grenade_fire", var_0, var_1 );

        if ( isdefined( var_0 ) && isdefined( var_1 ) )
            var_0 thread _id_135DE( var_1, self );
    }
}

_id_135DE( var_0, var_1 )
{
    if ( !isdefined( self._id_13C2E ) || self._id_13C2E != "iw7_bait_zm" )
        return;

    self waittill( "explode", var_2 );
    var_3 = getentarray( "bait_head", "targetname" );
    var_4 = scripts\engine\utility::_id_7E2E( var_2, var_3, 500 );

    if ( isdefined( var_4 ) )
    {
        if ( isdefined( var_4.bait ) )
            var_4.bait delete();

        var_4._id_1E6E.bait = spawn( "script_origin", var_2 );
        var_4._id_1E6E.bait_time = gettime();
    }
}

head_logic()
{
    self endon( "stop_attacking_player" );
    self.wall_spot = self.origin;
    self.wall_angles = self.angles;
    self.move_spots = scripts\engine\utility::_id_8180( "bait_head_move_spot", "targetname" );
    self.bait_spot = undefined;
    self.bait = undefined;
    self.on_wall = 1;

    for (;;)
    {
        self setscriptablepartstate( "audio", "off" );
        self waittill( "hit_with_bait" );

        if ( self.on_wall )
        {
            self setscriptablepartstate( "symbol", "on" );
            self setscriptablepartstate( "bait", "inactive" );
            self setscriptablepartstate( "audio", "leaving_wall" );
            self moveto( self.origin + ( 10, 0, 0 ), 0.1 );
            wait 0.1;
            self moveto( self.origin + ( -20, 0, 0 ), 0.1 );
            wait 0.1;
            self moveto( self.origin + ( 10, 0, 10 ), 0.1 );
            wait 0.1;
            self moveto( self.origin + ( -10, 0, -20 ), 0.1 );
            wait 0.1;
            self.on_wall = 0;
            self setscriptablepartstate( "head", "active" );
        }

        var_0 = self.bait.origin;
        var_1 = scripts\engine\utility::_id_7E2E( var_0, self.move_spots, 1000 );
        self.bait_spot = var_1;
        move_along_path();
        move_back_to_wall();
        self.on_wall = 1;
        self setscriptablepartstate( "head", "inactive" );
        self setscriptablepartstate( "audio", "off" );
        wait 0.1;
    }
}

move_to_bait_spot()
{
    self moveto( self.bait_spot.origin, 1, 0.25, 0.25 );
    self waittill( "movedone" );
}

move_along_path()
{
    self setscriptablepartstate( "audio", "flying" );
    self moveto( self.bait_spot.origin, 0.5, 0.1, 0.1 );
    self waittill( "movedone" );

    for ( var_0 = self.bait_spot; isdefined( var_0._id_0334 ); var_0 = var_1 )
    {
        var_1 = scripts\engine\utility::_id_817E( var_0._id_0334, "targetname" );
        self rotateby( ( 0, 720, 0 ), 2, 0.1, 0.1 );
        self moveto( var_1.origin, 2, 0.25, 0.25 );
        self waittill( "movedone" );
    }
}

move_back_to_wall()
{
    self setscriptablepartstate( "audio", "returning_to_wall" );
    self rotateto( self.wall_angles, 0.5 );
    self waittill( "rotatedone" );
    self moveto( self.wall_spot, 1, 0.25, 0.25 );
    self waittill( "movedone" );

    if ( isdefined( self.bait ) )
        self.bait delete();
}

get_move_spot()
{
    var_0 = scripts\engine\utility::_id_8180( "bait_head_move_spot", "targetname" );
    var_1 = [];

    foreach ( var_3 in var_0 )
    {
        if ( !_id_9DD7( var_3, 0.25, ( 0, 45, 0 ) ) )
            continue;

        var_1[var_1.size] = var_3;
    }

    if ( var_1.size > 0 )
        var_5 = scripts\engine\utility::_id_7E2E( self.origin, var_1 );
    else
        var_5 = scripts\engine\utility::_id_7E2E( self.origin, var_0 );

    return var_5.origin;
}

listen_for_damage()
{
    self setcandamage( 1 );

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

        if ( !scripts\engine\utility::_id_9CEE( var_1._id_DCEB ) )
            continue;

        if ( var_9 == "iw7_bait_zm" )
        {
            if ( self.on_wall )
                self notify( "hit_with_bait" );

            wait 0.1;
            continue;
        }

        if ( self.on_wall )
        {
            wait 0.1;
            continue;
        }

        if ( !_id_9DD7( var_1, 0.9, ( 0, 90, 0 ) ) )
            break;
    }

    self notify( "stop_attacking_player" );
}

listen_for_symbol_press()
{

}

wait_for_key_pickup()
{
    if ( level.harpoon_locks > 2 )
        scripts\engine\utility::_id_6E3E( "chains_unlocked" );
}

spawn_chain_locks()
{
    level.lock_spots = [];
    var_0 = scripts\engine\utility::_id_8180( "chain_lock", "targetname" );
    var_1 = 1;

    foreach ( var_3 in var_0 )
    {
        var_4 = spawn( "script_model", var_3.origin );
        wait 0.1;
        var_4.angles = var_3.angles + ( 0, 0, 90 );
        wait 0.1;
        var_4 setmodel( "tag_origin_harpoon_quest_symbol_" + var_1 );
        level.lock_spots[level.lock_spots.size] = var_4;
        var_1++;
    }
}

show_hide_symbols()
{
    level endon( "chains_unlocked" );

    while ( !isdefined( level.players ) )
        wait 0.1;

    for (;;)
    {
        foreach ( var_1 in level.players )
        {
            var_2 = scripts\engine\utility::_id_9CEE( var_1._id_DCEB );

            foreach ( var_4 in level.lock_spots )
            {
                if ( var_2 )
                {
                    var_4 show();
                    continue;
                }

                var_4 hide();
            }
        }

        wait 0.1;
    }
}

break_the_chains()
{
    level thread spawn_chain_locks();
    var_0 = getentarray( "harpoon_gun_quest_chains", "targetname" );
    scripts\engine\utility::_id_6E4C( "chains_unlocked" );
    var_1 = ( -332, -1435, 310 );
    var_2 = spawn( "script_origin", var_1 );
    wait 0.1;
    var_2 makeusable();
    var_2 sethintstring( &"CP_RAVE_BREAK_LOCK" );
    var_2 waittill( "trigger" );
    var_3 = spawn( "script_model", var_0[0].origin );
    var_3 setmodel( "tag_origin" );
    var_3.angles = var_0[0].angles + ( 0, 0, 0 );
    var_3 playsound( "harpoon_cabinet_unlock" );
    wait 1;
    playfxontag( level._effect["chain_dissolve"], var_3, "tag_origin" );
    var_0[0] hide();
    var_2 delete();
    scripts\engine\utility::_id_6E3E( "harpoon_unlocked" );
}

take_harpoon_weapon()
{
    var_0 = getent( "harpoon_gun_quest", "targetname" );
    var_1 = getent( "harpoon_gun_quest_activation_spot", "targetname" );
    scripts\engine\utility::_id_6E4C( "harpoon_unlocked" );
    var_1 makeusable();
    var_1 sethintstring( &"CP_RAVE_PICKUP_ITEM" );
    var_1 waittill( "trigger", var_2 );
    var_2 giveweapon( "iw7_harpoon_zm" );
    var_2 _meth_83B5( "iw7_harpoon_zm" );
    var_0 hide();
}
