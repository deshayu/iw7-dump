// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

setupbtaction( var_0, var_1, var_2, var_3 )
{
    var_4 = spawnstruct();
    var_4.fnbegin = var_1;
    var_4.fntick = var_2;
    var_4.fnend = var_3;

    if ( !isdefined( self.actions ) )
        self.actions = [];

    self.actions[var_0] = var_4;
}

setdesiredbtaction( var_0, var_1 )
{
    if ( isdefined( var_1 ) && !isdefined( self.actions[var_1] ) )
        return 0;

    var_2 = getcurrentdesiredbtaction( var_0 );
    self.desiredaction = var_1;

    if ( isdefined( var_2 ) && var_2 != var_1 )
        self notify( "newaction" );

    return 1;
}

getcurrentdesiredbtaction( var_0 )
{
    if ( !isdefined( self._id_3135._id_9928[var_0] ) )
        return undefined;

    return self._id_3135._id_9928[var_0].currentaction;
}

doaction_begin( var_0 )
{
    self._id_3135._id_9928[var_0] = spawnstruct();
    self._id_3135._id_9928[var_0].currentaction = self.desiredaction;
    var_1 = self.actions[self.desiredaction].fnbegin;
    self.desiredaction = undefined;

    if ( isdefined( var_1 ) )
        [[ var_1 ]]( var_0 );
}

doaction_tick( var_0 )
{
    var_1 = getcurrentdesiredbtaction( var_0 );
    var_2 = self.actions[var_1].fntick;

    if ( isdefined( var_2 ) )
    {
        var_3 = [[ var_2 ]]( var_0 );

        if ( !isdefined( self.desiredaction ) )
        {
            if ( isdefined( var_3 ) )
                return var_3;

            return anim.failure;
        }
    }

    if ( isdefined( self.desiredaction ) )
    {
        doaction_end( var_0 );
        doaction_begin( var_0 );
        return anim.running;
    }

    return anim.failure;
}

doaction_end( var_0 )
{
    var_1 = getcurrentdesiredbtaction( var_0 );
    var_2 = self.actions[var_1].fnend;

    if ( isdefined( var_2 ) )
        [[ var_2 ]]( var_0 );

    scripts\aitypes\dlc4\bt_state_api::btstate_endstates( var_0 );
    self._id_3135._id_9928[var_0] = undefined;
}
