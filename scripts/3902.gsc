// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_98CC( var_0, var_1, var_2, var_3 )
{
    self._id_1198._id_FED6 = scripts\asm\asm::_id_233A( self._id_238F );
}

_id_FE75( var_0, var_1, var_2, var_3 )
{
    scripts\asm\asm_mp::_id_2361( var_0, var_1, var_2, var_3 );
}

_id_FE61( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    _id_FE89();
    var_4 = _id_FE64();
    self _meth_83CE();
    var_5 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    _id_FE97( var_1, 0.2, 2 );
    self._id_2303._id_FECD._id_C21C--;
    _id_32BE();
    scripts\asm\asm::_id_2330( var_1, "shoot_finished" );
}

_id_FE7D( var_0 )
{
    var_1 = var_0 + "_shotgun_sound";
    var_2 = var_0 + "kill_shotgun_sound";
    thread _id_FE84( var_1, var_2, 2 );
    self endon( var_1 );
    self waittillmatch( var_0, "rechamber" );
    self playsound( "ai_shotgun_pump" );
    self notify( var_2 );
}

_id_FE97( var_0, var_1, var_2 )
{
    var_3 = var_0 + "_timeout";
    var_4 = var_0 + "_timeout_end";
    thread _id_FE84( var_3, var_4, var_2 );
    self endon( var_3 );
    self endon( var_0 + "_finished" );
    var_5 = 0;
    var_6 = self._id_2303._id_FECD._id_FF0B;
    var_7 = var_6 == 1;
    var_8 = 0;
    var_9 = scripts\anim\utility_common::_id_13C40();

    while ( var_5 < var_6 && var_6 > 0 )
    {
        if ( !isdefined( self._id_1198._id_FECD ) )
            break;

        if ( isdefined( self._id_010C ) )
        {
            if ( !_id_0F3C::_id_9DED() && !_id_0F3C::_id_9FFF() )
                break;
        }

        scripts\anim\utility_common::_id_FE9A( var_7 );

        if ( self._id_3250 > 0 )
        {
            if ( var_8 )
            {
                if ( randomint( 3 ) == 0 )
                    self._id_3250--;
            }
            else
                self._id_3250--;
        }

        var_5++;

        if ( var_9 )
            childthread _id_FE7D( var_0 );

        if ( self._id_2303._id_FECD._id_6B92 && var_5 == var_6 )
            break;

        wait( var_1 );
    }

    self notify( var_4 );
}

_id_FE5C( var_0, var_1, var_2, var_3 )
{
    var_4 = var_1 + "_timeout";
    var_5 = var_1 + "_timeout_end";
    thread _id_FE84( var_4, var_5, var_3 );
    self endon( var_4 );
    var_6 = self getanimentry( var_1, var_2 );
    var_7 = animhasnotetrack( var_6, "fire" );
    var_8 = weaponclass( self.weapon ) == "rocketlauncher";
    var_9 = 0;
    var_10 = self._id_2303._id_FECD._id_FF0B;
    var_11 = var_10 == 1;
    var_12 = 0;
    var_13 = scripts\anim\utility_common::_id_13C40();

    while ( var_9 < var_10 && var_10 > 0 )
    {
        if ( var_7 )
            self waittillmatch( var_1, "fire" );

        if ( !self._id_3250 )
            break;

        scripts\anim\utility_common::_id_FE9A( var_11 );

        if ( var_12 )
        {
            if ( randomint( 3 ) == 0 )
                self._id_3250--;
        }
        else
            self._id_3250--;

        if ( var_8 )
        {
            if ( issubstr( tolower( self.weapon ), "rpg" ) || issubstr( tolower( self.weapon ), "panzerfaust" ) )
                self _meth_8187( "tag_rocket" );
        }

        var_9++;

        if ( var_13 )
            childthread _id_FE7D( var_1 );

        if ( self._id_2303._id_FECD._id_6B92 && var_9 == var_10 )
            break;

        if ( !var_7 || var_10 == 1 && self._id_2303._id_FECD._id_1119D == "single" )
            self waittillmatch( var_1, "end" );
    }

    self notify( var_5 );
}

_id_FE84( var_0, var_1, var_2 )
{
    self endon( var_1 );
    wait( var_2 );
    self notify( var_0 );
}

_id_FEFE()
{
    if ( scripts\anim\utility_common::_id_13C40() )
        return 1.0;

    if ( scripts\anim\weaponlist::_id_1310F() )
        return scripts\anim\weaponlist::_id_2691() * 0.7;

    return 0.4;
}

_id_FE64()
{
    var_0 = self._id_2303._id_FECD._id_1119D;
    var_1 = 1.0;

    if ( isdefined( self._id_FED4 ) )
        var_1 = self._id_FED4;
    else if ( var_0 == "full" )
        var_1 = scripts\anim\weaponlist::_id_2691() * randomfloatrange( 0.5, 1.0 );
    else if ( var_0 == "burst" )
        var_1 = scripts\anim\weaponlist::_id_32C3();
    else if ( scripts\anim\utility_common::_id_9FCA() )
        var_1 = 3.0;
    else if ( scripts\anim\utility_common::_id_9FC9() )
        var_1 = _id_FEFE();

    return var_1;
}

_id_FE89()
{
    var_0 = self._id_1198._id_FECD;

    if ( !isdefined( self._id_2303._id_FECD ) )
    {
        self._id_2303._id_FECD = spawnstruct();
        self._id_2303._id_FECD._id_C21C = var_0._id_32BD;
    }

    self._id_2303._id_FECD._id_1119D = var_0._id_1119D;
    self._id_2303._id_FECD._id_6B92 = var_0._id_6B92;
    self._id_2303._id_FECD._id_FF0B = var_0._id_FF0B;
    self._id_2303._id_FECD._id_D699 = var_0._id_D699;
    self._id_2303._id_FECD._id_65D3 = var_0._id_65D3;
}

_id_32BE()
{
    if ( self._id_2303._id_FECD._id_1119D == "full" && !self._id_2303._id_FECD._id_6B92 )
    {
        if ( self._id_A9ED == gettime() )
            wait 0.05;

        return;
    }

    var_0 = _id_80E7();

    if ( var_0 )
        wait( var_0 );
}

_id_80E7()
{
    var_0 = ( gettime() - self._id_A9ED ) / 1000;
    var_1 = _id_7E12();

    if ( var_1 > var_0 )
        return var_1 - var_0;

    return 0;
}

_id_8130()
{
    if ( isplayer( self._id_010C ) )
        return randomfloatrange( self._id_010C._id_86A9._id_B750, self._id_010C._id_86A9._id_B461 );
    else
        return randomfloatrange( anim._id_B750, anim._id_B461 );
}

_id_7E12()
{
    if ( scripts\anim\utility_common::_id_9FCA() )
        return randomfloatrange( 0.15, 0.55 );
    else if ( scripts\anim\utility_common::_id_13C40() )
        return randomfloatrange( 1.0, 1.7 );
    else if ( scripts\anim\utility_common::_id_9D4D() )
        return _id_8130();
    else if ( self._id_2303._id_FECD._id_6B92 )
        return randomfloatrange( 0.1, 0.35 );
    else
        return randomfloatrange( 0.4, 0.9 );
}
