// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_8987( var_0 )
{
    if ( !isdefined( var_0 ) || var_0 == 0 )
    {
        _id_0C33::_id_295A();
        return;
    }

    if ( var_0 == 1 || var_0 == 2 )
    {
        if ( self._id_3250 <= 0 )
            var_0 = 0;
    }

    switch ( var_0 )
    {
        case 2:
            _id_0C33::_id_295B();
            break;
        case 1:
            _id_0C33::_id_295C();
            break;
        default:
            _id_0C33::_id_295A();
            break;
    }
}

_id_3E49( var_0 )
{
    if ( !isdefined( self._id_EF7D ) && !isdefined( self._id_EF7A ) && !isdefined( self._id_EF7C ) )
        return anim.failure;

    _id_8987( self._id_EF73 );

    if ( isdefined( self._id_010C ) )
    {
        if ( isdefined( self._id_3123 ) )
            return anim.failure;

        if ( isdefined( self._id_EF79 ) && self._id_EF79 > 0 )
        {
            var_1 = self._id_EF79 * self._id_EF79;
            var_2 = distancesquared( self.origin, self._id_010C.origin );

            if ( var_2 < var_1 )
            {
                self._id_3123 = 1;
                return anim.failure;
            }
        }
    }
    else
        self._id_3123 = undefined;

    if ( isdefined( self._id_EF7E ) )
    {
        self _meth_8287( self._id_EF7E );
        var_3 = self._id_EF7E;
    }
    else
        var_3 = 4;

    if ( isdefined( self._id_EF7D ) )
    {
        self _meth_8484();
        self _meth_8286( self._id_EF7D );
    }
    else if ( isdefined( self._id_EF7A ) )
    {
        var_4 = distancesquared( self.origin, self._id_EF7A.origin );

        if ( var_4 > var_3 * var_3 )
        {
            self _meth_8484();
            self _meth_8284( self._id_EF7A );
        }
        else
            return anim.failure;
    }
    else if ( isdefined( self._id_EF7C ) )
    {
        self _meth_8484();
        self _meth_8285( self._id_EF7C );
    }

    return anim.success;
}

_id_930A( var_0 )
{
    if ( scripts\asm\asm_bb::_id_2942() )
        return anim.success;

    return anim.failure;
}

_id_930D( var_0 )
{
    if ( !scripts\asm\asm_bb::_id_2942() || !isdefined( self._id_010C ) )
        return anim.failure;

    var_1 = 0;

    if ( scripts\asm\asm_bb::_id_2955() )
        var_1 = self _meth_841E();

    if ( var_1 == 0 )
        var_1 = distance2d( self.origin, self._id_010C.origin );

    if ( !_id_0A06::_id_8BC8() || var_1 < self._id_72C5 )
        return anim.success;

    return anim.failure;
}

_id_97FA( var_0 )
{
    if ( self.health > self._id_6B98 )
        self.health = self._id_6B98;

    _id_0C33::_id_2979( 1 );
    return anim.success;
}

_id_5814()
{
    playfx( level._effect["sentry_explode_mp"], self.origin );
    earthquake( 0.5, 1, self.origin, 512 );
    radiusdamage( self.origin, self._id_69EF, self._id_69ED, self._id_69ED, self, "MOD_EXPLOSIVE" );
    self suicide();
}

_id_5813( var_0 )
{
    if ( !isdefined( self._id_010C ) )
        return anim.failure;

    var_1 = distancesquared( self.origin, self._id_010C.origin );

    if ( var_1 < self._id_565E )
    {
        _id_5814();
        return anim.success;
    }

    return anim.running;
}

_id_116F3( var_0 )
{
    _id_0C33::_id_2979( 0 );
}

_id_4F62( var_0, var_1 )
{
    if ( isdefined( self._id_4F63 ) )
    {
        [[ self._id_4F63 ]]( var_0, var_1 );
        return;
    }

    var_2 = gettime();

    if ( self._id_A8BA < 0 || var_2 - self._id_A8BA < self._id_B4CD )
    {
        _id_0C33::_id_295C();
        return;
    }

    self._id_110D7 = self._id_5277 + 100;

    if ( var_1 < self._id_110D7 )
    {
        _id_0C33::_id_295C();
        return;
    }

    _id_0C33::_id_295B();
}

_id_9ED8()
{
    return 0;
}

_id_3DE6( var_0 )
{
    if ( !isdefined( self._id_010C ) )
    {
        if ( isdefined( self._id_6571 ) )
            return anim.failure;

        if ( !_id_9ED8() )
        {
            scripts\asm\asm_bb::_id_2983( undefined );
            self _meth_841F();
        }

        return anim.failure;
    }

    var_1 = gettime();

    if ( isdefined( self._id_A938 ) )
    {
        if ( var_1 < self._id_A938 + 250 )
            return anim.success;
    }

    self._id_A938 = var_1;

    if ( isdefined( self._id_A8B7 ) && isdefined( self._id_010C ) )
    {
        if ( self._id_A8B7 != self._id_010C )
            self._id_A8BA = -99;
    }
    else
        self._id_A8BA = -99;

    var_2 = 1;
    var_3 = self _meth_805F( self._id_010C );
    var_4 = distance2d( self.origin, self._id_010C.origin );

    if ( var_3 )
        var_2 = self _meth_8060( _id_7E66() );
    else
        var_2 = 0;

    if ( !var_2 )
    {
        if ( !scripts\engine\utility::_id_9CEE( self._id_3320 ) )
        {
            _id_4F62( 0, var_4 );
            self _meth_8484();
            self _meth_8286( self._id_010C.origin );
        }

        return anim.success;
    }

    self._id_3320 = undefined;
    self._id_A8BA = gettime();
    self._id_A8B7 = self._id_010C;

    if ( var_4 > self._id_5277 )
    {
        _id_4F62( 1, var_4 );
        self _meth_8484();
        self _meth_8286( self._id_010C.origin );
        return anim.success;
    }

    if ( var_4 < self._id_272A )
    {
        var_1 = gettime();

        if ( isdefined( self._id_A88C ) && var_1 - self._id_A88C < 500 && isdefined( self._id_0233 ) )
            return anim.success;

        var_5 = vectornormalize( self.origin - self._id_010C.origin );
        var_6 = 100;
        var_7 = self.origin + var_5 * var_6;
        var_7 = getclosestpointonnavmesh( var_7, self );
        var_8 = var_7 - self.origin;
        var_8 = ( var_8[0], var_8[1], 0 );
        var_9 = vectornormalize( var_8 );
        var_10 = vectordot( var_9, var_5 );

        if ( var_10 > 0 )
        {
            _id_0C33::_id_295C();
            self _meth_8484();
            self _meth_8286( var_7 );
            return anim.success;
        }
    }

    if ( var_4 < self._id_5278 )
    {
        if ( !_id_9ED8() )
            self _meth_841F();

        return anim.success;
    }

    return anim.success;
}

_id_CB30()
{
    if ( isdefined( self._id_010C ) && isdefined( self._id_010C._id_565C ) && self._id_010C._id_565C )
    {
        if ( isdefined( self._id_3402 ) )
            return self._id_3402;
    }

    var_0 = 0;
    var_1 = randomint( 100 );

    for ( var_2 = 0; var_2 < self._id_3403.size; var_2++ )
    {
        var_3 = self._id_3403[var_2];

        if ( var_1 < var_3 + var_0 )
            return self._id_3404[var_2];

        var_0 = var_0 + var_3;
    }

    return undefined;
}

_id_7E8E()
{
    var_0 = self._id_010C gettagorigin( "j_head" );
    return var_0;
}

_id_7E66()
{
    if ( scripts\engine\utility::_id_9CEE( self._id_565C ) )
        return _id_7E8E();

    var_0 = 70;
    var_1 = 15;

    if ( isdefined( self._id_010C._id_18F4 ) )
    {
        var_0 = self._id_010C._id_18F4;
        var_1 = self._id_010C._id_18F9;
    }

    var_2 = var_0 * 0.75;
    var_3 = ( 0, 0, var_2 );
    var_4 = self._id_010C.origin + var_3;
    return var_4;
}

_id_12F35( var_0 )
{
    if ( !isdefined( self._id_3404 ) )
        return _id_0A06::_id_12EC2( var_0 );

    if ( isdefined( self._id_010C ) )
    {
        self._id_01C4 = undefined;

        if ( !isdefined( self._id_719B ) || !isdefined( self._id_BFB1 ) || gettime() > self._id_BFB1 )
        {
            self._id_719B = _id_CB30();
            self._id_BFB1 = gettime() + randomintrange( 1500, 2500 );
        }

        if ( isdefined( self._id_719B ) )
        {
            var_1 = self [[ self._id_719B ]]();

            if ( !self _meth_8060( var_1 ) )
                var_1 = _id_7E66();
        }
        else
            var_1 = _id_7E66();

        self._id_01C2 = var_1;
    }
    else
    {
        scripts\asm\asm_bb::_id_2983( undefined );
        self._id_01C2 = undefined;
        self._id_BFB1 = undefined;
    }

    return anim.success;
}

_id_3401( var_0 )
{
    if ( !isdefined( self._id_01C2 ) )
        return _id_0A06::_id_FE88( var_0 );

    if ( scripts\asm\asm::_id_232A( "shoot", "shoot_finished" ) )
        return anim.success;

    var_1 = self._id_3135._id_FECD;

    if ( self _meth_805F( self._id_010C ) )
    {
        self._id_01C4 = undefined;
        var_1._id_D699 = self._id_01C2;
        var_1._id_65D3 = undefined;
    }
    else if ( isdefined( self._id_8451 ) )
    {
        var_1._id_D699 = self._id_8451;
        var_1._id_65D3 = undefined;
    }
    else
        return anim.success;

    if ( !isdefined( var_1._id_C274 ) )
        var_1._id_C274 = "normal";

    scripts\asm\asm_bb::_id_2983( var_1, self._id_010C );

    if ( _id_0A06::_id_9D2E() )
    {
        if ( !self._id_3135._id_B117 )
        {
            _id_0A06::_id_E259();
            _id_0A06::_id_3EF9( var_1 );
            _id_0A06::_id_3EE3( var_1 );
        }

        _id_0A06::_id_3EF8( var_1 );
        self._id_3135._id_B117 = 1;
    }
    else
        self._id_3135._id_B117 = 0;

    if ( !isdefined( var_1._id_D699 ) && !isdefined( var_1._id_65D3 ) )
        return anim.success;

    scripts\asm\asm_bb::_id_2962( self._id_3135._id_B117 );
    return anim.running;
}
