// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_98C5( var_0 )
{
    self._id_10264 = 1;
    _id_FAA4();
    return anim.success;
}

_id_FAA4()
{
    if ( isdefined( self._id_2AB4 ) )
        thread _id_4D5E();

    if ( isdefined( self._id_2AB5 ) )
        thread _id_5670();
}

_id_4D5E()
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );
    var_0 = 0;

    for (;;)
    {
        self waittill( "damage_part_died", var_1 );

        for ( var_2 = 0; var_2 < var_1.size; var_2++ )
        {
            var_3 = var_1[var_2];
            var_4 = var_2 < 3;
            _id_C924( var_3, var_4 );
            var_1[var_2] = undefined;
        }

        var_1 = undefined;
    }
}

_id_C924( var_0, var_1 )
{
    var_2 = var_0._id_004E;
    self _meth_8187( var_0._id_022A );
    var_3 = anglestoup( self gettagangles( var_0._id_022A ) );
}

_id_5670()
{
    self endon( "death" );
    self endon( "terminate_ai_threads" );

    for (;;)
    {
        self waittill( "dismemberment_part_died", var_0 );

        foreach ( var_2 in var_0 )
            _id_5673( var_2 );

        var_0 = undefined;
    }
}

_id_5673( var_0 )
{
    switch ( var_0._id_022A )
    {
        case "right_arm":
            return;
    }

    self._id_1198._id_5663 = 1;
    scripts\asm\asm_bb::_id_291B( var_0._id_022A );
    self _meth_8189( var_0._id_0332 );
}
