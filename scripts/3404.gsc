// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_97B1()
{
    scripts\engine\utility::_id_6E39( "doors_initialized" );
    scripts\engine\utility::_id_6E39( "first_door_opened" );

    if ( !scripts\engine\utility::_id_6E25( "init_interaction_done" ) )
        scripts\engine\utility::_id_6E4C( "init_interaction_done" );

    init_door_buys();
    init_team_killdoors();
    init_chi_doors();
    scripts\engine\utility::_id_6E3E( "doors_initialized" );
}

_id_59FA()
{
    self endon( "death" );
    self endon( "disconnect" );
    self endon( "saw_door_tutorial" );
    wait 5;
    var_0 = cos( 85 );

    for (;;)
    {
        var_1 = getentarray( "door_buy", "targetname" );
        var_2 = sortbydistance( var_1, self.origin );

        if ( var_2.size > 0 )
        {
            if ( distancesquared( var_2[0].origin, self.origin ) < 9216 && scripts\engine\utility::within_fov( self.origin, self.angles, var_2[0].origin, var_0 ) )
            {
                thread _id_0A57::_id_12AAE( "door_buy" );
                self notify( "saw_door_tutorial" );
                wait 1;
            }
        }

        wait 0.1;
    }
}

init_door_buys()
{
    var_0 = getentarray( "door_buy", "targetname" );

    foreach ( var_2 in var_0 )
    {
        if ( isdefined( var_2._id_EEAA ) )
            var_2 _meth_84A2( var_2._id_EEAA );

        level thread _id_95B5( var_2 );
        wait 0.05;
    }

    level.door_trigs = var_0;
}

_id_95B5( var_0 )
{
    var_0 sethintstring( level._id_9A12[var_0.script_noteworthy] );
    var_1 = [];

    foreach ( var_3 in level._id_4B88 )
    {
        if ( !isdefined( var_3._id_0334 ) )
            continue;

        if ( var_3._id_0334 == var_0._id_0334 )
            var_1[var_1.size] = var_3;
    }

    var_5 = _id_7E81( var_1[0].script_noteworthy );

    if ( isdefined( level.enter_area_hint ) )
        var_0 _meth_852E( level.enter_area_hint, var_5 );
    else
        var_0 _meth_852E( &"CP_ZMB_INTERACTIONS_ENTER_THIS_AREA", var_5 );

    if ( isdefined( level.door_properties_func ) )
        [[ level.door_properties_func ]]( var_0 );

    for (;;)
    {
        var_0 waittill( "trigger", var_6 );

        if ( _func_2A6( var_6 ) && !var_6 _id_0A77::_id_9D05() )
            continue;

        if ( isplayer( var_6 ) )
        {
            if ( !var_6 _id_0A59::_id_383E( var_1[0], level._id_9A43[var_1[0].script_noteworthy]._id_46A2, level._id_9A43[var_1[0].script_noteworthy]._id_109DA ) )
            {
                level notify( "interaction", "purchase_denied", level._id_9A43[var_1[0].script_noteworthy], var_6 );
                var_6 _id_100F4();
                continue;
            }

            var_0 notify( "purchased" );
            level notify( "door_opened_notify" );

            if ( !scripts\engine\utility::_id_6E25( "can_drop_coins" ) )
                scripts\engine\utility::_id_6E3E( "can_drop_coins" );

            var_6 _id_0A5E::_id_D9AD( "mt_purchase_doors" );
            var_6 notify( "door_opened_notify" );
            var_6 _id_0A63::_id_11445( level._id_9A43[var_1[0].script_noteworthy]._id_46A2, 1, "door" );
            _id_0D45::_id_AF7E( 1, var_6, var_1[0]._id_ECFA, level._id_9A43[var_1[0].script_noteworthy]._id_46A2, level._id_13BD3 );
            var_7 = int( 250 );

            if ( !scripts\cp\zombies\direct_boss_fight::should_directly_go_to_boss_fight() )
                var_6 _id_0A63::_id_831D( var_7, 1 );
        }

        if ( isdefined( level._id_6705 ) )
            level notify( level._id_6705 );

        if ( !scripts\engine\utility::_id_6E25( "first_door_opened" ) )
            scripts\engine\utility::_id_6E3E( "first_door_opened" );

        if ( isplayer( var_6 ) && var_6 _id_0A77::_id_9D05() || isdefined( var_0.allow_nonplayer_trigger ) )
        {
            foreach ( var_9 in var_1 )
            {
                if ( !isdefined( level._id_10816[var_9._id_ECFA] ) )
                    continue;

                if ( level._id_10816[var_9._id_ECFA]._id_0019 )
                {
                    if ( isdefined( level.purchase_area_vo ) && !isdefined( var_0.allow_nonplayer_trigger ) )
                        level [[ level.purchase_area_vo ]]( var_9._id_ECFA, var_6 );
                }
            }
        }

        level thread [[ level._id_9A43[var_1[0].script_noteworthy]._id_161A ]]( var_1[0], var_6 );

        foreach ( var_9 in var_1 )
        {
            _id_0D61::_id_F28B( var_9 );
            _id_0D61::_id_15FC( var_9._id_ECFA );
            wait 0.05;
        }

        break;
    }

    if ( isdefined( var_0._id_0334 ) )
    {
        var_13 = var_0._id_0334;

        if ( isdefined( var_0._id_0336 ) )
        {
            var_14 = getentarray( var_0._id_0336, "targetname" );

            foreach ( var_16 in var_14 )
            {
                if ( var_16._id_0334 == var_13 )
                    var_16 delete();
            }
        }
    }
}

_id_7E81( var_0 )
{
    return int( level._id_9A43[var_0]._id_46A2 );
}

_id_100F4()
{
    self endon( "disconnect" );
    thread _id_0A6A::_id_12885( "no_cash", "zmb_comment_vo", "high", 30, 0, 0, 1, 50 );
    self _meth_80F4( &"COOP_INTERACTIONS_NEED_MONEY" );
    wait 1;
    self _meth_80F3();
}

init_team_killdoors()
{
    level.team_killdoors = [];

    foreach ( var_1 in getentarray( "team_killdoor", "targetname" ) )
    {
        var_2 = level.team_killdoors.size;
        var_3 = spawnstruct();
        var_3.name = var_2;
        var_3.trigger = var_1;

        if ( isdefined( var_1._id_00C1 ) )
            var_3.base_kill_goal = var_1._id_00C1;
        else
            var_3.base_kill_goal = 10;

        var_3.kill_goal = var_3.base_kill_goal;
        var_3.goal_mult = 1;
        var_3.kill_captured = 0;
        var_3.players = [];
        var_3._id_E0E2 = 0;
        var_3._id_ED9A = "flag_" + var_2;
        scripts\engine\utility::_id_6E39( var_3._id_ED9A );
        var_3._id_4348 = undefined;
        var_3._id_0289 = undefined;
        var_3.progress_meters = [];
        var_3.progress_meter_start_pos = undefined;

        foreach ( var_5 in getentarray( var_1._id_0334, "targetname" ) )
        {
            var_5 _meth_8318( 1 );

            if ( issubstr( var_5.classname, "brushmodel" ) )
            {
                if ( isdefined( var_5.script_noteworthy ) && var_5.script_noteworthy == "progress" )
                {
                    var_5._id_10CE2 = var_5.origin;
                    var_3.progress_meters[var_3.progress_meters.size] = var_5;
                }
                else
                    var_3._id_4348 = var_5;

                continue;
            }

            if ( issubstr( var_5.classname, "scriptable" ) )
                var_3._id_0289 = var_5;
        }

        var_3.activation_areas = [];

        if ( isdefined( var_1._id_ECFA ) )
        {
            foreach ( var_8 in strtok( var_1._id_ECFA, "," ) )
                var_3.activation_areas[var_3.activation_areas.size] = var_8;
        }

        level.team_killdoors[var_2] = var_3;
        var_3 thread team_killdoor_think();
        wait 0.05;
    }
}

team_killdoor_think()
{
    level endon( "open_killdoor_" + self.name );
    childthread team_killdoor_activate();

    for (;;)
    {
        scripts\engine\utility::_id_6E4C( self._id_ED9A );
        level waittill( "zombie_killed", var_0, var_1, var_2, var_3 );

        if ( scripts\engine\utility::_id_9CEE( var_3.is_skeleton ) && isdefined( var_3.playerowner ) )
            var_3 = var_3.playerowner;

        if ( !_func_2A6( var_3 ) || !var_3 _id_0A77::_id_9D05() )
            continue;

        if ( !var_3 istouching( self.trigger ) )
            continue;

        thread capture_soul( var_0, var_3 );
    }
}

team_killdoor_activate()
{
    for (;;)
    {
        self.trigger waittill( "trigger", var_0 );

        if ( !isplayer( var_0 ) )
            continue;

        scripts\engine\utility::_id_6E3E( self._id_ED9A );
        self._id_0289 setscriptablepartstate( "fx", "active" );
        team_killdoor_deactivate();
        scripts\engine\utility::_id_6E2A( self._id_ED9A );
        self._id_0289 setscriptablepartstate( "fx", "normal" );
    }
}

team_killdoor_deactivate()
{
    self endon( "killdoor_deactivate" );

    for (;;)
    {
        self.trigger waittill( "trigger", var_0 );

        if ( isplayer( var_0 ) )
        {
            create_killdoor_hud( var_0 );
            childthread killdoor_timeout();
            thread player_timeout( var_0 );
        }
    }
}

create_killdoor_hud( var_0 )
{
    if ( isdefined( var_0.killdoor_hud ) )
        return;

    var_0.killdoor_hud = newclienthudelem( var_0 );
    var_0.killdoor_hud._id_AEC4 = 0;
    var_0.killdoor_hud._id_0142 = 1;
    var_0.killdoor_hud._id_013B = 1;
    var_0.killdoor_hud._id_02A4 = 20;
    var_0.killdoor_hud.alpha = 1;
    var_0.killdoor_hud.y = 120;
    var_0.killdoor_hud._id_002B = "center";
    var_0.killdoor_hud._id_017D = "center";
    var_0.killdoor_hud._id_00B9 = ( 1, 0, 1 );
    self.players = scripts\engine\utility::_id_22BC( self.players );
    self.players[self.players.size] = var_0;
}

killdoor_timeout()
{
    self notify( "stop_killdoor_timeout" );
    self endon( "stop_killdoor_timeout" );
    wait 1;
    self notify( "killdoor_deactivate" );
}

player_timeout( var_0 )
{
    var_0 endon( "disconnect" );
    var_0 notify( "stop_player_killdoor_timeout" );
    var_0 endon( "stop_player_killdoor_timeout" );
    wait 1;
    self.players = scripts\engine\utility::array_remove( self.players, var_0 );
    var_0.killdoor_hud destroy();
}

capture_soul( var_0, var_1 )
{
    soul_to_door( var_0 );

    if ( self._id_E0E2 )
        return;

    _id_0D45::log_purchasingforateamdoor( 1, var_1, self.name, self.kill_goal, level._id_13BD3 );

    foreach ( var_1 in self.players )
    {
        if ( isdefined( var_1 ) )
        {

        }
    }

    foreach ( var_5 in self.progress_meters )
        var_5 moveto( var_5._id_10CE2 + ( 0, 0, 16 / self.kill_goal ) * self.kill_captured, 0.1 );

    if ( self.kill_captured >= self.kill_goal )
        thread open_team_killdoor( var_1 );
}

soul_to_door( var_0 )
{
    var_1 = spawn( "script_model", var_0 );
    var_1 setmodel( "tag_origin_soultrail" );
    var_2 = self._id_0289.origin + ( 0, 0, 50 );

    for (;;)
    {
        var_3 = distance( var_0, var_2 );
        var_4 = var_3 / 600;

        if ( var_4 < 0.05 )
            var_4 = 0.05;

        var_1 moveto( var_2, var_4 );
        wait 0.05;

        if ( !self._id_E0E2 && distancesquared( var_1.origin, var_2 ) > 256 )
            continue;
        else
            break;
    }

    if ( !self._id_E0E2 )
        self.kill_captured++;

    var_1 delete();
}

open_team_killdoor( var_0 )
{
    level notify( "open_killdoor_" + self.name );
    self._id_E0E2 = 1;

    foreach ( var_0 in self.players )
    {
        if ( isdefined( var_0.killdoor_hud ) )
            var_0.killdoor_hud destroy();
    }

    foreach ( var_4 in self.activation_areas )
        _id_0D61::_id_15FC( var_4 );

    if ( isdefined( self._id_4348 ) )
    {
        self._id_4348 connectpaths();
        self._id_4348 notsolid();
    }

    foreach ( var_7 in self.progress_meters )
        var_7 delete();

    thread open_team_killdoor_sfx( self._id_9A3E );
    self._id_0289 setscriptablepartstate( "fx", "normal" );
    self._id_0289 setscriptablepartstate( "default", "hide" );
    _id_0D45::_id_AF7E( 1, var_0, self.name, self.kill_goal, level._id_13BD3 );
    var_0 _id_0A5E::_id_D9AD( "mt_purchase_doors" );
    var_0 notify( "door_opened_notify" );
    var_0 thread _id_0A6A::_id_12885( "door_kill_purchase", "disco_comment_vo" );

    if ( _id_0A77::_id_9F02() || scripts\engine\utility::_id_9CEE( level._id_C552 ) )
    {
        if ( !scripts\cp\zombies\direct_boss_fight::should_directly_go_to_boss_fight() )
            var_0 _id_0A63::_id_831D( 250, 1 );
    }
    else if ( !scripts\cp\zombies\direct_boss_fight::should_directly_go_to_boss_fight() )
        var_0 _id_0A63::_id_831D( 75, 1 );
}

open_team_killdoor_sfx( var_0 )
{
    wait 0.5;
    playloopsound( self._id_0289.origin, "zmb_clear_barricade" );
    wait 0.5;
}

init_chi_doors()
{
    foreach ( var_1 in getentarray( "chi_door", "targetname" ) )
    {
        var_1 thread chi_door_think();
        wait 0.05;
    }
}

chi_door_think()
{
    foreach ( var_1 in getentarray( self._id_0334, "targetname" ) )
    {
        if ( issubstr( var_1.classname, "scriptable" ) )
            self._id_0289 = var_1;
    }

    var_3 = [];

    foreach ( var_5 in level._id_4B88 )
    {
        if ( !isdefined( var_5._id_0334 ) )
            continue;

        if ( var_5._id_0334 == self._id_0334 )
            var_3[var_3.size] = var_5;
    }

    if ( var_3.size == 0 )
        return;

    self sethintstring( level._id_9A12[self.script_noteworthy] );
    var_7 = _id_7E81( var_3[0].script_noteworthy );

    if ( isdefined( level.enter_area_hint ) )
        self _meth_852E( level.enter_area_hint, var_7 );
    else
        self _meth_852E( &"CP_ZMB_INTERACTIONS_ENTER_THIS_AREA", var_7 );

    if ( isdefined( level.door_properties_func ) )
        [[ level.door_properties_func ]]( self );

    for (;;)
    {
        self._id_0289 waittill( "damage", var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16, var_17 );

        if ( !isdefined( level._id_C617 ) || !level._id_C617 )
        {
            if ( !var_9 _id_0A77::_id_9D05() )
                continue;

            if ( issubstr( var_17, "fists_zm_" ) )
            {

            }
            else if ( !issubstr( var_17, "shuriken" ) )
            {
                var_18 = [ "door_chi_none_1", "door_chi_none", "door_chi_notenough" ];
                var_9 thread _id_0A6A::_id_12885( scripts\engine\utility::_id_DC6B( var_18 ), "disco_comment_vo" );
                continue;
            }

            var_9 _id_0A5E::_id_D9AD( "mt_purchase_doors" );
            var_9 notify( "door_opened_notify" );
            _id_0D45::_id_AF7E( 1, var_9, var_3[0]._id_ECFA, level._id_9A43[var_3[0].script_noteworthy]._id_46A2, level._id_13BD3 );
            var_19 = int( 250 );

            if ( !scripts\cp\zombies\direct_boss_fight::should_directly_go_to_boss_fight() )
                var_9 _id_0A63::_id_831D( var_19, 1 );
        }

        if ( isplayer( var_9 ) && var_9 _id_0A77::_id_9D05() )
        {
            foreach ( var_21 in var_3 )
            {
                if ( !isdefined( level._id_10816[var_21._id_ECFA] ) )
                    continue;

                if ( level._id_10816[var_21._id_ECFA]._id_0019 )
                {
                    if ( isdefined( level.purchase_area_vo ) )
                        level [[ level.purchase_area_vo ]]( var_21._id_ECFA, var_9, 1 );
                }
            }
        }

        level thread [[ level._id_9A43[var_3[0].script_noteworthy]._id_161A ]]( var_3[0], var_9 );

        foreach ( var_21 in var_3 )
        {
            _id_0D61::_id_F28B( var_21 );
            _id_0D61::_id_15FC( var_21._id_ECFA );
            wait 0.05;
        }

        break;
    }

    if ( isdefined( self._id_0334 ) )
    {
        var_25 = self._id_0334;

        if ( isdefined( self._id_0336 ) )
        {
            var_26 = getentarray( self._id_0336, "targetname" );

            foreach ( var_28 in var_26 )
            {
                if ( var_28._id_0334 == var_25 )
                    var_28 delete();
            }
        }
    }
}

show_purchase_deny_chi( var_0 )
{
    self endon( "disconnect" );
    var_1 = [ "door_kill_notenough", "door_wooden_fail", "door_chi_notenough" ];
    thread _id_0A6A::_id_12885( scripts\engine\utility::_id_DC6B( var_1 ), "disco_comment_vo" );
}
