// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_DF0C()
{
    scripts\mp\agents\crab_mini\crab_mini_tunedata::setuptunedata();
    scripts\aitypes\bt_util::init();
    behaviortree\crab_mini::_id_DEE8();
    scripts\asm\crab_mini\mp\states::_id_2371();
    thread _id_FAB0();
}

_id_FAB0()
{
    level endon( "game_ended" );

    if ( !isdefined( level._id_18EE ) )
        level waittill( "scripted_agents_initialized" );

    level._id_18EE["crab_mini"]["setup_func"] = ::_id_FA8A;
    level._id_18EE["crab_mini"]["setup_model_func"] = ::_id_FACE;
    level.agent_funcs["crab_mini"]["on_damaged"] = scripts\cp\maps\cp_town\cp_town_damage::cp_town_onzombiedamaged;
    level.agent_funcs["crab_mini"]["gametype_on_damage_finished"] = _id_0CBC::_id_C5CE;
    level.agent_funcs["crab_mini"]["gametype_on_killed"] = scripts\cp\maps\cp_town\cp_town_damage::cp_town_onzombiekilled;
    level.agent_funcs["crab_mini"]["on_damaged_finished"] = _id_0F72::_id_C5CE;
    level.agent_funcs["crab_mini"]["on_killed"] = ::onkilled;

    if ( !isdefined( level._id_8CBD ) )
        level._id_8CBD = [];

    level._id_8CBD["crab_mini"] = ::calculatecrabminihealth;

    if ( !isdefined( level.damage_feedback_overrride ) )
        level.damage_feedback_overrride = [];

    level.damage_feedback_overrride["crab_mini"] = scripts\cp\maps\cp_town\cp_town_damage::crog_processdamagefeedback;

    if ( !isdefined( level.special_zombie_damage_func ) )
        level.special_zombie_damage_func = [];

    level.special_zombie_damage_func["crab_mini"] = ::crab_mini_special_damage_func;
}

_id_FACE( var_0 )
{
    self setmodel( "zmb_minicrab" );
}

setupzombiegametypevars()
{
    self.class = undefined;
    self._id_BCF6 = undefined;
    self._id_26B9 = undefined;
    self.guid = undefined;
    self.name = undefined;
    self._id_EB6A = undefined;
    self._id_CA5B = undefined;
    self._id_13CA0 = undefined;
    self._id_C2AD = undefined;
    self._id_0291 = undefined;
    self.sessionstate = undefined;
    self._id_55E6 = undefined;
    self._id_55E9 = undefined;
    self._id_55D9 = undefined;
    self._id_55E4 = 1;
    self._id_C026 = undefined;
    self._id_0184 = 0;
    self._id_0180 = 0;
    self._id_116D4 = undefined;
    self._id_441A = undefined;
    self._id_4B82 = undefined;
    self._id_5793 = undefined;
    self._id_37FD = 0;
    self._id_24CA = undefined;
    self._id_6622 = 0;
    self._id_B36E = undefined;
    self._id_126A3 = undefined;
    self._id_8C35 = 0;
    self.attackent = undefined;
    self._id_9342 = 1;
    self._id_1B03 = "idle";
    self._id_01F5 = "walk";
    self._id_0293 = 100;
    self.radius = 15;
    self.height = 40;
    self._id_252B = 26 + self.radius;
    self._id_B640 = "normal";
    self._id_B641 = 50;
    self._id_2539 = 54;
    self._id_253A = -64;
    self._id_4D45 = 2250000;
    self._id_0181 = 1;
    self.guid = self getentitynumber();
    self._id_BCE4 = 1.0;
    self._id_C081 = 1.0;
    self._id_126E8 = 1.0;
    self._id_772A = 1.0;
    self._id_2AB2 = 0;
    self._id_2AB8 = 1;
    self._id_118FC = 0;
    self._id_002F = 1;
    self._id_B5F9 = 40;
    self._id_B62E = 70;
    self._id_B631 = 80;
    self._id_B62F = squared( self._id_B62E );
    self._id_503C = self.radius + 1;
    self._id_B607 = 0.5;
    self._id_565C = 0;
    self._id_9BAC = 0;
    self._id_54CB = 0;
    self.damaged_by_player = 0;
    self._id_9E0C = undefined;
    self._id_6F73 = undefined;
    self._id_B0FC = 1;
    self._id_74B5 = 0;
    self._id_012E = undefined;
    self._id_E821 = undefined;
    self._id_A8A2 = [];
    self._id_8C12 = 0;
    self._id_8C14 = undefined;
    self._id_9BA7 = undefined;
    self._id_0179 = 200;
    self._id_4E4C = undefined;
    self._id_10A57 = undefined;
    self._id_828A = undefined;
    self._id_CE65 = undefined;
    self._id_29D2 = 1;
    self.vignette_nocorpse = undefined;
    self.death_anim_no_ragdoll = undefined;
    self.dont_cleanup = 1;
    self._id_0033 = 0;
    self _meth_84E6( 45 );

    if ( getdvarint( "scr_zombie_left_foot_sharp_turn_only", 0 ) == 1 )
        self._id_AB3F = 1;
}

_id_FA8A()
{
    setupzombiegametypevars();
    thread _id_0F72::_id_12EE6();
    self.height = self._id_18F4;
    self.radius = self._id_18F9;
    self._id_B62D = 70;
    self._id_B62E = 70;
    self._id_B631 = 80;
    self._id_B62F = squared( self._id_B62E );
    self._id_503C = self.radius + 1;
    self._id_B607 = 0.5;
    self._id_B601 = 45;
    self._id_504E = 55;
    self._id_129AF = 55;
    self._id_0368 = -60;
    self._id_0100 = 60;
    self.ground_pound_damage = 50;
    self._id_013C = 2500;
    self._id_013E = 2500;
    self._id_013D = 2500;
    self._id_0180 = 1;
    self.dontmutilate = 1;
}

getenemy()
{
    if ( isdefined( self.myenemy ) )
        return self.myenemy;

    return undefined;
}

lookatenemy()
{
    var_0 = getenemy();

    if ( isdefined( var_0 ) )
    {
        var_1 = var_0.origin - self.origin;
        var_2 = vectortoangles( var_1 );
        self orientmode( "face angle abs", var_2 );
    }
    else
        self orientmode( "face angle abs", self.angles );
}

calculatecrabminihealth()
{
    var_0 = 200;

    switch ( level._id_1096B )
    {
        case 0:
            var_0 = 300;
            break;
        case 1:
            var_0 = 450;
            break;
        case 2:
            var_0 = 450;
            break;
        case 3:
            var_0 = 600;
            break;
        default:
            var_0 = 600;
    }

    return var_0;
}

create_sludge_pool( var_0 )
{
    self._id_CE65 = 1;

    if ( !isdefined( level.goo_pool_ent_array ) )
        level.goo_pool_ent_array = [];

    var_1 = 2500;

    foreach ( var_3 in level.goo_pool_ent_array )
    {
        if ( !isdefined( var_3 ) )
            continue;

        if ( distancesquared( var_0, var_3.origin ) < var_1 )
        {
            var_3._id_AC75 = gettime() + 10000;
            return;
        }
    }

    var_5 = spawn( "script_model", var_0 );
    var_5 setmodel( "tag_origin_crab_goo" );
    level.goo_pool_ent_array[level.goo_pool_ent_array.size] = var_5;
    var_5 setscriptablepartstate( "blood_pool", "active" );
    var_5 thread run_sludge_pool_damage_func();
}

run_sludge_pool_damage_func()
{
    self endon( "death" );
    var_0 = 2500;
    self._id_AC75 = gettime() + 10000;

    while ( self._id_AC75 > gettime() )
    {
        foreach ( var_2 in level.players )
        {
            if ( distancesquared( self.origin, var_2.origin ) < var_0 )
            {
                var_3 = gettime();

                if ( !isdefined( var_2.last_crab_sludge_time ) || var_2.last_crab_sludge_time + 1000 < var_3 )
                {
                    var_2 _meth_80B0( 20, self.origin, self, self, "MOD_UNKNOWN" );
                    var_2.last_crab_sludge_time = gettime();
                }
            }
        }

        wait 0.05;
    }

    self delete();
}

setisstuck( var_0 )
{
    self.bisstuck = var_0;
}

iscrabministuck()
{
    return isdefined( self.bisstuck ) && self.bisstuck;
}

crab_mini_special_damage_func( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11 )
{
    if ( isdefined( level._id_9925 ) && level._id_9925 )
        return self.health;

    if ( isdefined( var_5 ) && var_5 == "iw7_knife_zm_cleaver" )
        return self.health;

    if ( isdefined( var_7 ) )
    {
        var_12 = scripts\mp\agents\crab_mini\crab_mini_tunedata::gettunedata();
        var_13 = anglestoforward( self.angles ) * -1;
        var_14 = vectordot( var_13, var_7 );

        if ( var_14 > var_12.reduce_damage_dot )
        {
            var_2 = var_2 * var_12.reduce_damage_pct;
            self.armor_hit = 1;
        }
    }

    return var_2;
}

onkilled( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 )
{
    thread play_death_sfx( 1 );
    return _id_0F72::_id_C5D2( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8 );
}

play_death_sfx( var_0 )
{
    playloopsound( self.origin, "minion_crog_pre_explo" );
    wait( var_0 );
    playloopsound( self.origin, "minion_crog_explode" );
}
