// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    level._id_2EA7 = 200;
    setup_callbacks();
}

setup_callbacks()
{
    level.bot_funcs["gametype_think"] = ::_id_2E26;
    level.bot_funcs["gametype_loadout_modify"] = ::_id_2E25;
}

_id_2E26()
{
    self notify( "bot_mugger_think" );
    self endon( "bot_mugger_think" );
    self endon( "death" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    self._id_A8D9 = ( 0, 0, 0 );
    self._id_113DD = undefined;
    self._id_8C7C = 0;
    self._id_8EE1 = 0;
    self._id_5001 = self botgetdifficultysetting( "meleeChargeDist" );
    childthread _id_113ED();

    if ( self botgetdifficultysetting( "strategyLevel" ) > 0 )
        childthread _id_113E3();

    if ( self botgetdifficultysetting( "strategyLevel" ) > 0 )
        childthread _id_6541();

    for (;;)
    {
        if ( self botgetdifficultysetting( "strategyLevel" ) > 1 )
        {
            if ( isdefined( self._id_1141D ) && level._id_BD7D <= self._id_1141D )
            {
                if ( !self._id_8EE1 )
                {
                    var_0 = getnodesinradius( self.origin, 1000, 0, 500, "node_hide" );
                    var_1 = self botnodepick( var_0, 3, "node_hide" );

                    if ( isdefined( var_1 ) )
                    {
                        self botsetscriptgoalnode( var_1, "critical" );
                        self._id_8EE1 = 1;
                    }
                }
            }
            else if ( self._id_8EE1 )
            {
                self botclearscriptgoal();
                self._id_8EE1 = 0;
            }
        }

        if ( !self._id_8EE1 )
        {
            if ( !isdefined( self._id_113DD ) && !self._id_8C7C )
                self [[ self.personality_update_function ]]();
        }

        wait 0.05;
    }
}

_id_6541()
{
    for (;;)
    {
        if ( self botgetdifficultysetting( "strategyLevel" ) < 2 )
            wait 0.5;
        else
            wait 0.2;

        if ( isdefined( self._id_010C ) && isplayer( self._id_010C ) && isdefined( self._id_010C._id_1141D ) && self._id_010C._id_1141D >= 3 && self botcanseeentity( self._id_010C ) && distance( self.origin, self._id_010C.origin ) <= 500 )
        {
            self botsetdifficultysetting( "meleeChargeDist", 500 );
            self botsetflag( "prefer_melee", 1 );
            self botsetflag( "throw_knife_melee", level._id_BDA6 > 0 );
            continue;
        }

        self botsetdifficultysetting( "meleeChargeDist", self._id_5001 );
        self botsetflag( "prefer_melee", 0 );
        self botsetflag( "throw_knife_melee", 0 );
    }
}

_id_113E3()
{
    for (;;)
    {
        level waittill( "mugger_tag_pile", var_0 );

        if ( self.health <= 0 )
            continue;

        if ( self._id_8EE1 )
            continue;

        if ( !isdefined( self._id_A91B ) || gettime() - self._id_A91B > 7500 )
        {
            self._id_A91B = undefined;
            self._id_A91A = undefined;
            self._id_8C7C = 0;
        }

        if ( !isdefined( self._id_A91A ) || distancesquared( self.origin, self._id_A91A ) > distancesquared( self.origin, var_0 ) )
        {
            self._id_A91B = gettime();
            self._id_A91A = var_0;
        }
    }
}

_id_2D75()
{
    var_0 = self getnearestnode();
    var_1 = undefined;

    if ( isdefined( var_0 ) )
    {
        var_2 = 1000000;
        var_3 = scripts\engine\utility::_id_227F( level.dogtags, level._id_BD82 );

        foreach ( var_5 in var_3 )
        {
            if ( var_5 scripts\mp\gameobjects::_id_38C3( self.team ) )
            {
                var_6 = distancesquared( self.origin, var_5.curorigin );

                if ( !isdefined( var_1 ) || var_6 < var_2 )
                {
                    if ( self botgetdifficultysetting( "strategyLevel" ) > 0 && var_6 < 122500 || var_6 < 1000000 && scripts\mp\bots\gametype_conf::_id_2DE1( var_5, var_0, self botgetfovdot() ) )
                    {
                        var_2 = var_6;
                        var_1 = var_5;
                    }
                }
            }
        }
    }

    return var_1;
}

_id_2D7D( var_0, var_1 )
{
    var_2 = [];

    if ( isdefined( var_0 ) )
    {
        var_3 = scripts\engine\utility::_id_227F( level.dogtags, level._id_BD82 );

        foreach ( var_5 in var_3 )
        {
            if ( var_5 scripts\mp\gameobjects::_id_38C3( self.team ) )
            {
                if ( isplayer( self ) || distancesquared( self.origin, var_5.curorigin ) < 1000000 )
                {
                    if ( scripts\mp\bots\gametype_conf::_id_2DE1( var_5, var_0, var_1 ) )
                    {
                        var_6 = spawnstruct();
                        var_6.origin = var_5.curorigin;
                        var_6._id_02DD = var_5;
                        var_2[var_2.size] = var_6;
                    }
                }
            }
        }
    }

    return var_2;
}

_id_113ED()
{
    wait( randomfloatrange( 0, 0.5 ) );

    for (;;)
    {
        if ( self botgetdifficultysetting( "strategyLevel" ) == 0 )
            wait 3.0;
        else if ( self botgetdifficultysetting( "strategyLevel" ) == 1 )
            wait 1.5;
        else
            wait 0.5;

        if ( self.health <= 0 )
            continue;

        if ( self._id_8EE1 )
            continue;

        if ( isdefined( self._id_010C ) && isplayer( self._id_010C ) && self botcanseeentity( self._id_010C ) )
            continue;

        var_0 = _id_2D75();

        if ( isdefined( var_0 ) )
        {
            _id_BD9F( var_0 );
            continue;
        }

        if ( !self._id_8C7C )
        {
            if ( isdefined( self._id_A91A ) && isdefined( self._id_A91B ) && gettime() - self._id_A91B <= 7500 )
                thread _id_BD86( self._id_A91A );
        }
    }
}

_id_BD86( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self._id_8C7C = 1;
    var_1 = spawnstruct();
    var_1._id_EDCA = "objective";
    var_1._id_C293 = level._id_2EA7;
    scripts\mp\bots\bots_strategy::_id_2E27( "kill_tag_pile", var_0, 25, var_1 );
    var_2 = scripts\engine\utility::_id_13734( "death", "tag_spotted" );
    self botclearscriptgoal();
    self._id_8C7C = 0;
    scripts\mp\bots\bots_strategy::_id_2D02( "kill_tag_pile" );
}

_id_BD9F( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self._id_113DD = var_0;
    self notify( "tag_spotted" );
    childthread _id_C157( var_0, "tag_picked_up" );
    scripts\mp\bots\bots_strategy::_id_2D02( "kill_tag" );
    var_1 = var_0.curorigin;

    if ( scripts\mp\bots\bots_util::_id_2EC6( self._id_A8D9, var_0.curorigin ) )
    {
        var_2 = var_0._id_BE7C;

        if ( isdefined( var_2 ) )
        {
            var_3 = var_2.origin - var_1;
            var_1 = var_1 + vectornormalize( var_3 ) * length( var_3 ) * 0.5;
        }
    }

    self._id_A8D9 = var_0.curorigin;
    var_4 = spawnstruct();
    var_4._id_EDCA = "objective";
    var_4._id_C293 = level._id_2EA7;
    scripts\mp\bots\bots_strategy::_id_2E27( "kill_tag", var_1, 25, var_4 );
    thread _id_C156( "tag_aborted" );
    var_5 = scripts\engine\utility::_id_13734( "death", "tag_picked_up" );
    self notify( "tag_watch_stop" );
    self._id_113DD = undefined;
    self botclearscriptgoal();
    scripts\mp\bots\bots_strategy::_id_2D02( "kill_tag" );
}

_id_C156( var_0 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "tag_watch_stop" );

    while ( scripts\mp\bots\bots_strategy::_id_2DC5( "kill_tag" ) )
        wait 0.05;

    self notify( var_0 );
}

_id_C157( var_0, var_1 )
{
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "tag_watch_stop" );

    while ( var_0 scripts\mp\gameobjects::_id_38C3( self.team ) )
        wait 0.05;

    self notify( var_1 );
}

_id_2E25( var_0 )
{
    var_1 = 0;
    var_2 = self botgetdifficulty();

    if ( var_2 == "recruit" )
        var_1 = 0.1;
    else if ( var_2 == "regular" )
        var_1 = 0.25;
    else if ( var_2 == "hardened" )
        var_1 = 0.6;
    else if ( var_2 == "veteran" )
        var_1 = 0.9;

    var_3 = var_0["loadoutEquipment"] == "throwingknife_mp";

    if ( !var_3 )
    {
        if ( var_1 >= randomfloat( 1 ) )
        {
            var_0["loadoutEquipment"] = "throwingknife_mp";
            var_3 = 1;
        }
    }

    if ( var_1 >= randomfloat( 1 ) )
    {
        if ( var_0["loadoutOffhand"] != "concussion_grenade_mp" )
            var_0["loadoutOffhand"] = "concussion_grenade_mp";
    }

    if ( var_1 >= randomfloat( 1 ) )
    {
        if ( var_0["loadoutPrimaryAttachment"] != "tactical" && var_0["loadoutPrimaryAttachment2"] != "tactical" )
        {
            var_4 = scripts\mp\bots\bots_loadout::_id_2EC2( var_0["loadoutPrimary"], var_0["loadoutPrimaryAttachment"], "tactical" );

            if ( var_4 )
                var_0["loadoutPrimaryAttachment2"] = "tactical";
            else
            {
                var_4 = scripts\mp\bots\bots_loadout::_id_2EC2( var_0["loadoutPrimary"], "tactical", var_0["loadoutPrimaryAttachment2"] );

                if ( var_4 )
                    var_0["loadoutPrimaryAttachment"] = "tactical";
            }
        }
    }

    if ( var_1 >= randomfloat( 1 ) )
    {
        if ( var_0["loadoutSecondaryAttachment"] != "tactical" && var_0["loadoutSecondaryAttachment2"] != "tactical" )
        {
            var_4 = scripts\mp\bots\bots_loadout::_id_2EC2( var_0["loadoutSecondary"], var_0["loadoutSecondaryAttachment"], "tactical" );

            if ( var_4 )
                var_0["loadoutSecondaryAttachment2"] = "tactical";
            else
            {
                var_4 = scripts\mp\bots\bots_loadout::_id_2EC2( var_0["loadoutSecondary"], "tactical", var_0["loadoutSecondaryAttachment2"] );

                if ( var_4 )
                    var_0["loadoutSecondaryAttachment"] = "tactical";
            }
        }
    }

    var_5 = [];
    var_6 = [];
    var_7 = [];
    var_8 = [];

    if ( var_3 )
        var_8[var_8.size] = "specialty_extra_deadly";

    var_8[var_8.size] = "specialty_lightweight";
    var_8[var_8.size] = "specialty_marathon";
    var_8[var_8.size] = "specialty_fastsprintrecovery";
    var_8[var_8.size] = "specialty_stun_resistance";

    for ( var_9 = 1; var_9 < 9; var_9++ )
    {
        if ( isdefined( var_0["loadoutPerk" + var_9] ) )
        {
            if ( var_0["loadoutPerk" + var_9] != "none" )
            {
                var_5[var_5.size] = var_0["loadoutPerk" + var_9];
                var_6[var_6.size] = var_9;
                continue;
            }

            var_7[var_7.size] = var_9;
        }
    }

    foreach ( var_11 in var_8 )
    {
        if ( var_1 >= randomfloat( 1 ) )
        {
            if ( !scripts\engine\utility::array_contains( var_5, var_11 ) )
            {
                var_12 = -1;

                if ( var_7.size )
                {
                    var_12 = var_7[0];
                    var_7 = scripts\engine\utility::array_remove( var_7, var_12 );
                }
                else if ( var_6.size )
                {
                    var_12 = scripts\engine\utility::_id_DC6B( var_6 );
                    var_6 = scripts\engine\utility::array_remove( var_6, var_12 );
                }

                if ( var_12 != -1 )
                    var_0["loadoutPerk" + var_12] = var_11;
            }
        }
    }

    if ( var_1 >= randomfloat( 1 ) )
    {
        if ( var_0["loadoutStreakType"] == "streaktype_assault" && var_0["loadoutStreak1"] != "airdrop_juggernaut_maniac" && var_0["loadoutStreak2"] != "airdrop_juggernaut_maniac" && var_0["loadoutStreak3"] != "airdrop_juggernaut_maniac" )
            var_0["loadoutStreak3"] = "airdrop_juggernaut_maniac";
    }

    return var_0;
}
