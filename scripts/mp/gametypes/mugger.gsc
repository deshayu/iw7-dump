// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "mapname" ) == "mp_background" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( level.gametype, 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( level.gametype, 7 );
        scripts\mp\utility\game::registerscorelimitdvar( level.gametype, 2500 );
        scripts\mp\utility\game::registerroundlimitdvar( level.gametype, 1 );
        scripts\mp\utility\game::registerwinlimitdvar( level.gametype, 1 );
        scripts\mp\utility\game::registernumlivesdvar( level.gametype, 0 );
        scripts\mp\utility\game::registerhalftimedvar( level.gametype, 0 );
        level.matchrules_damagemultiplier = 0;
        level.matchrules_vampirism = 0;
        level._id_BD7D = getdvarint( "scr_mugger_bank_limit", 10 );
    }

    setteammode( "ffa" );
    level.onprecachegametype = ::onprecachegametype;
    level.onstartgametype = ::onstartgametype;
    level.onspawnplayer = ::onspawnplayer;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.onplayerscore = ::onplayerscore;
    level.ontimelimit = ::ontimelimit;
    level._id_C5CC = ::_id_C5CC;
    level._id_4C85 = ::_id_49F2;
    level.assists_disabled = 1;

    if ( level.matchrules_damagemultiplier || level.matchrules_vampirism )
        level.modifyplayerdamage = scripts\mp\damage::gamemodemodifyplayerdamage;

    level._id_BD84["vanish"] = loadfx( "impacts/small_snowhit" );
    level._id_BD84["smoke"] = loadfx( "vfx/iw7/_requests/mp/vfx_debug_warning.vfx" );
    level._id_BDA5 = loadfx( "misc/ui_flagbase_red" );
    level thread _id_C56E();
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchdata();
    setdynamicdvar( "scr_mugger_roundswitch", 0 );
    scripts\mp\utility\game::registerroundswitchdvar( "mugger", 0, 0, 9 );
    setdynamicdvar( "scr_mugger_roundlimit", 1 );
    scripts\mp\utility\game::registerroundlimitdvar( "mugger", 1 );
    setdynamicdvar( "scr_mugger_winlimit", 1 );
    scripts\mp\utility\game::registerwinlimitdvar( "mugger", 1 );
    setdynamicdvar( "scr_mugger_halftime", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "mugger", 0 );
    setdynamicdvar( "scr_mugger_promode", 0 );
    level._id_BD7D = getmatchrulesdata( "muggerData", "bankLimit" );
    setdynamicdvar( "scr_mugger_bank_limit", level._id_BD7D );
    level._id_BD8D = getmatchrulesdata( "muggerData", "jackpotLimit" );
    setdynamicdvar( "scr_mugger_jackpot_limit", level._id_BD8D );
    level._id_BDA6 = getmatchrulesdata( "muggerData", "throwKnifeFrac" );
    setdynamicdvar( "scr_mugger_throwing_knife_mug_frac", level._id_BDA6 );
}

onprecachegametype()
{
    precachemodel( "dogtags_iw7_foe" );
    precachemodel( "lethal_smoke_grenade_wm" );
    precachempanim( "mp_dogtag_spin" );
    precacheshader( "waypoint_dogtags2" );
    precacheshader( "waypoint_dogtag_pile" );
    precacheshader( "waypoint_jackpot" );
    precacheshader( "hud_tagcount" );
    precachesound( "mugger_mugging" );
    precachesound( "mugger_mega_mugging" );
    precachesound( "mugger_you_mugged" );
    precachesound( "mugger_got_mugged" );
    precachesound( "mugger_mega_drop" );
    precachesound( "mugger_muggernaut" );
    precachesound( "mugger_tags_banked" );
    precachestring( &"MPUI_MUGGER_JACKPOT" );
}

onstartgametype()
{
    setclientnamemode( "auto_change" );
    scripts\mp\utility\game::setobjectivetext( "allies", &"OBJECTIVES_MUGGER" );
    scripts\mp\utility\game::setobjectivetext( "axis", &"OBJECTIVES_MUGGER" );

    if ( level._id_10A56 )
    {
        scripts\mp\utility\game::setobjectivescoretext( "allies", &"OBJECTIVES_MUGGER" );
        scripts\mp\utility\game::setobjectivescoretext( "axis", &"OBJECTIVES_MUGGER" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( "allies", &"OBJECTIVES_MUGGER_SCORE" );
        scripts\mp\utility\game::setobjectivescoretext( "axis", &"OBJECTIVES_MUGGER_SCORE" );
    }

    scripts\mp\utility\game::setobjectivehinttext( "allies", &"OBJECTIVES_MUGGER_HINT" );
    scripts\mp\utility\game::setobjectivehinttext( "axis", &"OBJECTIVES_MUGGER_HINT" );
    scripts\mp\spawnlogic::_id_F62D( "FreeForAll" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addspawnpoints( "allies", "mp_dm_spawn" );
    scripts\mp\spawnlogic::addspawnpoints( "axis", "mp_dm_spawn" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    level.dogtags = [];
    var_0[0] = level.gametype;
    var_0[1] = "dm";
    scripts\mp\gameobjects::main( var_0 );
    level._id_BDA7 = getdvarint( "scr_mugger_timelimit", 7 );
    setdynamicdvar( "scr_mugger_timeLimit", level._id_BDA7 );
    scripts\mp\utility\game::registertimelimitdvar( "mugger", level._id_BDA7 );
    level._id_BDA1 = getdvarint( "scr_mugger_scorelimit", 2500 );

    if ( level._id_BDA1 == 0 )
        level._id_BDA1 = 2500;

    setdynamicdvar( "scr_mugger_scoreLimit", level._id_BDA1 );
    scripts\mp\utility\game::registerscorelimitdvar( "mugger", level._id_BDA1 );
    level._id_BD7D = getdvarint( "scr_mugger_bank_limit", 10 );
    level._id_BD9E = getdvarint( "scr_mugger_muggernaut_window", 3000 );
    level._id_BD9D = getdvarint( "scr_mugger_muggernaut_muggings_needed", 3 );
    level._id_BD9A = squared( getdvarfloat( "mugger_min_spawn_dist", 350 ) );
    level._id_BD8D = getdvarint( "scr_mugger_jackpot_limit", 0 );
    level._id_BD96 = getdvarfloat( "scr_mugger_jackpot_wait_sec", 10 );
    level._id_BDA6 = getdvarfloat( "scr_mugger_throwing_knife_mug_frac", 1.0 );
    level _id_BD87();
    level thread _id_BD9C();
    level thread _id_BD9B();
    level._id_A42A = spawn( "script_model", ( 0, 0, 0 ) );
    level._id_A42A.origin = ( 0, 0, 0 );
    level._id_A42A.angles = ( 90, 0, 0 );
    level._id_A42A setmodel( "lethal_smoke_grenade_wm" );
    level._id_A42A hide();
    level._id_A42A._id_BD85 = 0;
    level thread _id_BD97();
}

_id_C56E()
{
    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0._id_1141D = 0;
        var_0._id_11A2F = 0;
        var_0.assists = var_0._id_11A2F;
        var_0.pers["assists"] = var_0._id_11A2F;
        var_0._id_0150 = var_0._id_1141D;
        var_0._id_BDAA = [];

        if ( isplayer( var_0 ) && !isbot( var_0 ) )
        {
            var_0._id_58C3 = var_0 scripts\mp\hud_util::_id_49D9( "hud_tagcount", 48, 48 );
            var_0._id_58C3 scripts\mp\hud_util::_id_F801( "TOP LEFT", "TOP LEFT", 200, 0 );
            var_0._id_58C3.alpha = 1;
            var_0._id_58C3._id_0177 = 1;
            var_0._id_58C3._id_0049 = 1;
            level thread _id_8EC5( var_0._id_58C3 );
            var_0._id_58C5 = var_0 scripts\mp\hud_util::_id_49B2( "bigfixed", 1.0 );
            var_0._id_58C5 scripts\mp\hud_util::_id_F7D6( var_0._id_58C3 );
            var_0._id_58C5 scripts\mp\hud_util::_id_F801( "CENTER", "CENTER", -24 );
            var_0._id_58C5 setvalue( var_0._id_1141D );
            var_0._id_58C5.alpha = 1;
            var_0._id_58C5._id_00B9 = ( 1, 1, 0.5 );
            var_0._id_58C5._id_0153 = 1;
            var_0._id_58C5._id_02A4 = 1;
            var_0._id_58C5._id_0177 = 1;
            var_0._id_58C5._id_0049 = 1;
            var_0._id_58C5 scripts\mp\hud::_id_7251( 3.0 );
            level thread _id_8EC5( var_0._id_58C5 );
        }
    }
}

onspawnplayer()
{
    self._id_BDAA = [];

    if ( !isagent( self ) )
        thread _id_1370C();
}

_id_8EC5( var_0 )
{
    level waittill( "game_ended" );

    if ( isdefined( var_0 ) )
        var_0.alpha = 0;
}

getspawnpoint()
{
    var_0 = scripts\mp\spawnlogic::getteamspawnpoints( self.pers["team"] );
    var_1 = scripts\mp\spawnscoring::getspawnpoint( var_0 );
    return var_1;
    return var_1;
}

_id_C5CC( var_0 )
{
    if ( isdefined( var_0 ) && var_0 == "suicide" )
        level thread _id_10849( self, self );
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4 )
{
    scripts\mp\gametypes\common::onnormaldeath( var_0, var_1, var_2, var_3, var_4 );
    level thread _id_10849( var_0, var_1 );
}

_id_BD87()
{
    level._id_BD99 = getdvarint( "scr_mugger_max_extra_tags", 50 );
    level._id_BD82 = [];
}

_id_10849( var_0, var_1 )
{
    if ( isagent( var_1 ) )
        var_1 = var_1.owner;

    var_2 = 0;
    var_3 = 0;

    if ( isdefined( var_1 ) )
    {
        if ( var_0 == var_1 )
        {
            if ( var_0._id_1141D > 0 )
            {
                var_2 = var_0._id_1141D;
                var_0._id_1141D = 0;
                var_0._id_0150 = 0;

                if ( isplayer( var_0 ) && !isbot( var_0 ) )
                {
                    var_0._id_58C5 setvalue( var_0._id_1141D );
                    var_0._id_58C5 thread scripts\mp\hud::fontpulse( var_0 );
                    var_0 thread scripts\mp\hud_message::showsplash( "mugger_suicide", var_2 );
                }
            }
        }
        else if ( isdefined( var_0.attackerdata ) && var_0.attackerdata.size > 0 )
        {
            if ( isplayer( var_1 ) && isdefined( var_0.attackerdata ) && isdefined( var_1.guid ) && isdefined( var_0.attackerdata[var_1.guid] ) )
            {
                var_4 = var_0.attackerdata[var_1.guid];

                if ( isdefined( var_4 ) && isdefined( var_4.attackerent ) && var_4.attackerent == var_1 )
                {
                    if ( isdefined( var_4.smeansofdeath ) && ( var_4.smeansofdeath == "MOD_MELEE" || ( var_4.weapon == "throwingknife_mp" || var_4.weapon == "throwingknifejugg_mp" ) && level._id_BDA6 > 0.0 ) )
                    {
                        var_3 = 1;

                        if ( var_0._id_1141D > 0 )
                        {
                            var_2 = var_0._id_1141D;

                            if ( ( var_4.weapon == "throwingknife_mp" || var_4.weapon == "throwingknifejugg_mp" ) && level._id_BDA6 < 1.0 )
                                var_2 = int( ceil( var_0._id_1141D * level._id_BDA6 ) );

                            var_0._id_1141D = var_0._id_1141D - var_2;
                            var_0._id_0150 = var_0._id_1141D;

                            if ( isplayer( var_0 ) && !isbot( var_0 ) )
                            {
                                var_0._id_58C5 setvalue( var_0._id_1141D );
                                var_0._id_58C5 thread scripts\mp\hud::fontpulse( var_0 );
                                var_0 thread scripts\mp\hud_message::showsplash( "callout_mugged", var_2 );
                                var_0 playlocalsound( "mugger_got_mugged" );
                            }

                            playloopsound( var_0.origin, "mugger_mugging" );
                            var_1 thread scripts\mp\hud_message::showsplash( "callout_mugger", var_2 );

                            if ( var_4.weapon == "throwingknife_mp" || var_4.weapon == "throwingknifejugg_mp" )
                                var_1 playlocalsound( "mugger_you_mugged" );
                        }

                        var_1._id_BDAA[var_1._id_BDAA.size] = gettime();
                        var_1 thread _id_BD7F();
                    }
                }
            }
        }
    }

    if ( isagent( var_0 ) )
    {
        var_5 = var_0.origin + ( 0, 0, 14 );
        playloopsound( var_5, "mp_killconfirm_tags_drop" );
        level notify( "mugger_jackpot_increment" );
        var_6 = _id_BDA4( var_0.origin, 40, 160 );
        var_6.victim = var_0.owner;

        if ( isdefined( var_1 ) && var_0 != var_1 )
            var_6.attacker = var_1;
        else
            var_6.attacker = undefined;

        return;
    }
    else if ( isdefined( level.dogtags[var_0.guid] ) )
    {
        playfx( level._id_BD84["vanish"], level.dogtags[var_0.guid].curorigin );
        level.dogtags[var_0.guid] notify( "reset" );
    }
    else
    {
        var_7[0] = spawn( "script_model", ( 0, 0, 0 ) );
        var_7[0] setmodel( "dogtags_iw7_foe" );
        var_8 = spawn( "trigger_radius", ( 0, 0, 0 ), 0, 32, 32 );
        var_8._id_0336 = "trigger_dogtag";
        var_8 hide();
        level.dogtags[var_0.guid] = scripts\mp\gameobjects::createuseobject( "any", var_8, var_7, ( 0, 0, 16 ) );
        scripts\mp\objpoints::deleteobjpoint( level.dogtags[var_0.guid].objpoints["allies"] );
        scripts\mp\objpoints::deleteobjpoint( level.dogtags[var_0.guid].objpoints["axis"] );
        level.dogtags[var_0.guid] scripts\mp\gameobjects::_id_FB08( 0 );
        level.dogtags[var_0.guid]._id_C5BB = ::_id_C5BB;
        var_8._id_58BD = level.dogtags[var_0.guid];
        level.dogtags[var_0.guid].victim = var_0;
        level.dogtags[var_0.guid]._id_C2B5 = scripts\mp\objidpoolmanager::requestminimapid( 99 );

        if ( level.dogtags[var_0.guid]._id_C2B5 != -1 )
        {
            scripts\mp\objidpoolmanager::minimap_objective_add( level.dogtags[var_0.guid]._id_C2B5, "invisible", ( 0, 0, 0 ) );
            scripts\mp\objidpoolmanager::minimap_objective_icon( level.dogtags[var_0.guid]._id_C2B5, "waypoint_dogtags2" );
        }

        level.dogtags[var_0.guid].visuals[0] scriptmodelplayanim( "mp_dogtag_spin" );
        level thread _id_41C9( var_0 );
    }

    var_5 = var_0.origin + ( 0, 0, 14 );
    level.dogtags[var_0.guid].curorigin = var_5;
    level.dogtags[var_0.guid].trigger.origin = var_5;
    level.dogtags[var_0.guid].visuals[0].origin = var_5;
    level.dogtags[var_0.guid] scripts\mp\gameobjects::_id_987E();
    level.dogtags[var_0.guid] scripts\mp\gameobjects::allowuse( "any" );
    level.dogtags[var_0.guid].visuals[0] show();

    if ( isdefined( var_1 ) && var_0 != var_1 )
        level.dogtags[var_0.guid].attacker = var_1;
    else
        level.dogtags[var_0.guid].attacker = undefined;

    level.dogtags[var_0.guid] thread _id_11901();

    if ( var_2 < 5 )
    {
        scripts\mp\objidpoolmanager::minimap_objective_position( level.dogtags[var_0.guid]._id_C2B5, var_5 );
        scripts\mp\objidpoolmanager::minimap_objective_state( level.dogtags[var_0.guid]._id_C2B5, "active" );
    }
    else
        _id_BDA3( var_5, "mugger_megadrop", var_2, var_0, var_1 );

    playloopsound( var_5, "mp_killconfirm_tags_drop" );
    level.dogtags[var_0.guid]._id_116BD = 0;

    if ( var_2 == 0 )
        level notify( "mugger_jackpot_increment" );

    for ( var_9 = 0; var_9 < var_2; var_9++ )
    {
        var_6 = _id_BDA4( var_0.origin, 40, 160 );
        var_6.victim = var_0;

        if ( isdefined( var_1 ) && var_0 != var_1 )
        {
            var_6.attacker = var_1;
            continue;
        }

        var_6.attacker = undefined;
    }
}

_id_BDA2()
{
    level endon( "game_ended" );
    self endon( "reset" );
    self endon( "reused" );
    self endon( "deleted" );

    for (;;)
    {
        self.trigger waittill( "trigger", var_0 );

        if ( !scripts\mp\utility\game::isreallyalive( var_0 ) )
            continue;

        if ( var_0 scripts\mp\utility\game::isusingremote() || isdefined( var_0._id_108DB ) )
            continue;

        if ( isdefined( var_0.classname ) && var_0.classname == "script_vehicle" )
            continue;

        thread _id_C5BB( var_0 );
        return;
    }
}

_id_BD7C( var_0 )
{
    var_1[0] = spawn( "script_model", ( 0, 0, 0 ) );
    var_1[0] setmodel( "dogtags_iw7_foe" );
    var_2 = spawn( "trigger_radius", ( 0, 0, 0 ), 0, 32, 32 );
    var_2._id_0336 = "trigger_dogtag";
    var_2 hide();
    level._id_BD82[var_0] = spawnstruct();
    var_3 = level._id_BD82[var_0];
    var_3.type = "useObject";
    var_3.curorigin = var_2.origin;
    var_3.entnum = var_2 getentitynumber();
    var_3.trigger = var_2;
    var_3._id_127CB = "proximity";
    var_3 scripts\mp\gameobjects::allowuse( "any" );
    var_1[0]._id_28AC = var_1[0].origin;
    var_3.visuals = var_1;
    var_3._id_C363 = ( 0, 0, 16 );
    var_3._id_116BD = 1;
    var_3._id_A924 = 0;
    var_3.visuals[0] scriptmodelplayanim( "mp_dogtag_spin" );
    var_3 thread _id_BDA2();
    return var_3;
}

_id_BD83()
{
    var_0 = undefined;
    var_1 = -1;

    foreach ( var_3 in level._id_BD82 )
    {
        if ( var_3._id_9A52 == "none" )
        {
            var_3._id_A924 = gettime();
            var_3.visuals[0] show();
            return var_3;
        }

        if ( !isdefined( var_0 ) || var_3._id_A924 < var_1 )
        {
            var_1 = var_3._id_A924;
            var_0 = var_3;
        }
    }

    if ( level._id_BD82.size < level._id_BD99 )
    {
        var_5 = _id_BD7C( level._id_BD82.size );

        if ( isdefined( var_5 ) )
        {
            var_5._id_A924 = gettime();
            return var_5;
        }
    }

    var_0._id_A924 = gettime();
    var_0 notify( "reused" );
    playfx( level._id_BD84["vanish"], var_0.curorigin );
    return var_0;
}

_id_BDA4( var_0, var_1, var_2 )
{
    var_3 = _id_BD83();
    var_4 = var_0 + ( 0, 0, 14 );
    var_5 = ( 0, randomfloat( 360 ), 0 );
    var_6 = anglestoforward( var_5 );
    var_7 = randomfloatrange( 40, 160 );
    var_8 = var_4 + var_7 * var_6;
    var_8 = var_8 + ( 0, 0, 40 );
    var_9 = playerphysicstrace( var_4, var_8 );
    var_4 = var_9;
    var_8 = var_4 + ( 0, 0, -100 );
    var_9 = playerphysicstrace( var_4, var_8 );

    if ( var_9[2] != var_8[2] )
        var_9 = var_9 + ( 0, 0, 14 );

    var_3.curorigin = var_9;
    var_3.trigger.origin = var_9;
    var_3.visuals[0].origin = var_9;
    var_3 scripts\mp\gameobjects::_id_987E();
    var_3 scripts\mp\gameobjects::allowuse( "any" );
    var_3 thread _id_BDA2();
    var_3 thread _id_11901();
    return var_3;
}

_id_BDA3( var_0, var_1, var_2, var_3, var_4 )
{
    level notify( "mugger_tag_pile", var_0 );
    var_5 = scripts\mp\objidpoolmanager::requestminimapid( 99 );

    if ( var_5 != -1 )
    {
        scripts\mp\objidpoolmanager::minimap_objective_add( var_5, "active", var_0 );
        scripts\mp\objidpoolmanager::minimap_objective_icon( var_5, "waypoint_dogtag_pile" );
    }

    level scripts\engine\utility::delaythread( 5, ::_id_BDA0, var_5 );

    if ( var_2 >= 10 )
    {
        level._id_BD98 = gettime();
        level._id_BD8E = 0;

        foreach ( var_7 in level.players )
        {
            var_7 playsoundtoplayer( "mp_defcon_one", var_7 );

            if ( isdefined( var_3 ) && var_7 == var_3 )
                continue;

            if ( isdefined( var_4 ) && var_7 == var_4 )
                continue;

            var_7 thread scripts\mp\hud_message::showsplash( var_1, var_2 );
        }

        var_9 = newhudelem();
        var_9 setshader( "waypoint_dogtag_pile", 10, 10 );
        var_9 setwaypoint( 0, 1, 0, 0 );
        var_9.x = var_0[0];
        var_9.y = var_0[1];
        var_9.z = var_0[2] + 32;
        var_9.alpha = 1;
        var_9 fadeovertime( 5 );
        var_9.alpha = 0;
        var_9 scripts\engine\utility::delaythread( 5, ::_id_917D );
    }
}

_id_917D()
{
    if ( isdefined( self ) )
        self destroy();
}

_id_BD9C()
{
    level endon( "game_ended" );

    for (;;)
    {
        var_0 = getentarray( "remote_tank", "targetname" );
        var_1 = getentarray( "trigger_dogtag", "targetname" );

        foreach ( var_3 in level.players )
        {
            if ( isdefined( var_3._id_13106 ) && var_3._id_13106 == 1 )
            {
                foreach ( var_5 in var_0 )
                {
                    if ( isdefined( var_5 ) && isdefined( var_5.owner ) && var_5.owner == var_3 )
                    {
                        foreach ( var_7 in var_1 )
                        {
                            if ( isdefined( var_7 ) && isdefined( var_7._id_58BD ) )
                            {
                                if ( isdefined( var_7._id_58BD._id_9A52 ) && var_7._id_58BD._id_9A52 != "none" )
                                {
                                    if ( var_5 istouching( var_7 ) )
                                        var_7._id_58BD _id_C5BB( var_5.owner );
                                }
                            }
                        }
                    }
                }
            }
        }

        wait 0.2;
    }
}

_id_BD9B()
{
    level endon( "game_ended" );

    for (;;)
    {
        var_0 = getentarray( "trigger_dogtag", "targetname" );

        foreach ( var_2 in level.players )
        {
            if ( isdefined( var_2 ) && isdefined( var_2._id_DF8A ) )
            {
                foreach ( var_4 in var_0 )
                {
                    if ( isdefined( var_4 ) && isdefined( var_4._id_58BD ) )
                    {
                        if ( isdefined( var_4._id_58BD._id_9A52 ) && var_4._id_58BD._id_9A52 != "none" )
                        {
                            if ( var_2._id_DF8A istouching( var_4 ) )
                                var_4._id_58BD _id_C5BB( var_2 );
                        }
                    }
                }
            }
        }

        wait 0.2;
    }
}

_id_BD7F()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    self notify( "checking_muggernaut" );
    self endon( "checking_muggernaut" );
    wait 2;

    if ( self._id_BDAA.size < level._id_BD9D )
        return;

    var_0 = self._id_BDAA[self._id_BDAA.size - 1];
    var_1 = var_0 - level._id_BD9E;
    var_2 = [];

    foreach ( var_4 in self._id_BDAA )
    {
        if ( var_4 >= var_1 )
            var_2[var_2.size] = var_4;
    }

    if ( var_2.size >= level._id_BD9D )
    {
        thread scripts\mp\utility\game::_id_83B4( "muggernaut" );
        _id_BD7E( 1, 1 );
        self._id_BDAA = [];
    }
    else
        self._id_BDAA = var_2;
}

_id_BDA0( var_0 )
{
    scripts\mp\objidpoolmanager::returnminimapid( var_0 );
}

_id_12D9( var_0 )
{
    self hide();

    foreach ( var_2 in level.players )
    {
        if ( var_2 != var_0 )
            self _meth_8388( var_2 );
    }
}

_id_C5BB( var_0 )
{
    if ( isdefined( var_0.owner ) )
        var_0 = var_0.owner;

    if ( self._id_116BD )
        self.trigger playsound( "mp_killconfirm_tags_deny" );
    else if ( isdefined( self.attacker ) && var_0 == self.attacker )
    {
        self.trigger playsound( "mp_killconfirm_tags_pickup" );
        var_0 scripts\mp\utility\game::incperstat( "confirmed", 1 );
        var_0 scripts\mp\persistence::statsetchild( "round", "confirmed", var_0.pers["confirmed"] );
    }
    else
    {
        self.trigger playsound( "mp_killconfirm_tags_deny" );
        var_0 scripts\mp\utility\game::incperstat( "denied", 1 );
        var_0 scripts\mp\persistence::statsetchild( "round", "denied", var_0.pers["denied"] );
    }

    var_0 thread _id_C566();
    _id_E277( 1 );
}

_id_C566()
{
    level endon( "game_ended" );
    self endon( "disconnect" );

    while ( !isdefined( self.pers ) )
        wait 0.05;

    thread _id_BD80();
}

_id_BD80()
{
    self notify( "banking" );
    self endon( "banking" );
    level endon( "banking_all" );
    self._id_1141D++;
    self._id_0150 = self._id_1141D;

    if ( isplayer( self ) && !isbot( self ) )
    {
        self._id_58C5 setvalue( self._id_1141D );
        self._id_58C5 thread scripts\mp\hud::fontpulse( self );
    }

    wait 1.5;
    var_0 = level._id_BD7D - self._id_1141D;

    if ( var_0 > 0 && var_0 <= 5 )
    {
        var_1 = undefined;

        switch ( var_0 )
        {
            case 1:
                var_1 = "mugger_1more";
                break;
            case 2:
                var_1 = "mugger_2more";
                break;
            case 3:
                var_1 = "mugger_3more";
                break;
            case 4:
                var_1 = "mugger_4more";
                break;
            case 5:
                var_1 = "mugger_5more";
                break;
        }

        if ( isdefined( var_1 ) )
            self playsoundtoplayer( var_1, self );
    }

    wait 0.5;
    _id_BD7E( 0 );
}

_id_BD7E( var_0, var_1 )
{
    var_2 = 0;

    if ( var_0 == 1 )
        var_2 = self._id_1141D;
    else
    {
        var_3 = self._id_1141D % level._id_BD7D;
        var_2 = self._id_1141D - var_3;
    }

    if ( var_2 > 0 )
    {
        self._id_11421 = var_2;

        if ( !isdefined( var_1 ) )
            thread scripts\mp\hud_message::showsplash( "callout_tags_banked", var_2 );

        thread scripts\mp\utility\game::_id_83B4( "tags_banked", undefined, self._id_11421 * scripts\mp\rank::getscoreinfovalue( "kill_confirmed" ) );
        self._id_11A2F = self._id_11A2F + var_2;
        self._id_1141D = self._id_1141D - var_2;
        self._id_0150 = self._id_1141D;

        if ( isplayer( self ) && !isbot( self ) )
        {
            self._id_58C5 setvalue( self._id_1141D );
            self._id_58C5 thread scripts\mp\hud::fontpulse( self );
        }

        self.assists = self._id_11A2F;
        self.pers["assists"] = self._id_11A2F;
    }
}

onplayerscore( var_0, var_1 )
{
    if ( var_0 == "tags_banked" && isdefined( var_1 ) && isdefined( var_1._id_11421 ) && var_1._id_11421 > 0 )
    {
        var_2 = var_1._id_11421 * scripts\mp\rank::getscoreinfovalue( "kill_confirmed" );
        var_1._id_11421 = 0;
        return var_2;
    }

    return 0;
}

_id_E277( var_0 )
{
    if ( !var_0 )
        level notify( "mugger_jackpot_increment" );

    self.attacker = undefined;
    self notify( "reset" );
    self.visuals[0] hide();
    self.curorigin = ( 0, 0, 1000 );
    self.trigger.origin = ( 0, 0, 1000 );
    self.visuals[0].origin = ( 0, 0, 1000 );
    scripts\mp\gameobjects::allowuse( "none" );

    if ( isdefined( self._id_A428 ) && self._id_A428 == 1 )
        level._id_BD92--;

    if ( !self._id_116BD )
        scripts\mp\objidpoolmanager::minimap_objective_state( self._id_C2B5, "invisible" );
}

_id_11901()
{
    level endon( "game_ended" );
    self endon( "death" );
    self endon( "deleted" );
    self endon( "reset" );
    self endon( "reused" );
    self notify( "timeout_start" );
    self endon( "timeout_start" );
    level scripts\mp\hostmigration::waitlongdurationwithhostmigrationpause( 27.0 );

    for ( var_0 = 3.0; var_0 > 0.0; var_0 = var_0 - 0.5 )
    {
        self.visuals[0] hide();
        wait 0.25;
        self.visuals[0] show();
        wait 0.25;
    }

    playfx( level._id_BD84["vanish"], self.curorigin );
    thread _id_E277( 0 );
}

_id_41C9( var_0 )
{
    level endon( "game_ended" );
    var_1 = var_0.guid;
    var_0 waittill( "disconnect" );

    if ( isdefined( level.dogtags[var_1] ) )
    {
        level.dogtags[var_1] scripts\mp\gameobjects::allowuse( "none" );
        playfx( level._id_BD84["vanish"], level.dogtags[var_1].curorigin );
        level.dogtags[var_1] notify( "reset" );
        wait 0.05;

        if ( isdefined( level.dogtags[var_1] ) )
        {
            scripts\mp\objidpoolmanager::returnminimapid( level.dogtags[var_1]._id_C2B5 );
            level.dogtags[var_1].trigger delete();

            for ( var_2 = 0; var_2 < level.dogtags[var_1].visuals.size; var_2++ )
                level.dogtags[var_1].visuals[var_2] delete();

            level.dogtags[var_1] notify( "deleted" );
            level.dogtags[var_1] = undefined;
        }
    }
}

ontimelimit()
{
    level notify( "banking_all" );

    foreach ( var_1 in level.players )
        var_1 _id_BD7E( 1 );

    wait 0.1;
    scripts\mp\gamelogic::_id_500A();
}

_id_BD97()
{
    level endon( "game_ended" );
    level endon( "jackpot_stop" );

    if ( level._id_BD8D <= 0 )
        return;

    level._id_BD8E = 0;
    level._id_BD93 = 0;
    level._id_BD8E = 0;
    level thread _id_BD95();

    for (;;)
    {
        level waittill( "mugger_jackpot_increment" );
        var_0 = 1;

        if ( var_0 )
        {
            level._id_BD8E++;
            var_1 = clamp( float( level._id_BD8E / level._id_BD8D ), 0.0, 1.0 );

            if ( level._id_BD8E >= level._id_BD8D )
            {
                if ( isdefined( level._id_BD94 ) )
                    level._id_BD94 thread scripts\mp\hud::fontpulse( level.players[0] );

                level._id_BD8E = 15 + randomintrange( 0, 3 ) * 5;
                level thread _id_BD8A();
                break;
            }
        }
    }
}

_id_BD95()
{
    level endon( "game_ended" );
    level endon( "jackpot_stop" );
    scripts\mp\utility\game::_id_7670( "prematch_done" );

    for (;;)
    {
        wait( level._id_BD96 );
        level notify( "mugger_jackpot_increment" );
    }
}

_id_BD8A()
{
    level endon( "game_ended" );
    level notify( "reset_airdrop" );
    level endon( "reset_airdrop" );
    var_0 = level._id_BD81[level.script][randomint( level._id_BD81[level.script].size )];
    var_0 = var_0 + ( randomintrange( -50, 50 ), randomintrange( -50, 50 ), 0 );

    for (;;)
    {
        var_1 = level.players[0];
        var_2 = 1;

        if ( isdefined( var_1 ) && scripts\mp\utility\game::_id_4BD7() < scripts\mp\utility\game::_id_B4D2() && level._id_6BAA + var_2 < scripts\mp\utility\game::_id_B4D2() && level._id_C223 < 8 )
        {
            foreach ( var_4 in level.players )
                var_4 thread scripts\mp\hud_message::showsplash( "mugger_jackpot_incoming" );

            scripts\mp\utility\game::_id_93FA();
            level thread scripts\mp\killstreaks\airdrop::_id_5857( var_1, var_0, randomfloat( 360 ), "airdrop_mugger", 0, "airdrop_jackpot" );
            break;
        }
        else
        {
            wait 0.5;
            continue;
        }
    }

    level._id_BD93 = level._id_BD8E;
    level thread _id_BD91( var_0 );
}

_id_BD8F( var_0, var_1, var_2 )
{
    if ( !isdefined( level._id_A42C ) )
    {
        level._id_A42C = scripts\mp\objidpoolmanager::requestminimapid( 99 );

        if ( level._id_A42C != -1 )
        {
            scripts\mp\objidpoolmanager::minimap_objective_add( level._id_A42C, "active", var_0 );
            scripts\mp\objidpoolmanager::minimap_objective_icon( level._id_A42C, "waypoint_jackpot" );
        }
    }
    else if ( level._id_A42C != -1 )
        scripts\mp\objidpoolmanager::minimap_objective_position( level._id_A42C, var_0 );

    if ( var_2 >= 10 )
    {
        foreach ( var_4 in level.players )
            var_4 playlocalsound( game["music"]["victory_" + var_4.pers["team"]] );

        if ( !isdefined( level._id_A42B ) )
        {
            level._id_A42B = newhudelem();
            level._id_A42B setshader( "waypoint_jackpot", 64, 64 );
            level._id_A42B setwaypoint( 0, 1, 0, 0 );
        }

        level._id_A42B.x = var_0[0];
        level._id_A42B.y = var_0[1];
        level._id_A42B.z = var_0[2] + 12;
        level._id_A42B.alpha = 0.75;
    }
}

_id_BD90()
{
    if ( level._id_A42C != -1 )
        scripts\mp\objidpoolmanager::minimap_objective_state( level._id_A42C, "invisible" );

    level._id_A42B fadeovertime( 2 );
    level._id_A42B.alpha = 0;
    level._id_A42B scripts\engine\utility::delaythread( 2, ::_id_917D );
}

_id_BD8B( var_0 )
{
    _id_BD8C();
    var_1 = var_0 + ( 0, 0, 30 );
    var_2 = var_0 + ( 0, 0, -1000 );
    var_3 = bullettrace( var_1, var_2, 0, undefined );
    level._id_A42A.origin = var_3["position"] + ( 0, 0, 1 );
    level._id_A42A show();
    var_4 = vectortoangles( var_3["normal"] );
    var_5 = anglestoforward( var_4 );
    var_6 = anglestoright( var_4 );
    thread _id_108CD( var_3["position"], var_5, var_6, 0.5 );
    wait 0.1;
    playfxontag( level._id_BD84["smoke"], level._id_A42A, "tag_fx" );

    foreach ( var_8 in level.players )
        var_8._id_BD85 = 1;

    level._id_A42A._id_BD85 = 1;
}

_id_BD8C()
{
    stopfxontag( level._id_BD84["smoke"], level._id_A42A, "tag_fx" );
    level._id_A42A hide();

    if ( isdefined( level._id_A429 ) )
        level._id_A429 delete();

    if ( level._id_A42A._id_BD85 )
    {
        level._id_A42A._id_BD85 = 0;
        stopfxontag( level._id_BD84["smoke"], level._id_A42A, "tag_fx" );
        wait 0.05;
    }
}

_id_108CD( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( level._id_A429 ) )
        level._id_A429 delete();

    wait( var_3 );
    level._id_A429 = spawnfx( level._id_BDA5, var_0, var_1, var_2 );
    triggerfx( level._id_A429 );
}

_id_1370C()
{
    level endon( "game_ended" );
    self endon( "disconnect" );
    scripts\mp\utility\game::_id_7670( "prematch_done" );
    wait 0.5;

    if ( level._id_A42A._id_BD85 == 1 && !isdefined( self._id_BD85 ) )
    {
        playfxontagforclients( level._id_BD84["smoke"], level._id_A42A, "tag_fx", self );
        self._id_BD85 = 1;
    }
}

_id_BD91( var_0 )
{
    level endon( "game_ended" );
    level endon( "jackpot_timeout" );
    level notify( "jackpot_stop" );
    _id_BD8F( var_0, "mugger_jackpot", level._id_BD93 );
    level thread _id_BD8B( var_0 );
    level thread _id_BD88( 30 );
    level waittill( "airdrop_jackpot_landed", var_0 );

    if ( level._id_A42C != -1 )
        scripts\mp\objidpoolmanager::minimap_objective_position( level._id_A42C, var_0 );

    level._id_A42B.x = var_0[0];
    level._id_A42B.y = var_0[1];
    level._id_A42B.z = var_0[2] + 32;

    foreach ( var_2 in level.players )
    {
        var_2 playsoundtoplayer( "mp_defcon_one", var_2 );
        var_2 thread scripts\mp\hud_message::showsplash( "mugger_jackpot", level._id_BD93 );
    }

    level._id_BD92 = 0;

    while ( level._id_BD93 > 0 )
    {
        if ( level._id_BD92 < 10 )
        {
            level._id_BD93--;
            var_4 = _id_BDA4( var_0, 0, 400 );
            var_4._id_A428 = 1;
            level._id_BD92++;
            level thread _id_BD88( 90 );
            wait 0.1;
            continue;
        }

        wait 0.5;
    }

    level._id_BD8E = 0;

    while ( level._id_BD92 > 0 )
        wait 1;

    _id_BD89();
}

_id_BD89()
{
    level notify( "jackpot_cleanup" );
    _id_BD90();
    _id_BD8C();
    level thread _id_BD97();
}

_id_BD88( var_0 )
{
    level endon( "jackpot_cleanup" );
    level notify( "jackpot_abort_after_time" );
    level endon( "jackpot_abort_after_time" );
    wait( var_0 );
    level notify( "jackpot_timeout" );
}

_id_49F2( var_0, var_1 )
{
    scripts\mp\killstreaks\airdrop::addcratetype( "airdrop_mugger", "airdrop_jackpot", 1, ::_id_BDA8 );
}

_id_BDA8( var_0 )
{
    self endon( "death" );
    level notify( "airdrop_jackpot_landed", self.origin );
    wait 0.5;
    scripts\mp\killstreaks\airdrop::_id_51AA();
}

_id_49A7()
{
    level._id_BD81 = [];
    var_0 = undefined;

    if ( isdefined( var_0 ) && var_0.size )
    {
        var_1 = 0;

        foreach ( var_3 in var_0 )
        {
            level._id_BD81[level.script][var_1] = var_3.origin;
            var_1++;
        }
    }
    else
    {
        level._id_BD81["mp_seatown"][0] = ( -665, -209, 226 );
        level._id_BD81["mp_seatown"][1] = ( -2225, 1573, 260 );
        level._id_BD81["mp_seatown"][2] = ( 1275, -747, 292 );
        level._id_BD81["mp_seatown"][3] = ( 1210, 963, 225 );
        level._id_BD81["mp_seatown"][4] = ( -2343, -811, 226 );
        level._id_BD81["mp_seatown"][5] = ( -1125, -1610, 184 );
        level._id_BD81["mp_dome"][0] = ( 649, 1096, -250 );
        level._id_BD81["mp_dome"][1] = ( 953, -501, -328 );
        level._id_BD81["mp_dome"][2] = ( -37, 2099, -231 );
        level._id_BD81["mp_dome"][3] = ( -716, 1100, -296 );
        level._id_BD81["mp_dome"][4] = ( -683, -51, -352 );
        level._id_BD81["mp_plaza2"][0] = ( 266, -212, 708 );
        level._id_BD81["mp_plaza2"][1] = ( 295, 1842, 668 );
        level._id_BD81["mp_plaza2"][2] = ( -1449, 1833, 692 );
        level._id_BD81["mp_plaza2"][3] = ( 835, -1815, 668 );
        level._id_BD81["mp_plaza2"][4] = ( -1116, 76, 729 );
        level._id_BD81["mp_plaza2"][5] = ( -399, 951, 676 );
        level._id_BD81["mp_mogadishu"][0] = ( 552, 1315, 8 );
        level._id_BD81["mp_mogadishu"][1] = ( 990, 3248, 144 );
        level._id_BD81["mp_mogadishu"][2] = ( -879, 2643, 135 );
        level._id_BD81["mp_mogadishu"][3] = ( -68, -995, 16 );
        level._id_BD81["mp_mogadishu"][4] = ( 1499, -1206, 15 );
        level._id_BD81["mp_mogadishu"][5] = ( 2387, 1786, 61 );
        level._id_BD81["mp_paris"][0] = ( -150, -80, 63 );
        level._id_BD81["mp_paris"][1] = ( -947, -1088, 107 );
        level._id_BD81["mp_paris"][2] = ( 1052, -614, 50 );
        level._id_BD81["mp_paris"][3] = ( 1886, 648, 24 );
        level._id_BD81["mp_paris"][4] = ( 628, 2096, 30 );
        level._id_BD81["mp_paris"][5] = ( -2033, 1082, 308 );
        level._id_BD81["mp_paris"][6] = ( -1230, 1836, 295 );
        level._id_BD81["mp_exchange"][0] = ( 904, 441, -77 );
        level._id_BD81["mp_exchange"][1] = ( -1056, 1435, 141 );
        level._id_BD81["mp_exchange"][2] = ( 800, 1543, 148 );
        level._id_BD81["mp_exchange"][3] = ( 2423, 1368, 141 );
        level._id_BD81["mp_exchange"][4] = ( 596, -1870, 89 );
        level._id_BD81["mp_exchange"][5] = ( -1241, -821, 30 );
        level._id_BD81["mp_bootleg"][0] = ( -444, -114, -8 );
        level._id_BD81["mp_bootleg"][1] = ( 1053, -1051, -13 );
        level._id_BD81["mp_bootleg"][2] = ( 889, 1184, -28 );
        level._id_BD81["mp_bootleg"][3] = ( -994, 1877, -41 );
        level._id_BD81["mp_bootleg"][4] = ( -1707, -1333, 63 );
        level._id_BD81["mp_bootleg"][5] = ( -334, -2155, 61 );
        level._id_BD81["mp_carbon"][0] = ( -1791, -3892, 3813 );
        level._id_BD81["mp_carbon"][1] = ( -338, -4978, 3964 );
        level._id_BD81["mp_carbon"][2] = ( -82, -2941, 3990 );
        level._id_BD81["mp_carbon"][3] = ( -3198, -2829, 3809 );
        level._id_BD81["mp_carbon"][4] = ( -3673, -3893, 3610 );
        level._id_BD81["mp_carbon"][5] = ( -2986, -4863, 3648 );
        level._id_BD81["mp_hardhat"][0] = ( 1187, -322, 238 );
        level._id_BD81["mp_hardhat"][1] = ( 2010, -1379, 357 );
        level._id_BD81["mp_hardhat"][2] = ( 1615, 1245, 366 );
        level._id_BD81["mp_hardhat"][3] = ( -371, 825, 436 );
        level._id_BD81["mp_hardhat"][4] = ( -820, -927, 348 );
        level._id_BD81["mp_alpha"][0] = ( -239, 1315, 52 );
        level._id_BD81["mp_alpha"][1] = ( -1678, -219, 55 );
        level._id_BD81["mp_alpha"][2] = ( 235, -369, 60 );
        level._id_BD81["mp_alpha"][3] = ( -201, 2138, 60 );
        level._id_BD81["mp_alpha"][4] = ( -1903, 2433, 198 );
        level._id_BD81["mp_village"][0] = ( 990, -821, 331 );
        level._id_BD81["mp_village"][1] = ( 658, 2155, 337 );
        level._id_BD81["mp_village"][2] = ( -559, 1882, 310 );
        level._id_BD81["mp_village"][3] = ( -1999, 1184, 343 );
        level._id_BD81["mp_village"][4] = ( 215, -2875, 384 );
        level._id_BD81["mp_village"][5] = ( 1731, -483, 290 );
        level._id_BD81["mp_lambeth"][0] = ( 712, 217, -196 );
        level._id_BD81["mp_lambeth"][1] = ( 1719, -1095, -196 );
        level._id_BD81["mp_lambeth"][2] = ( 2843, 1034, -269 );
        level._id_BD81["mp_lambeth"][3] = ( 1251, 2645, -213 );
        level._id_BD81["mp_lambeth"][4] = ( -1114, 1301, -200 );
        level._id_BD81["mp_lambeth"][5] = ( -693, -823, -132 );
        level._id_BD81["mp_radar"][0] = ( -5052, 2371, 1223 );
        level._id_BD81["mp_radar"][1] = ( -4550, 4199, 1268 );
        level._id_BD81["mp_radar"][2] = ( -7149, 4449, 1376 );
        level._id_BD81["mp_radar"][3] = ( -6350, 1528, 1302 );
        level._id_BD81["mp_radar"][4] = ( -3333, 992, 1222 );
        level._id_BD81["mp_radar"][5] = ( -4040, -361, 1222 );
        level._id_BD81["mp_interchange"][0] = ( 662, -513, 142 );
        level._id_BD81["mp_interchange"][1] = ( 674, 1724, 112 );
        level._id_BD81["mp_interchange"][2] = ( -1003, 1103, 30 );
        level._id_BD81["mp_interchange"][3] = ( 385, -2910, 209 );
        level._id_BD81["mp_interchange"][4] = ( 2004, -1760, 144 );
        level._id_BD81["mp_interchange"][5] = ( 2458, -300, 147 );
        level._id_BD81["mp_underground"][0] = ( 31, 1319, -196 );
        level._id_BD81["mp_underground"][1] = ( 165, -940, 60 );
        level._id_BD81["mp_underground"][2] = ( -747, 143, 4 );
        level._id_BD81["mp_underground"][3] = ( -1671, 1666, -216 );
        level._id_BD81["mp_underground"][4] = ( -631, 3158, -68 );
        level._id_BD81["mp_underground"][5] = ( 500, 2865, -89 );
        level._id_BD81["mp_bravo"][0] = ( -39, -119, 1280 );
        level._id_BD81["mp_bravo"][1] = ( 1861, -563, 1229 );
        level._id_BD81["mp_bravo"][2] = ( -1548, -366, 1007 );
        level._id_BD81["mp_bravo"][3] = ( -678, 1272, 1273 );
        level._id_BD81["mp_bravo"][4] = ( 1438, 842, 1272 );
    }
}
