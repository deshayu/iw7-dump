// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    if ( getdvar( "mapname" ) == "mp_background" )
        return;

    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( level.gametype, 3, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( level.gametype, 5 );
        scripts\mp\utility\game::registerscorelimitdvar( level.gametype, 1 );
        scripts\mp\utility\game::registerroundlimitdvar( level.gametype, 0 );
        scripts\mp\utility\game::registerwinlimitdvar( level.gametype, 4 );
        scripts\mp\utility\game::registernumlivesdvar( level.gametype, 1 );
        scripts\mp\utility\game::registerhalftimedvar( level.gametype, 0 );
        scripts\mp\utility\game::_id_DF18( level.gametype, 1 );
        scripts\mp\utility\game::_id_DF19( level.gametype, 4 );
        level.matchrules_damagemultiplier = 0;
        level.matchrules_vampirism = 0;
    }

    updategametypedvars();
    level.objectivebased = 1;
    level.teambased = 1;
    level.nobuddyspawns = 1;
    level._id_7672 = 0;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level.onspawnplayer = ::onspawnplayer;
    level._id_C577 = ::_id_C577;
    level._id_C4E8 = ::_id_C4E8;
    level._id_C564 = ::_id_C564;
    level.ontimelimit = ::ontimelimit;
    level._id_A94F = gettime();
    level._id_1C2C = 0;
    level._id_26FA = 0;
    level._id_1C9A = 0;
    level._id_7688 = 0;
    level._id_E8E1 = "none";
    level._id_101D7 = [];

    if ( level.matchrules_damagemultiplier || level.matchrules_vampirism )
        level.modifyplayerdamage = scripts\mp\damage::gamemodemodifyplayerdamage;

    game["dialog"]["gametype"] = "reinforce";

    if ( getdvarint( "g_hardcore" ) )
        game["dialog"]["gametype"] = "hc_" + game["dialog"]["gametype"];
    else if ( getdvarint( "camera_thirdPerson" ) )
        game["dialog"]["gametype"] = "thirdp_" + game["dialog"]["gametype"];
    else if ( getdvarint( "scr_diehard" ) )
        game["dialog"]["gametype"] = "dh_" + game["dialog"]["gametype"];
    else if ( getdvarint( "scr_" + level.gametype + "_promode" ) )
        game["dialog"]["gametype"] = game["dialog"]["gametype"] + "_pro";

    game["dialog"]["offense_obj"] = "capture_objs";
    game["dialog"]["defense_obj"] = "capture_objs";
    game["dialog"]["revived"] = "sr_rev";
    game["dialog"]["enemy_captured_2"] = "enemy_captured_2";
    game["dialog"]["friendly_captured_2"] = "friendly_captured_2";
    game["dialog"]["lastalive_zones"] = "lastalive_zones";
    setomnvar( "ui_allies_alive", 0 );
    setomnvar( "ui_axis_alive", 0 );
    thread _id_C56E();
    thread _id_C57C();
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchdata();
    setdynamicdvar( "scr_siege_rushTimer", getmatchrulesdata( "siegeData", "rushTimer" ) );
    setdynamicdvar( "scr_siege_rushTimerAmount", getmatchrulesdata( "siegeData", "rushTimerAmount" ) );
    setdynamicdvar( "scr_siege_sharedRushTimer", getmatchrulesdata( "siegeData", "sharedRushTimer" ) );
    setdynamicdvar( "scr_siege_preCapPoints", getmatchrulesdata( "siegeData", "preCapPoints" ) );
    setdynamicdvar( "scr_siege_capRate", getmatchrulesdata( "siegeData", "capRate" ) );
    setdynamicdvar( "scr_siege_halftime", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "siege", 0 );
    setdynamicdvar( "scr_siege_promode", 0 );
}

seticonnames()
{
    level.iconneutral = "waypoint_captureneutral";
    level.iconcapture = "waypoint_capture";
    level.icondefend = "waypoint_defend";
    level.iconcontested = "waypoint_contested";
    level.icontaking = "waypoint_taking";
    level.iconlosing = "waypoint_losing";
}

onstartgametype()
{
    seticonnames();

    if ( !isdefined( game["switchedsides"] ) )
        game["switchedsides"] = 0;

    if ( game["switchedsides"] )
    {
        var_0 = game["attackers"];
        var_1 = game["defenders"];
        game["attackers"] = var_1;
        game["defenders"] = var_0;
    }

    scripts\mp\utility\game::setobjectivetext( "allies", &"OBJECTIVES_DOM" );
    scripts\mp\utility\game::setobjectivetext( "axis", &"OBJECTIVES_DOM" );

    if ( level._id_10A56 )
    {
        scripts\mp\utility\game::setobjectivescoretext( "allies", &"OBJECTIVES_DOM" );
        scripts\mp\utility\game::setobjectivescoretext( "axis", &"OBJECTIVES_DOM" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( "allies", &"OBJECTIVES_DOM_SCORE" );
        scripts\mp\utility\game::setobjectivescoretext( "axis", &"OBJECTIVES_DOM_SCORE" );
    }

    scripts\mp\utility\game::setobjectivehinttext( "allies", &"OBJECTIVES_DOM_HINT" );
    scripts\mp\utility\game::setobjectivehinttext( "axis", &"OBJECTIVES_DOM_HINT" );
    _id_98CE();
    var_2[0] = "dom";
    scripts\mp\gameobjects::main( var_2 );
    thread _id_5913();
    thread _id_13A27();
    thread _id_13A87();
    thread _id_13A88();
    thread _id_E0F2();
    thread _id_CC13();
}

updategametypedvars()
{
    scripts\mp\gametypes\common::updategametypedvars();
    level._id_E8DF = scripts\mp\utility\game::_id_5F6D( "rushTimer", 1, 0, 1 );
    level._id_E8E0 = scripts\mp\utility\game::_id_5F6B( "rushTimerAmount", 45.0, 30.0, 120 );
    level._id_FC5F = scripts\mp\utility\game::_id_5F6B( "sharedRushTimer", 0, 0, 1 );
    level._id_D814 = scripts\mp\utility\game::_id_5F6D( "preCapPoints", 0, 0, 1 );
    level._id_3A00 = scripts\mp\utility\game::_id_5F6B( "capRate", 7.5, 1, 10 );
}

_id_98CE()
{
    scripts\mp\spawnlogic::_id_F62D( "Domination" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "mp_dom_spawn_allies_start" );
    scripts\mp\spawnlogic::addstartspawnpoints( "mp_dom_spawn_axis_start" );
    scripts\mp\spawnlogic::addspawnpoints( "allies", "mp_dom_spawn" );
    scripts\mp\spawnlogic::addspawnpoints( "axis", "mp_dom_spawn" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

getspawnpoint()
{
    var_0 = self.pers["team"];
    var_1 = scripts\mp\utility\game::_id_8027( var_0 );

    if ( level._id_130DD )
    {
        if ( game["switchedsides"] )
        {
            var_2 = scripts\mp\spawnlogic::getspawnpointarray( "mp_dom_spawn_" + var_1 + "_start" );
            var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
        }
        else
        {
            var_2 = scripts\mp\spawnlogic::getspawnpointarray( "mp_dom_spawn_" + var_0 + "_start" );
            var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
        }
    }
    else
    {
        var_4 = _id_81A7( var_0 );
        var_5 = scripts\mp\utility\game::_id_8027( var_0 );
        var_6 = _id_81A7( var_5 );
        var_7 = _id_8056( var_4, var_6 );
        var_2 = scripts\mp\spawnlogic::getteamspawnpoints( var_0 );
        var_8 = [];
        var_8["preferredDomPoints"] = var_7;
        var_3 = scripts\mp\spawnscoring::getspawnpoint( var_2, undefined, var_8 );
    }

    return var_3;
}

_id_81A7( var_0 )
{
    var_1 = [];

    foreach ( var_3 in level._id_5913 )
    {
        if ( var_3._id_C83E == var_0 )
            var_1[var_1.size] = var_3;
    }

    return var_1;
}

_id_8056( var_0, var_1 )
{
    var_2 = [];
    var_2[0] = 0;
    var_2[1] = 0;
    var_2[2] = 0;
    var_3 = self.pers["team"];

    if ( var_0.size == level._id_5913.size )
    {
        var_4 = var_3;
        var_5 = level._id_2A99[var_3];
        var_2[var_5._id_130AC._id_5922] = 1;
        return var_2;
    }

    if ( var_0.size > 0 )
    {
        foreach ( var_7 in var_0 )
            var_2[var_7._id_5922] = 1;

        return var_2;
    }

    if ( var_0.size == 0 )
    {
        var_4 = var_3;
        var_5 = level._id_2A99[var_4];

        if ( var_1.size > 0 && var_1.size < level._id_5913.size )
        {
            var_5 = _id_81EF( var_4, undefined );
            level._id_2A99[var_4] = var_5;
        }

        var_2[var_5._id_130AC._id_5922] = 1;
        return var_2;
    }

    return var_2;
}

_id_81CF( var_0 )
{
    return gettime() - var_0._id_3A40;
}

_id_C56E()
{
    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0._id_11E8 = [];
        var_0._id_11E9 = [];
        var_0._id_12B1D = undefined;
        var_0._id_12B1E = undefined;
        var_0 thread onplayerspawned();
        var_0 thread scripts\mp\gametypes\obj_dom::_id_C4F5();
        var_0._id_101D9 = 1;
        var_0 thread _id_C574();
    }
}

_id_C574()
{
    for (;;)
    {
        self waittill( "disconnect" );

        foreach ( var_1 in self._id_11E8 )
        {
            if ( isdefined( var_1 ) )
                var_1 delete();
        }

        _id_12E58();
    }
}

onplayerspawned()
{
    self endon( "disconnect" );

    for (;;)
    {
        self waittill( "spawned" );
        scripts\mp\utility\game::setextrascore0( 0 );

        if ( isdefined( self.pers["captures"] ) )
            scripts\mp\utility\game::setextrascore0( self.pers["captures"] );

        scripts\mp\utility\game::_id_F6FB( 0 );

        if ( isdefined( self.pers["rescues"] ) )
            scripts\mp\utility\game::_id_F6FB( self.pers["rescues"] );
    }
}

_id_C57C()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "joined_team", var_0 );

        if ( scripts\mp\utility\game::_id_7672() )
            var_0._id_101D9 = 1;
    }
}

onspawnplayer()
{
    _id_12E58();
    level notify( "spawned_player" );
}

_id_3DE9()
{
    wait 0.05;
    var_0 = 0;

    if ( !level._id_1BE6[game["attackers"]] )
    {
        level._id_10978[game["attackers"]]._id_1C90 = 1;
        var_0 = 1;
    }

    if ( !level._id_1BE6[game["defenders"]] )
    {
        level._id_10978[game["defenders"]]._id_1C90 = 1;
        var_0 = 1;
    }

    if ( var_0 )
        _id_0AF0::_id_12F21();
}

_id_5913()
{
    level endon( "game_ended" );
    level._id_AA1D["allies"] = 0;
    level._id_AA1D["axis"] = 0;
    var_0 = getentarray( "flag_primary", "targetname" );
    var_1 = getentarray( "flag_secondary", "targetname" );

    if ( var_0.size + var_1.size < 2 )
        return;

    level._id_0134 = [];
    var_2 = "mp/siegeFlagPos.csv";
    var_3 = scripts\mp\utility\game::_id_7F8B();
    var_4 = 1;

    for ( var_5 = 2; var_5 < 11; var_5++ )
    {
        var_6 = tablelookup( var_2, var_4, var_3, var_5 );

        if ( var_6 != "" )
            _id_F70E( var_5, float( var_6 ) );
    }

    for ( var_7 = 0; var_7 < var_0.size; var_7++ )
        level._id_0134[level._id_0134.size] = var_0[var_7];

    for ( var_7 = 0; var_7 < var_1.size; var_7++ )
        level._id_0134[level._id_0134.size] = var_1[var_7];

    level._id_5913 = [];

    for ( var_7 = 0; var_7 < level._id_0134.size; var_7++ )
    {
        var_8 = level._id_0134[var_7];
        var_8.origin = _id_7EBA( var_8._id_EDF9, var_8.origin );

        if ( isdefined( var_8._id_0334 ) )
            var_9[0] = getent( var_8._id_0334, "targetname" );
        else
        {
            var_9[0] = spawn( "script_model", var_8.origin );
            var_9[0].angles = var_8.angles;
        }

        var_10 = scripts\mp\gameobjects::createuseobject( "neutral", var_8, var_9, ( 0, 0, 100 ) );
        var_10 scripts\mp\gameobjects::allowuse( "enemy" );
        var_10 scripts\mp\gameobjects::_id_FB08( level._id_3A00 );
        var_10 scripts\mp\gameobjects::_id_FB07( &"MP_SECURING_POSITION" );
        var_11 = var_10 scripts\mp\gameobjects::_id_7F5A();
        var_10._id_01AD = var_11;
        var_10 scripts\mp\gameobjects::_id_F283( "friendly", "waypoint_defend" + var_11 );
        var_10 scripts\mp\gameobjects::_id_F284( "friendly", "waypoint_defend" + var_11 );
        var_10 scripts\mp\gameobjects::_id_F283( "enemy", "waypoint_captureneutral" + var_11 );
        var_10 scripts\mp\gameobjects::_id_F284( "enemy", "waypoint_captureneutral" + var_11 );
        var_10 scripts\mp\gameobjects::_id_FB0E( "any" );
        var_10 scripts\mp\gameobjects::_id_3897( 1 );
        var_10._id_C5BB = ::_id_C5BB;
        var_10._id_C4CB = ::_id_C4CB;
        var_10._id_C5C8 = ::_id_C5C8;
        var_10._id_C50D = ::_id_C50D;
        var_10._id_C4D9 = ::_id_C4D9;
        var_10._id_C5B9 = ::_id_C5B9;
        var_10._id_C18B = 1;
        var_10._id_92B8 = "domFlag";
        var_10._id_6DE3 = 1;
        var_10._id_D8C3 = "neutral";
        var_10._id_6E64 = 0;
        var_10._id_D42A = 0;
        var_10._id_3FF7 = level._id_3A00 * 1000;
        var_12 = var_9[0].origin + ( 0, 0, 32 );
        var_13 = var_9[0].origin + ( 0, 0, -32 );
        var_14 = bullettrace( var_12, var_13, 0, undefined );
        var_15 = scripts\mp\gametypes\obj_dom::checkmapoffsets( var_10._id_01AD );
        var_10._id_289D = var_14["position"] + var_15;
        var_16 = vectortoangles( var_14["normal"] );
        var_17 = scripts\mp\gametypes\obj_dom::checkmapfxangles( var_10._id_01AD, var_16 );
        var_10._id_289C = anglestoforward( var_17 );
        var_18 = spawn( "script_model", var_10._id_289D );
        var_18 setmodel( "dom_flag_scriptable" );
        var_18.angles = generateaxisanglesfromforwardvector( var_10._id_289C, var_18.angles );
        var_10._id_0289 = var_18;
        var_10.vfxnamemod = "";

        if ( var_10.trigger.radius == 160 )
            var_10.vfxnamemod = "_160";
        else if ( var_10.trigger.radius == 90 )
            var_10.vfxnamemod = "_90";

        var_10 scripts\engine\utility::delaythread( 1.0, ::_id_F7AD );
        level._id_0134[var_7]._id_130AC = var_10;
        var_10._id_ABF0 = level._id_0134[var_7];
        level._id_5913[level._id_5913.size] = var_10;
    }

    var_19 = scripts\mp\spawnlogic::getspawnpointarray( "mp_dom_spawn_axis_start" );
    var_20 = scripts\mp\spawnlogic::getspawnpointarray( "mp_dom_spawn_allies_start" );
    level._id_02C5["allies"] = var_20[0].origin;
    level._id_02C5["axis"] = var_19[0].origin;
    level._id_2A99 = [];
    level._id_2A99["allies"] = _id_81EF( "allies", undefined );
    level._id_2A99["axis"] = _id_81EF( "axis", level._id_2A99["allies"] );

    if ( level._id_D814 )
    {
        _id_110AB();
        var_21 = [];
        var_21[var_21.size] = level._id_3BB4;

        if ( game["switchedsides"] )
        {
            level._id_429F = _id_81EF( "axis", level._id_3BB4 );
            var_21[var_21.size] = level._id_429F;
            level._id_42A0 = _id_81EF( "allies", var_21 );
        }
        else
        {
            level._id_429F = _id_81EF( "allies", level._id_3BB4 );
            var_21[var_21.size] = level._id_429F;
            level._id_42A0 = _id_81EF( "axis", var_21 );
        }

        level scripts\engine\utility::delaythread( 1.5, ::precap );
    }

    _id_6E70();
}

precap()
{
    level._id_429F._id_130AC _id_F70C( "allies", "neutral", undefined, 1 );
    level._id_42A0._id_130AC _id_F70C( "axis", "neutral", undefined, 1 );
}

_id_F7AD()
{
    thread scripts\mp\gametypes\obj_dom::_id_5912();
}

_id_F70E( var_0, var_1 )
{
    switch ( var_0 )
    {
        case 2:
            level._id_101BC = var_1;
            break;
        case 3:
            level._id_101BD = var_1;
            break;
        case 4:
            level._id_101BE = var_1;
            break;
        case 5:
            level._id_101C0 = var_1;
            break;
        case 6:
            level._id_101C1 = var_1;
            break;
        case 7:
            level._id_101C2 = var_1;
            break;
        case 8:
            level._id_101C4 = var_1;
            break;
        case 9:
            level._id_101C5 = var_1;
            break;
        case 10:
            level._id_101C6 = var_1;
            break;
    }
}

_id_7EBA( var_0, var_1 )
{
    var_2 = var_1;

    if ( var_0 == "_a" )
    {
        if ( isdefined( level._id_101BC ) && isdefined( level._id_101BD ) && isdefined( level._id_101BE ) )
            var_2 = ( level._id_101BC, level._id_101BD, level._id_101BE );
    }
    else if ( var_0 == "_b" )
    {
        if ( isdefined( level._id_101C0 ) && isdefined( level._id_101C1 ) && isdefined( level._id_101C2 ) )
            var_2 = ( level._id_101C0, level._id_101C1, level._id_101C2 );
    }
    else if ( isdefined( level._id_101C4 ) && isdefined( level._id_101C5 ) && isdefined( level._id_101C6 ) )
        var_2 = ( level._id_101C4, level._id_101C5, level._id_101C6 );

    return var_2;
}

_id_110AB()
{
    var_0 = undefined;

    foreach ( var_2 in level._id_0134 )
    {
        if ( var_2._id_EDF9 == "_b" )
            level._id_3BB4 = var_2;
    }
}

_id_13A27()
{
    level endon( "game_ended" );

    for (;;)
    {
        level waittill( "flag_capturing", var_0 );

        if ( level._id_E8DF )
        {
            var_1 = scripts\mp\utility\game::_id_8027( var_0._id_D8C3 );

            if ( var_0._id_D8C3 != "neutral" && ( isdefined( level._id_101DD ) && level._id_101DD != "pause" ) && !_id_A00C( var_1 ) )
            {
                level._id_7688 = 0;
                level._id_101DD = "pause";
                _id_C9CE();

                if ( !_id_6E69( var_0._id_D8C3 ) )
                    _id_FB20( var_1, var_0._id_D8C3 + "_eliminated" );
            }
        }
    }
}

_id_A00C( var_0 )
{
    var_1 = 0;
    var_2 = _id_7EB9( var_0 );

    if ( var_2 == 2 )
        var_1 = 1;

    return var_1;
}

_id_6E69( var_0 )
{
    var_1 = 0;

    foreach ( var_3 in level._id_C928 )
    {
        if ( isdefined( var_3 ) && var_3.team == var_0 && ( scripts\mp\utility\game::isreallyalive( var_3 ) || var_3.pers["lives"] > 0 ) )
        {
            var_1 = 1;
            break;
        }
    }

    return var_1;
}

_id_C9CE()
{
    if ( !level._id_11920 )
    {
        var_0 = level._id_E8E0;

        if ( isdefined( level._id_101DC ) )
            var_0 = level._id_101DC;

        var_1 = int( gettime() + var_0 * 1000 );
        scripts\mp\gamelogic::_id_C9D6( var_1 );
    }

    level notify( "siege_timer_paused" );
}

_id_E2FE( var_0 )
{
    var_1 = level._id_E8E0;

    if ( level._id_11920 )
    {
        if ( isdefined( level._id_101DC ) )
            var_1 = level._id_101DC;

        var_2 = int( gettime() + var_1 * 1000 );
        setgameendtime( var_2 );
        scripts\mp\gamelogic::_id_E2FF( var_2 );

        if ( !isdefined( level._id_101DD ) || level._id_101DD == "pause" )
            level._id_101DD = "start";

        thread _id_13A89( var_1 );

        if ( scripts\mp\utility\game::istrue( var_0 ) )
        {
            if ( level._id_101D7.size > 0 )
                level notify( "flag_capturing", self );
        }
    }
}

_id_13A26( var_0 )
{
    level endon( "game_ended" );
    var_1 = 0;
    var_2 = 0;
    var_3 = level._id_E8E1;
    var_1 = _id_7EB9( "allies" );
    var_2 = _id_7EB9( "axis" );

    if ( level._id_E8E1 != "none" )
    {
        if ( level._id_FC5F || var_1 == 1 && var_2 == 1 )
        {
            level._id_101DD = "start";
            _id_C16E( "siege_timer_start" );
            _id_E2FE( 1 );
            return;
        }
    }

    if ( var_1 == 2 || var_2 == 2 )
    {
        level._id_E8E1 = scripts\engine\utility::ter_op( var_1 > var_2, "allies", "axis" );

        if ( var_3 != level._id_E8E1 )
        {
            if ( level._id_E8DF )
            {
                if ( isdefined( level._id_101DD ) && level._id_101DD != "reset" )
                {
                    level._id_7688 = 0;
                    level._id_101DC = undefined;
                    level._id_101DD = "reset";
                    _id_C16E( "siege_timer_reset" );
                }

                if ( !isdefined( level._id_101DD ) || level._id_101DD != "start" )
                {
                    var_4 = level._id_E8E0;

                    if ( isdefined( level._id_101DC ) )
                        var_4 = level._id_101DC;

                    var_5 = int( gettime() + var_4 * 1000 );

                    foreach ( var_7 in level.players )
                        var_7 setclientomnvar( "ui_bomb_timer", 0 );

                    level._id_118FA = 1;
                    scripts\mp\gamelogic::_id_C9D6( var_5 );
                    setgameendtime( var_5 );
                    scripts\mp\gamelogic::_id_E2FF( var_5 );

                    if ( !isdefined( level._id_101DD ) || level._id_101DD == "pause" )
                    {
                        level._id_101DD = "start";
                        _id_C16E( "siege_timer_start" );
                    }

                    if ( !level._id_7688 )
                        thread _id_13A89( var_4 );
                }
            }
        }
        else if ( var_3 == level._id_E8E1 && var_1 == 1 || var_3 == level._id_E8E1 && var_2 == 1 )
            _id_E2FE( 1 );
        else
        {
            level._id_7688 = 0;
            level._id_101DC = undefined;
            level._id_101DD = "reset";
            _id_C16E( "siege_timer_reset" );
            _id_E2FE( 1 );
        }
    }
    else if ( var_1 == 3 )
        _id_FB20( "allies", "score_limit_reached" );
    else if ( var_2 == 3 )
        _id_FB20( "axis", "score_limit_reached" );

    self._id_D8C3 = self._id_C83E;
}

_id_13A87()
{
    level endon( "game_ended" );
    level endon( "flag_capturing" );
    var_0 = getdvarfloat( "scr_siege_timelimit" );

    if ( var_0 > 0 )
    {
        var_1 = var_0 * 60 - 1;

        while ( var_1 > 0 )
        {
            var_1 = var_1 - 1;
            wait 1;
        }

        level._id_101D8 = 1;
    }
}

_id_13A88()
{
    level endon( "game_ended" );
    scripts\mp\utility\game::_id_7670( "prematch_done" );

    while ( !_id_8C51() )
        scripts\engine\utility::waitframe();

    level._id_7672 = 1;
}

_id_8C51()
{
    if ( level.teambased )
        return level._id_8C2A["axis"] && level._id_8C2A["allies"];

    return level._id_B4BC > 1;
}

_id_13A89( var_0 )
{
    level endon( "game_ended" );
    level endon( "siege_timer_paused" );
    level endon( "siege_timer_reset" );
    var_1 = var_0;
    var_2 = spawn( "script_origin", ( 0, 0, 0 ) );
    var_2 hide();
    level._id_7688 = 1;

    while ( var_1 > 0 )
    {
        var_1 = var_1 - 1;
        level._id_101DC = var_1;

        if ( var_1 <= 30 )
        {
            if ( var_1 != 0 )
                var_2 playsound( "ui_mp_timer_countdown" );
        }

        wait 1;
    }

    ontimelimit();
}

_id_7EB9( var_0 )
{
    var_1 = 0;

    foreach ( var_3 in level._id_5913 )
    {
        if ( var_3._id_C83E == var_0 && !_id_9D69( var_3 ) )
            var_1 = var_1 + 1;
    }

    return var_1;
}

_id_9D69( var_0 )
{
    var_1 = 0;

    if ( isdefined( var_0 ) )
    {
        if ( level._id_101D7.size > 0 )
        {
            foreach ( var_3 in level._id_101D7 )
            {
                if ( var_0._id_01AD == var_3 )
                    var_1 = 1;
            }
        }
    }

    return var_1;
}

_id_FB20( var_0, var_1 )
{
    foreach ( var_3 in level.players )
    {
        if ( !isai( var_3 ) )
        {
            var_3 setclientomnvar( "ui_objective_state", 0 );
            var_3 setclientomnvar( "ui_bomb_timer", 0 );
        }
    }

    thread scripts\mp\gamelogic::endgame( var_0, game["end_reason"][var_1] );
}

_id_C4CB( var_0 )
{
    var_1 = scripts\mp\gameobjects::_id_803E();
    self._id_54C5 = 0;
    scripts\mp\gameobjects::_id_FB08( level._id_3A00 );
    level._id_101D7[level._id_101D7.size] = self._id_01AD;
    level notify( "flag_capturing", self );
    thread scripts\mp\gameobjects::_id_130AE( var_0.team );
}

_id_C5BB( var_0 )
{
    var_1 = var_0.team;
    var_2 = scripts\mp\gameobjects::_id_803E();
    self._id_3A40 = gettime();
    _id_F70C( var_1, var_2, var_0 );
    level._id_130DD = 0;

    if ( var_2 == "neutral" )
    {
        var_3 = scripts\mp\utility\game::_id_8027( var_1 );
        thread scripts\mp\utility\game::_id_D90B( var_1, var_3, undefined, undefined, "mp_dom_flag_captured", undefined, var_0 );
        var_4 = _id_81AB( var_1 );

        if ( var_4 < level._id_0134.size )
        {
            if ( var_4 == 2 )
            {
                scripts\mp\utility\game::_id_10E60( "friendly_captured_2", var_1 );
                scripts\mp\utility\game::_id_10E60( "enemy_captured_2", var_3, 1 );
            }
            else
            {
                scripts\mp\utility\game::_id_10E60( "secured" + self._id_01AD, var_1 );
                scripts\mp\utility\game::_id_10E60( "enemy_has" + self._id_01AD, var_3, 1 );
            }
        }
    }

    thread _id_8366( self._id_11A45[var_1], var_2 );
}

_id_C5C8( var_0, var_1, var_2, var_3 )
{
    var_4 = scripts\mp\gameobjects::_id_803E();

    if ( var_1 > 0.05 && var_2 && !self._id_54C5 )
    {
        if ( var_4 == "neutral" )
        {
            scripts\mp\utility\game::_id_10E60( "securing" + self._id_01AD, var_0 );
            self._id_D8BA = scripts\mp\utility\game::_id_8027( var_0 );
        }
        else
        {
            scripts\mp\utility\game::_id_10E60( "losing" + self._id_01AD, var_4, 1 );
            scripts\mp\utility\game::_id_10E60( "securing" + self._id_01AD, var_0 );
        }

        if ( !isagent( var_3 ) )
            scripts\mp\gametypes\obj_dom::updateflagcapturestate( var_0 );

        scripts\mp\gameobjects::setzonestatusicons( level.iconlosing + self._id_01AD, level.icontaking + self._id_01AD );
        self._id_54C5 = 1;
    }
}

_id_C50D( var_0, var_1, var_2 )
{
    _id_3E07();

    if ( isplayer( var_1 ) )
    {
        var_1 setclientomnvar( "ui_objective_state", 0 );
        var_1._id_12B1D = undefined;
    }

    if ( var_2 )
        self._id_6E64 = 1;
    else
    {
        self._id_6E64 = 0;
        _id_E2FE();
    }

    var_3 = scripts\mp\gameobjects::_id_803E();

    if ( var_3 == "neutral" )
    {
        scripts\mp\gameobjects::setzonestatusicons( level.iconneutral + self._id_01AD );
        scripts\mp\gametypes\obj_dom::updateflagstate( "idle", 0 );
    }
    else
    {
        scripts\mp\gameobjects::setzonestatusicons( level.icondefend + self._id_01AD, level.iconcapture + self._id_01AD );
        scripts\mp\gametypes\obj_dom::updateflagstate( var_3, 0 );
    }

    level._id_101D7 = scripts\engine\utility::array_remove( level._id_101D7, self._id_01AD );
}

_id_C4D9()
{
    scripts\mp\gameobjects::setzonestatusicons( level.iconcontested + self._id_01AD );
    scripts\mp\gametypes\obj_dom::updateflagstate( "contested", 0 );

    if ( level._id_E8E1 == self._id_C83E )
        _id_E2FE();
}

_id_C5B9( var_0 )
{
    _id_3E07();
    var_1 = scripts\mp\gameobjects::_id_803E();

    if ( var_0 == "none" || var_1 == "neutral" )
    {
        scripts\mp\gameobjects::setzonestatusicons( level.iconneutral + self._id_01AD );
        self._id_54C5 = 0;
    }
    else
        scripts\mp\gameobjects::setzonestatusicons( level.icondefend + self._id_01AD, level.iconcapture + self._id_01AD );

    var_2 = scripts\engine\utility::ter_op( var_1 == "neutral", "idle", var_1 );
    scripts\mp\gametypes\obj_dom::updateflagstate( var_2, 0 );
}

_id_81EF( var_0, var_1 )
{
    var_2 = undefined;
    var_3 = undefined;
    var_4 = undefined;

    foreach ( var_6 in level._id_0134 )
    {
        if ( var_6._id_130AC _id_7EBB() != "neutral" )
            continue;

        var_7 = distancesquared( var_6.origin, level._id_02C5[var_0] );

        if ( isdefined( var_1 ) )
        {
            if ( !_id_9DF8( var_6, var_1 ) && ( !isdefined( var_2 ) || var_7 < var_3 ) )
            {
                var_3 = var_7;
                var_2 = var_6;
            }

            continue;
        }

        if ( !isdefined( var_2 ) || var_7 < var_3 )
        {
            var_3 = var_7;
            var_2 = var_6;
        }
    }

    return var_2;
}

_id_9DF8( var_0, var_1 )
{
    var_2 = 0;

    if ( isarray( var_1 ) )
    {
        foreach ( var_4 in var_1 )
        {
            if ( var_0 == var_4 )
            {
                var_2 = 1;
                break;
            }
        }
    }
    else if ( var_0 == var_1 )
        var_2 = 1;

    return var_2;
}

_id_C4E8( var_0 )
{
    if ( scripts\mp\utility\game::_id_7672() )
    {
        if ( var_0 == "all" )
            ontimelimit();
        else if ( var_0 == game["attackers"] )
        {
            if ( _id_7EB9( var_0 ) == 2 )
                return;

            _id_FB20( game["defenders"], game["attackers"] + "_eliminated" );
        }
        else if ( var_0 == game["defenders"] )
        {
            if ( _id_7EB9( var_0 ) == 2 )
                return;

            _id_FB20( game["attackers"], game["defenders"] + "_eliminated" );
        }
    }
}

_id_C564( var_0 )
{
    var_1 = scripts\mp\utility\game::_id_7F5E( var_0 );
    var_1 thread _id_8378();
}

_id_12E58()
{
    if ( isdefined( level._id_1BE5["allies"] ) )
        setomnvar( "ui_allies_alive", level._id_1BE5["allies"].size );

    if ( isdefined( level._id_1BE5["axis"] ) )
        setomnvar( "ui_axis_alive", level._id_1BE5["axis"].size );
}

_id_C577( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    _id_12E58();

    if ( !isplayer( var_1 ) || var_1.team == self.team )
        return;

    if ( !_id_6E69( self.team ) && _id_81AB( self.team ) == 2 )
        scripts\mp\utility\game::_id_10E60( "objs_capture", var_1.team, 1 );

    var_10 = 0;
    var_11 = 0;
    var_12 = 0;
    var_13 = self;
    var_14 = var_13.team;
    var_15 = var_13.origin;
    var_16 = var_1.team;
    var_17 = var_1.origin;
    var_18 = 0;

    if ( isdefined( var_0 ) )
    {
        var_17 = var_0.origin;
        var_18 = var_0 == var_1;
    }

    foreach ( var_20 in var_1._id_11A46 )
    {
        if ( var_20 != level._id_0134[0] && var_20 != level._id_0134[1] && var_20 != level._id_0134[2] )
            continue;

        var_21 = var_20._id_130AC._id_C83E;

        if ( var_16 != var_21 )
        {
            if ( !var_10 )
                var_10 = 1;

            continue;
        }
    }

    foreach ( var_20 in level._id_0134 )
    {
        var_21 = var_20._id_130AC._id_C83E;

        if ( var_21 == "neutral" )
        {
            var_24 = var_1 istouching( var_20 );
            var_25 = var_13 istouching( var_20 );

            if ( var_24 || var_25 )
            {
                if ( var_20._id_130AC._id_3FF9 == var_14 )
                {
                    if ( !var_11 )
                    {
                        if ( var_10 )
                            var_1 thread scripts\mp\utility\game::_id_83B4( "capture_kill" );

                        var_11 = 1;
                        var_1 thread scripts\mp\awards::givemidmatchaward( "mode_x_assault" );
                        thread scripts\mp\matchdata::_id_AFC5( var_9, "assaulting" );
                        continue;
                    }
                }
                else if ( var_20._id_130AC._id_3FF9 == var_16 )
                {
                    if ( !var_12 )
                    {
                        if ( var_10 )
                            var_1 thread scripts\mp\utility\game::_id_83B4( "capture_kill" );

                        var_12 = 1;
                        var_1 thread scripts\mp\awards::givemidmatchaward( "mode_x_defend" );
                        var_1 scripts\mp\utility\game::incperstat( "defends", 1 );
                        var_1 scripts\mp\persistence::statsetchild( "round", "defends", var_1.pers["defends"] );
                        thread scripts\mp\matchdata::_id_AFC5( var_9, "defending" );
                        continue;
                    }
                }
            }
        }
        else if ( var_21 != var_16 )
        {
            if ( !var_11 )
            {
                var_26 = _id_5720( var_20, var_17, var_15 );

                if ( var_26 )
                {
                    if ( var_10 )
                        var_1 thread scripts\mp\utility\game::_id_83B4( "capture_kill" );

                    var_11 = 1;
                    var_1 thread scripts\mp\awards::givemidmatchaward( "mode_x_assault" );
                    thread scripts\mp\matchdata::_id_AFC5( var_9, "assaulting" );
                    continue;
                }
            }
        }
        else if ( !var_12 )
        {
            var_27 = _id_5720( var_20, var_17, var_15 );

            if ( var_27 )
            {
                if ( var_10 )
                    var_1 thread scripts\mp\utility\game::_id_83B4( "capture_kill" );

                var_12 = 1;
                var_1 thread scripts\mp\awards::givemidmatchaward( "mode_x_defend" );
                var_1 scripts\mp\utility\game::incperstat( "defends", 1 );
                var_1 scripts\mp\persistence::statsetchild( "round", "defends", var_1.pers["defends"] );
                thread scripts\mp\matchdata::_id_AFC5( var_9, "defending" );
                continue;
            }
        }
    }
}

_id_5720( var_0, var_1, var_2 )
{
    var_3 = distancesquared( var_0.origin, var_1 );
    var_4 = distancesquared( var_0.origin, var_2 );

    if ( var_3 < 105625 || var_4 < 105625 )
    {
        if ( !isdefined( var_0._id_B92D ) )
            return 1;
        else if ( var_1[2] - var_0.origin[2] < 100 || var_2[2] - var_0.origin[2] < 100 )
            return 1;
        else
            return 0;
    }
    else
        return 0;
}

_id_8378()
{
    self endon( "death" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    scripts\mp\utility\game::_id_1383E( 3 );
    var_0 = scripts\mp\utility\game::_id_8027( self.pers["team"] );
    level thread scripts\mp\utility\game::_id_115DE( "callout_lastteammemberalive", self, self.pers["team"] );
    level thread scripts\mp\utility\game::_id_115DE( "callout_lastenemyalive", self, var_0 );
    scripts\mp\music_and_dialog::_id_C54B( self );
    scripts\mp\missions::_id_A9B5();
}

ontimelimit()
{
    if ( isdefined( level._id_101D8 ) )
        level thread scripts\mp\gamelogic::_id_72BE();
    else
    {
        var_0 = _id_7EB9( "allies" );
        var_1 = _id_7EB9( "axis" );

        if ( var_0 > var_1 )
            _id_FB20( "allies", "time_limit_reached" );
        else if ( var_1 > var_0 )
            _id_FB20( "axis", "time_limit_reached" );
        else if ( var_1 == var_0 )
        {
            var_2 = scripts\mp\gamelogic::_id_7E07();
            _id_FB20( var_2, "time_limit_reached" );
        }
        else
            _id_FB20( "tie", "time_limit_reached" );
    }
}

_id_115E6( var_0, var_1 )
{
    var_2 = scripts\mp\utility\game::_id_81A0( var_1.team ).size;

    if ( !isdefined( var_1._id_E1C0 ) )
        var_1._id_E1C0 = [];

    foreach ( var_4 in level._id_C928 )
    {
        if ( isdefined( var_4 ) && var_4.team == var_0 && !scripts\mp\utility\game::isreallyalive( var_4 ) && !scripts\engine\utility::array_contains( level._id_1BE5[var_4.team], var_4 ) && ( !isdefined( var_4._id_136FE ) || !var_4._id_136FE ) )
        {
            if ( isdefined( var_4._id_101D9 ) && var_4._id_101D9 )
                var_4._id_101D9 = 0;

            if ( !scripts\mp\utility\game::istrue( var_4.pers["teamKillPunish"] ) )
            {
                var_4 scripts\mp\playerlogic::_id_93F8( var_4.team );
                var_4._id_1D40 = 1;
                var_4 thread _id_136F9();
                var_4 _id_12E58();
                var_4 thread scripts\mp\hud_message::showsplash( "sr_respawned" );
                level notify( "sr_player_respawned", var_4 );
                var_4 scripts\mp\utility\game::leaderdialogonplayer( "revived" );
            }

            var_1 scripts\mp\missions::_id_D992( "ch_rescuer" );
            var_1._id_E1C0[var_4.guid] = 1;

            if ( var_1._id_E1C0.size == 4 )
                var_1 scripts\mp\missions::_id_D992( "ch_helpme" );
        }
    }

    if ( var_1._id_E1C0.size == var_2 - 1 )
        var_1 scripts\mp\missions::_id_D991( "ch_clutch_revives" );

    self._id_D42A = var_1._id_E1C0.size;
}

_id_136F9()
{
    self endon( "started_spawnPlayer" );

    for (;;)
    {
        wait 0.05;

        if ( isdefined( self ) && ( self.sessionstate == "spectator" || !scripts\mp\utility\game::isreallyalive( self ) ) )
        {
            self.pers["lives"] = 1;
            scripts\mp\playerlogic::_id_1083A();
            continue;
        }

        return;
    }
}

_id_C16E( var_0 )
{
    foreach ( var_2 in level.players )
        var_2 thread scripts\mp\hud_message::showsplash( var_0 );

    level notify( "match_ending_soon", "time" );
    level notify( var_0 );
}

_id_81AB( var_0 )
{
    var_1 = 0;

    for ( var_2 = 0; var_2 < level._id_0134.size; var_2++ )
    {
        if ( level._id_5913[var_2] scripts\mp\gameobjects::_id_803E() == var_0 )
            var_1++;
    }

    return var_1;
}

_id_7EBB()
{
    return scripts\mp\gameobjects::_id_803E();
}

_id_6E70()
{
    foreach ( var_1 in level._id_5913 )
    {
        switch ( var_1._id_01AD )
        {
            case "_a":
                var_1._id_5922 = 0;
                break;
            case "_b":
                var_1._id_5922 = 1;
                break;
            case "_c":
                var_1._id_5922 = 2;
                break;
        }
    }

    var_3 = scripts\mp\spawnlogic::getspawnpointarray( "mp_dom_spawn" );

    foreach ( var_5 in var_3 )
    {
        var_5._id_591F = 0;
        var_5._id_5920 = 0;
        var_5._id_5921 = 0;
        var_5._id_BE82 = _id_7FDC( var_5 );

        switch ( var_5._id_BE82._id_130AC._id_5922 )
        {
            case 0:
                var_5._id_591F = 1;
                break;
            case 1:
                var_5._id_5920 = 1;
                break;
            case 2:
                var_5._id_5921 = 1;
                break;
        }
    }
}

_id_7FDC( var_0 )
{
    var_1 = scripts\mp\spawnlogic::_id_9ED7();
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_5 in level._id_5913 )
    {
        var_6 = undefined;

        if ( var_1 )
            var_6 = getpathdist( var_0.origin, var_5._id_ABF0.origin, 999999 );

        if ( !isdefined( var_6 ) || var_6 == -1 )
            var_6 = distancesquared( var_5._id_ABF0.origin, var_0.origin );

        if ( !isdefined( var_2 ) || var_6 < var_3 )
        {
            var_2 = var_5;
            var_3 = var_6;
        }
    }

    return var_2._id_ABF0;
}

_id_8366( var_0, var_1 )
{
    level endon( "game_ended" );
    var_2 = scripts\mp\gameobjects::_id_7E8B();

    if ( isdefined( var_2.owner ) )
        var_2 = var_2.owner;

    level._id_A94F = gettime();

    if ( isplayer( var_2 ) )
    {
        level thread scripts\mp\utility\game::_id_115DE( "callout_securedposition" + self._id_01AD, var_2 );
        var_2 thread scripts\mp\matchdata::_id_AFBA( "capture", var_2.origin );
    }

    var_3 = getarraykeys( var_0 );

    for ( var_4 = 0; var_4 < var_3.size; var_4++ )
    {
        var_5 = var_0[var_3[var_4]].player;

        if ( isdefined( var_5.owner ) )
            var_5 = var_5.owner;

        if ( !isplayer( var_5 ) )
            continue;

        var_5 thread _id_12E7F();

        if ( var_5._id_4784 > 3 )
        {
            var_6 = 0;
            var_7 = 0;
        }
        else if ( var_5._id_C21D > 5 )
        {
            var_6 = 125;
            var_7 = 50;
        }
        else if ( self._id_01AD == "_b" || var_1 != "neutral" || self._id_D42A > 0 )
        {
            var_6 = undefined;
            var_7 = undefined;
        }
        else
        {
            var_6 = 125;
            var_7 = 50;
        }

        var_5 thread scripts\mp\awards::givemidmatchaward( "mode_siege_secure", var_7, var_6 );
        var_5 scripts\mp\utility\game::incperstat( "captures", 1 );
        var_5 scripts\mp\persistence::statsetchild( "round", "captures", var_5.pers["captures"] );
        var_5 scripts\mp\missions::_id_D992( "ch_domcap" );
        var_5 scripts\mp\utility\game::setextrascore0( var_5.pers["captures"] );
        var_5 scripts\mp\utility\game::incperstat( "rescues", self._id_D42A );
        var_5 scripts\mp\persistence::statsetchild( "round", "rescues", var_5.pers["rescues"] );
        var_5 scripts\mp\utility\game::_id_F6FB( var_5.pers["rescues"] );
        wait 0.05;
    }

    self._id_D42A = 0;
}

_id_7E1A()
{
    if ( self._id_4784 < 4 )
        return 1;
    else
        return 0.25;
}

_id_12E7F()
{
    if ( !isdefined( self._id_4784 ) )
    {
        self._id_C21D = 0;
        self._id_4784 = 0;
    }

    self._id_C21D++;

    if ( scripts\mp\utility\game::_id_7FB9() < 1 )
        return;

    self._id_4784 = self._id_C21D / scripts\mp\utility\game::_id_7FB9();
}

_id_F70C( var_0, var_1, var_2, var_3 )
{
    scripts\mp\gameobjects::_id_F7D4( var_0 );
    scripts\mp\gameobjects::setzonestatusicons( level.icondefend + self._id_01AD, level.iconcapture + self._id_01AD );
    scripts\mp\gametypes\obj_dom::updateflagstate( var_0, 0 );
    _id_13A26( var_0 );

    if ( !isdefined( var_3 ) )
    {
        if ( var_1 != "neutral" )
        {
            var_4 = _id_81AB( var_0 );

            if ( var_4 == 2 )
            {
                scripts\mp\utility\game::_id_10E60( "friendly_captured_2", var_0 );
                scripts\mp\utility\game::_id_10E60( "enemy_captured_2", var_1, 1 );
            }
            else
            {
                scripts\mp\utility\game::_id_10E60( "secured" + self._id_01AD, var_0 );
                scripts\mp\utility\game::_id_10E60( "lost" + self._id_01AD, var_1, 1 );
            }

            scripts\mp\utility\game::_id_D52E( "mp_dom_flag_lost", var_1 );
            level._id_A94F = gettime();
        }

        _id_115E6( var_0, var_2 );
        self._id_6DE3 = 0;
    }
}

_id_3E07()
{
    var_0 = _id_7EB9( "allies" );
    var_1 = _id_7EB9( "axis" );

    if ( var_0 == 3 )
        _id_FB20( "allies", "score_limit_reached" );
    else if ( var_1 == 3 )
        _id_FB20( "axis", "score_limit_reached" );
}

_id_E0F2()
{
    self endon( "game_ended" );

    for (;;)
    {
        if ( getdvar( "scr_devRemoveDomFlag", "" ) != "" )
        {
            var_0 = getdvar( "scr_devRemoveDomFlag", "" );

            foreach ( var_2 in level._id_5913 )
            {
                if ( isdefined( var_2._id_01AD ) && var_2._id_01AD == var_0 )
                {
                    var_2 scripts\mp\gameobjects::allowuse( "none" );
                    var_2.trigger = undefined;
                    var_2 notify( "deleted" );

                    if ( isdefined( var_2._id_BEEF ) )
                        var_2._id_BEEF delete();

                    foreach ( var_4 in level.players )
                    {
                        foreach ( var_6 in var_4._id_11E8 )
                        {
                            if ( isdefined( var_6 ) )
                                var_6 delete();
                        }

                        foreach ( var_9 in var_4._id_11E9 )
                        {
                            if ( isdefined( var_9 ) )
                                var_9 delete();
                        }
                    }

                    var_2._id_1343B = "none";
                    var_2 scripts\mp\gameobjects::_id_F283( "friendly", undefined );
                    var_2 scripts\mp\gameobjects::_id_F284( "friendly", undefined );
                    var_2 scripts\mp\gameobjects::_id_F283( "enemy", undefined );
                    var_2 scripts\mp\gameobjects::_id_F284( "enemy", undefined );
                    var_12 = [];

                    for ( var_13 = 0; var_13 < level._id_0134.size; var_13++ )
                    {
                        if ( level._id_0134[var_13]._id_EDF9 != var_0 )
                            var_12[var_12.size] = level._id_0134[var_13];
                    }

                    level._id_0134 = var_12;
                    level._id_C2A8 = level._id_0134;
                    var_12 = [];

                    for ( var_13 = 0; var_13 < level._id_5913.size; var_13++ )
                    {
                        if ( level._id_5913[var_13]._id_01AD != var_0 )
                            var_12[var_12.size] = level._id_5913[var_13];
                    }

                    level._id_5913 = var_12;
                    break;
                }
            }

            setdynamicdvar( "scr_devRemoveDomFlag", "" );
        }

        wait 1;
    }
}

_id_CC13()
{
    self endon( "game_ended" );

    for (;;)
    {
        if ( getdvar( "scr_devPlaceDomFlag", "" ) != "" )
        {
            var_0 = getdvar( "scr_devPlaceDomFlag", "" );
            var_1 = spawnstruct();
            var_1.origin = level.players[0].origin;
            var_1.angles = level.players[0].angles;
            var_2 = spawn( "trigger_radius", var_1.origin, 0, 120, 128 );
            var_1.trigger = var_2;
            var_1.trigger._id_EDF9 = var_0;
            var_1._id_C83E = "neutral";
            var_3 = var_1.origin + ( 0, 0, 32 );
            var_4 = var_1.origin + ( 0, 0, -32 );
            var_5 = bullettrace( var_3, var_4, 0, undefined );
            var_1.origin = var_5["position"];
            var_1._id_12D77 = vectortoangles( var_5["normal"] );
            var_1._id_0143 = anglestoforward( var_1._id_12D77 );
            var_1._id_0267 = anglestoright( var_1._id_12D77 );
            var_1.visuals[0] = spawn( "script_model", var_1.origin );
            var_1.visuals[0].angles = var_1.angles;
            level._id_0134[level._id_0134.size] = var_1;
            level._id_C2A8 = level._id_0134;
            var_6 = scripts\mp\gameobjects::createuseobject( "neutral", var_1.trigger, var_1.visuals, ( 0, 0, 100 ) );
            var_6 scripts\mp\gameobjects::allowuse( "enemy" );
            var_6 scripts\mp\gameobjects::_id_FB08( level._id_3A00 );
            var_6 scripts\mp\gameobjects::_id_FB07( &"MP_SECURING_POSITION" );
            var_7 = var_0;
            var_6._id_01AD = var_7;
            var_6 scripts\mp\gameobjects::_id_F283( "friendly", "waypoint_defend" + var_7 );
            var_6 scripts\mp\gameobjects::_id_F284( "friendly", "waypoint_defend" + var_7 );
            var_6 scripts\mp\gameobjects::_id_F283( "enemy", "waypoint_captureneutral" + var_7 );
            var_6 scripts\mp\gameobjects::_id_F284( "enemy", "waypoint_captureneutral" + var_7 );
            var_6 scripts\mp\gameobjects::_id_FB0E( "any" );
            var_6 scripts\mp\gameobjects::_id_3897( 1 );
            var_6._id_C5BB = ::_id_C5BB;
            var_6._id_C4CB = ::_id_C4CB;
            var_6._id_C5C8 = ::_id_C5C8;
            var_6._id_C50D = ::_id_C50D;
            var_6._id_C4D9 = ::_id_C4D9;
            var_6._id_C5B9 = ::_id_C5B9;
            var_6._id_C18B = 1;
            var_6._id_92B8 = "domFlag";
            var_6._id_6DE3 = 1;
            var_6._id_3FF7 = 10000;
            var_6._id_4F5F = 50;
            var_3 = var_1.visuals[0].origin + ( 0, 0, 32 );
            var_4 = var_1.visuals[0].origin + ( 0, 0, -32 );
            var_8 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
            var_9 = [];
            var_5 = scripts\engine\trace::_id_DCED( var_3, var_4, var_9, var_8 );
            var_6._id_289D = var_5["position"];
            var_10 = vectortoangles( var_5["normal"] );
            var_6._id_289C = anglestoforward( var_10 );
            var_6 scripts\mp\gametypes\obj_dom::_id_987B();
            var_6 scripts\engine\utility::delaythread( 1.0, ::_id_F7AD );

            for ( var_11 = 0; var_11 < level._id_0134.size; var_11++ )
            {
                level._id_0134[var_11]._id_130AC = var_6;
                var_6._id_ABF0 = level._id_0134[var_11];
            }

            level._id_5913[level._id_5913.size] = var_6;
            setdynamicdvar( "scr_devPlaceDomFlag", "" );
        }

        wait 1;
    }
}
