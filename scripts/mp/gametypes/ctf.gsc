// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registertimelimitdvar( level.gametype, 5 );
        scripts\mp\utility\game::registerscorelimitdvar( level.gametype, 3 );
        scripts\mp\utility\game::registerroundlimitdvar( level.gametype, 2 );
        scripts\mp\utility\game::registerwinlimitdvar( level.gametype, 1 );
        scripts\mp\utility\game::registernumlivesdvar( level.gametype, 0 );
        scripts\mp\utility\game::registerhalftimedvar( level.gametype, 0 );
        scripts\mp\utility\game::registerroundswitchdvar( level.gametype, 1, 0, 1 );
        level.matchrules_damagemultiplier = 0;
        level.matchrules_vampirism = 0;
    }

    updategametypedvars();

    if ( level._id_13D8D )
        level._id_13D7C = "teamScores";
    else
        level._id_13D7C = "roundsWon";

    level.teambased = 1;
    level.objectivebased = 1;
    level._id_C82C = 1;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level._id_C577 = ::_id_C577;
    level.onspawnplayer = ::onspawnplayer;
    level._id_108EB = "mp_ctf_spawn";

    if ( level.matchrules_damagemultiplier || level.matchrules_vampirism )
        level.modifyplayerdamage = scripts\mp\damage::gamemodemodifyplayerdamage;

    game["dialog"]["gametype"] = "captureflag";

    if ( getdvarint( "g_hardcore" ) )
        game["dialog"]["gametype"] = "hc_" + game["dialog"]["gametype"];
    else if ( getdvarint( "camera_thirdPerson" ) )
        game["dialog"]["gametype"] = "thirdp_" + game["dialog"]["gametype"];
    else if ( getdvarint( "scr_diehard" ) )
        game["dialog"]["gametype"] = "dh_" + game["dialog"]["gametype"];
    else if ( getdvarint( "scr_" + level.gametype + "_promode" ) )
        game["dialog"]["gametype"] = game["dialog"]["gametype"] + "_pro";

    game["dialog"]["offense_obj"] = "capture_obj";
    game["dialog"]["defense_obj"] = "capture_obj";
    setomnvar( "ui_ctf_flag_axis", -2 );
    setomnvar( "ui_ctf_flag_allies", -2 );
    thread _id_C56E();
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchdata();
    setdynamicdvar( "scr_ctf_winRule", getmatchrulesdata( "ctfData", "winRule" ) );
    setdynamicdvar( "scr_ctf_showEnemyCarrier", getmatchrulesdata( "ctfData", "showEnemyCarrier" ) );
    setdynamicdvar( "scr_ctf_idleResetTime", getmatchrulesdata( "ctfData", "idleResetTime" ) );
    setdynamicdvar( "scr_ctf_captureCondition", getmatchrulesdata( "ctfData", "captureCondition" ) );
    setdynamicdvar( "scr_ctf_pickupTime", getmatchrulesdata( "ctfData", "pickupTime" ) );
    setdynamicdvar( "scr_ctf_returnTime", getmatchrulesdata( "ctfData", "returnTime" ) );
    setdynamicdvar( "scr_ctf_halftime", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "ctf", 0 );
    setdynamicdvar( "scr_ctf_promode", 0 );
}

onspawnplayer()
{

}

onstartgametype()
{
    var_0 = scripts\mp\utility\game::_id_9900();
    var_1 = game["overtimeRoundsPlayed"] == 0;
    var_2 = scripts\mp\utility\game::_id_9FAB();

    if ( var_0 )
    {
        if ( var_1 )
        {
            setomnvar( "ui_round_hint_override_attackers", 1 );
            setomnvar( "ui_round_hint_override_defenders", 1 );
        }
        else if ( var_2 )
        {
            setomnvar( "ui_round_hint_override_attackers", scripts\engine\utility::ter_op( game["timeToBeatTeam"] == game["attackers"], 2, 3 ) );
            setomnvar( "ui_round_hint_override_defenders", scripts\engine\utility::ter_op( game["timeToBeatTeam"] == game["defenders"], 2, 3 ) );
        }
        else
        {
            setomnvar( "ui_round_hint_override_attackers", 4 );
            setomnvar( "ui_round_hint_override_defenders", 4 );
        }
    }

    if ( !isdefined( game["switchedsides"] ) )
        game["switchedsides"] = 0;

    if ( scripts\mp\utility\game::_id_9900() )
        setdvar( "ui_override_halftime", 0 );
    else if ( game["switchedsides"] )
        setdvar( "ui_override_halftime", 2 );
    else
        setdvar( "ui_override_halftime", 1 );

    if ( !isdefined( game["original_defenders"] ) )
        game["original_defenders"] = game["defenders"];

    if ( game["switchedsides"] )
    {
        var_3 = game["attackers"];
        var_4 = game["defenders"];
        game["attackers"] = var_4;
        game["defenders"] = var_3;
    }

    setclientnamemode( "auto_change" );

    if ( level._id_10A56 )
    {
        scripts\mp\utility\game::setobjectivescoretext( game["attackers"], &"OBJECTIVES_ONE_FLAG_ATTACKER" );
        scripts\mp\utility\game::setobjectivescoretext( game["defenders"], &"OBJECTIVES_ONE_FLAG_DEFENDER" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( game["attackers"], &"OBJECTIVES_ONE_FLAG_ATTACKER_SCORE" );
        scripts\mp\utility\game::setobjectivescoretext( game["defenders"], &"OBJECTIVES_ONE_FLAG_DEFENDER_SCORE" );
    }

    scripts\mp\utility\game::setobjectivetext( game["attackers"], &"OBJECTIVES_CTF" );
    scripts\mp\utility\game::setobjectivetext( game["defenders"], &"OBJECTIVES_CTF" );
    scripts\mp\utility\game::setobjectivehinttext( game["attackers"], &"OBJECTIVES_ONE_FLAG_ATTACKER_HINT" );
    scripts\mp\utility\game::setobjectivehinttext( game["defenders"], &"OBJECTIVES_ONE_FLAG_DEFENDER_HINT" );
    _id_6E31();
    var_5[0] = "ctf";
    scripts\mp\gameobjects::main( var_5 );
    _id_6E44();
    _id_49B1();
    _id_98CE();
    thread _id_E0F9();
    thread _id_CC19();
}

updategametypedvars()
{
    scripts\mp\gametypes\common::updategametypedvars();
    level._id_13D8D = scripts\mp\utility\game::_id_5F6D( "winRule", 0, 0, 1 );
    level._id_10120 = scripts\mp\utility\game::_id_5F6D( "showEnemyCarrier", 5, 0, 6 );
    level._id_92F7 = scripts\mp\utility\game::_id_5F6B( "idleResetTime", 30, 0, 60 );
    level._id_3A3C = scripts\mp\utility\game::_id_5F6D( "captureCondition", 0, 0, 1 );
    level._id_CB48 = scripts\mp\utility\game::_id_5F6B( "pickupTime", 0, 0, 10 );
    level._id_E479 = scripts\mp\utility\game::_id_5F6B( "returnTime", 0, -1, 25 );
}

_id_49B1()
{
    level._id_6E67["allies"] = "ctf_game_flag_unsa_open_wm";
    level._id_6E61["allies"] = "ctf_game_flag_unsa_base_wm";
    level._id_3AF4["allies"] = "ctf_game_flag_unsa_close_wm";
    level._id_6E67["axis"] = "ctf_game_flag_sdf_open_wm";
    level._id_6E61["axis"] = "ctf_game_flag_sdf_base_wm";
    level._id_3AF4["axis"] = "ctf_game_flag_sdf_close_wm";
    level._id_4282 = [];
    level._id_4282["allies"] = undefined;
    level._id_4282["axis"] = undefined;
    level._id_92A9 = "waypoint_escort";
    level._id_92A8 = "waypoint_escort";
    level._id_92AD = "waypoint_capture_kill";
    level._id_92AC = "waypoint_capture_kill";
    level._id_929C = "waypoint_capture_take";
    level._id_929B = "waypoint_capture_take";
    level._id_92A2 = "waypoint_blitz_defend";
    level._id_92A1 = "waypoint_blitz_defend";
    level._id_92B3 = "waypoint_capture_recover";
    level._id_92B2 = "waypoint_capture_recover";
    level._id_115CC[game["defenders"]] = _id_4A21( game["defenders"], "axis" );
    level._id_115CC[game["attackers"]] = _id_4A21( game["attackers"], "allies" );
    level._id_3A42[game["defenders"]] = _id_4991( game["defenders"], "axis" );
    level._id_3A42[game["attackers"]] = _id_4991( game["attackers"], "allies" );
}

_id_6E44()
{
    level._id_6E63["friendly"] = loadfx( "vfx/iw7/core/mp/vfx_ctf_base_glow_fr.vfx" );
    level._id_6E63["enemy"] = loadfx( "vfx/iw7/core/mp/vfx_ctf_base_glow_en.vfx" );
    level._id_6E6A["friendly"] = loadfx( "vfx/core/mp/core/vfx_marker_flag_cyan.vfx" );
    level._id_6E6A["enemy"] = loadfx( "vfx/core/mp/core/vfx_marker_flag_orng.vfx" );
}

_id_98CE()
{
    scripts\mp\spawnlogic::_id_F62D( "AwayFromEnemies" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "mp_ctf_spawn_allies_start" );
    scripts\mp\spawnlogic::addstartspawnpoints( "mp_ctf_spawn_axis_start" );
    scripts\mp\spawnlogic::addspawnpoints( "allies", "mp_ctf_spawn" );
    scripts\mp\spawnlogic::addspawnpoints( "axis", "mp_ctf_spawn" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
    _id_23E3();
}

_id_23E3()
{
    var_0 = scripts\mp\spawnlogic::getspawnpointarray( level._id_108EB );
    var_1 = scripts\mp\spawnlogic::_id_9ED7();
    level._id_115EA["axis"] = [];
    level._id_115EA["allies"] = [];
    level._id_115EA["neutral"] = [];

    if ( level._id_115CC.size == 2 )
    {
        var_2 = level._id_115CC["allies"];
        var_3 = level._id_115CC["axis"];
        var_4 = ( var_2.curorigin[0], var_2.curorigin[1], 0 );
        var_5 = ( var_3.curorigin[0], var_3.curorigin[1], 0 );
        var_6 = var_5 - var_4;
        var_7 = length2d( var_6 );

        foreach ( var_9 in var_0 )
        {
            var_10 = ( var_9.origin[0], var_9.origin[1], 0 );
            var_11 = var_10 - var_4;
            var_12 = vectordot( var_11, var_6 );
            var_13 = var_12 / ( var_7 * var_7 );

            if ( var_13 < 0.33 )
            {
                var_9._id_115C2 = var_2._id_C83E;
                level._id_115EA[var_9._id_115C2][level._id_115EA[var_9._id_115C2].size] = var_9;
                continue;
            }

            if ( var_13 > 0.67 )
            {
                var_9._id_115C2 = var_3._id_C83E;
                level._id_115EA[var_9._id_115C2][level._id_115EA[var_9._id_115C2].size] = var_9;
                continue;
            }

            var_14 = undefined;
            var_15 = undefined;

            if ( var_1 )
                var_14 = getpathdist( var_9.origin, var_2.curorigin, 999999 );

            if ( isdefined( var_14 ) && var_14 != -1 )
                var_15 = getpathdist( var_9.origin, var_3.curorigin, 999999 );

            if ( !isdefined( var_15 ) || var_15 == -1 )
            {
                var_14 = distance2d( var_2.curorigin, var_9.origin );
                var_15 = distance2d( var_3.curorigin, var_9.origin );
            }

            var_16 = max( var_14, var_15 );
            var_17 = min( var_14, var_15 );
            var_18 = var_17 / var_16;

            if ( var_18 > 0.5 )
                level._id_115EA["neutral"][level._id_115EA["neutral"].size] = var_9;
        }
    }
    else
    {
        foreach ( var_9 in var_0 )
        {
            var_9._id_115C2 = _id_7FDD( var_9 );

            if ( var_9._id_115C2 == "axis" )
            {
                level._id_115EA["axis"][level._id_115EA["axis"].size] = var_9;
                continue;
            }

            level._id_115EA["allies"][level._id_115EA["allies"].size] = var_9;
        }
    }
}

_id_7FDD( var_0 )
{
    var_1 = scripts\mp\spawnlogic::_id_9ED7();
    var_2 = undefined;
    var_3 = undefined;

    foreach ( var_5 in level._id_115CC )
    {
        var_6 = undefined;

        if ( var_1 )
            var_6 = getpathdist( var_0.origin, var_5.curorigin, 999999 );

        if ( !isdefined( var_6 ) || var_6 == -1 )
            var_6 = distancesquared( var_5.curorigin, var_0.origin );

        if ( !isdefined( var_2 ) || var_6 < var_3 )
        {
            var_2 = var_5;
            var_3 = var_6;
        }
    }

    return var_2._id_C83E;
}

getspawnpoint()
{
    var_0 = self.pers["team"];
    var_1 = scripts\mp\utility\game::_id_8027( var_0 );

    if ( scripts\mp\spawnlogic::_id_100BA() )
    {
        if ( game["switchedsides"] )
        {
            var_2 = scripts\mp\spawnlogic::getspawnpointarray( "mp_ctf_spawn_" + var_1 + "_start" );
            var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
        }
        else
        {
            var_2 = scripts\mp\spawnlogic::getspawnpointarray( "mp_ctf_spawn_" + var_0 + "_start" );
            var_3 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_2 );
        }
    }
    else
    {
        var_4 = level._id_115EA["neutral"].size > 0;
        var_2 = scripts\mp\spawnlogic::getteamspawnpoints( var_0 );
        var_3 = scripts\mp\spawnscoring::getspawnpoint( var_2, undefined, undefined, var_4 );

        if ( !isdefined( var_3 ) && var_4 )
        {
            var_2 = scripts\mp\spawnlogic::getteamspawnpoints( "neutral" );
            var_3 = scripts\mp\spawnscoring::getspawnpoint( var_2 );
        }
    }

    return var_3;
}

_id_6E31()
{
    level._id_4FF4 = [];
    level._id_0134 = getentarray( "flag_primary", "targetname" );

    foreach ( var_1 in level._id_0134 )
    {
        switch ( var_1._id_EDF9 )
        {
            case "_a":
                level._id_4FEF[game["attackers"]] = var_1.origin;
                break;
            case "_b":
                level._id_4FDB = var_1.origin;
                break;
            case "_c":
                level._id_4FEF[game["defenders"]] = var_1.origin;
                break;
        }
    }
}

_id_6E30( var_0 )
{
    var_1 = 0;
    var_2 = undefined;

    if ( isdefined( var_2 ) )
    {
        var_2 _id_6E36();
        var_2.origin = var_2._id_862F;
    }
    else
    {
        var_2 = spawnstruct();

        switch ( level.script )
        {
            default:
                break;
        }

        if ( !isdefined( var_2.origin ) )
            var_2.origin = level._id_4FEF[var_0];

        var_2 _id_6E36();
        var_2.origin = var_2._id_862F;
    }

    var_2.radius = 30;
    var_2.team = var_0;
    var_2._id_279B = 0;
    var_2._id_8EE8 = 0;
    return var_2;
}

_id_6E36( var_0 )
{
    var_1 = self.origin + ( 0, 0, 32 );
    var_2 = self.origin + ( 0, 0, -1000 );
    var_3 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
    var_4 = [];
    var_5 = scripts\engine\trace::_id_DCED( var_1, var_2, var_4, var_3 );
    self._id_862F = var_5["position"];
    return var_5["fraction"] != 0 && var_5["fraction"] != 1;
}

_id_10127( var_0, var_1, var_2 )
{
    if ( isdefined( var_1._id_1289[var_0] ) )
        var_1._id_1289[var_0] delete();

    var_3 = undefined;
    var_4 = var_1.team;
    var_5 = var_1 ismlgspectator();

    if ( var_5 )
        var_4 = var_1 _meth_813B();
    else if ( var_4 == "spectator" )
        var_4 = "allies";

    if ( var_4 == var_0 )
    {
        var_6 = spawnfxforclient( level._id_6E6A["friendly"], var_2, var_1, ( 0, 0, 1 ) );
        var_6 _meth_82EC();
    }
    else
    {
        var_6 = spawnfxforclient( level._id_6E6A["enemy"], var_2, var_1, ( 0, 0, 1 ) );
        var_6 _meth_82EC();
    }

    var_1._id_1289[var_0] = var_6;
    triggerfx( var_6 );
}

_id_10110( var_0, var_1 )
{
    if ( isdefined( var_1._id_1288[var_0] ) )
        var_1._id_1288[var_0] delete();

    var_2 = undefined;
    var_3 = var_1.team;
    var_4 = var_1 ismlgspectator();

    if ( var_4 )
        var_3 = var_1 _meth_813B();
    else if ( var_3 == "spectator" )
        var_3 = "allies";

    if ( var_3 == var_0 )
    {
        var_5 = spawnfxforclient( level._id_6E63["friendly"], self.origin, var_1, self._id_289C );
        var_5 _meth_82EC();
    }
    else
    {
        var_5 = spawnfxforclient( level._id_6E63["enemy"], self.origin, var_1, self._id_289C );
        var_5 _meth_82EC();
    }

    var_1._id_1288[var_0] = var_5;
    triggerfx( var_5 );
}

_id_E0FB( var_0 )
{
    if ( var_0 == self.team )
    {
        if ( isdefined( self._id_1289[self.team] ) )
            self._id_1289[self.team] delete();
    }
    else if ( isdefined( self._id_1289[level._id_C74B[self.team]] ) )
        self._id_1289[level._id_C74B[self.team]] delete();
}

setteaminhuddatafromteamname( var_0 )
{
    if ( var_0 == "axis" )
        self _meth_85AA( 1 );
    else if ( var_0 == "allies" )
        self _meth_85AA( 2 );
    else
        self _meth_85AA( 0 );
}

_id_D018( var_0 )
{
    if ( var_0 == self.team )
    {
        if ( isdefined( self._id_1288[self.team] ) )
            self._id_1288[self.team] delete();
    }
    else if ( isdefined( self._id_1288[level._id_C74B[self.team]] ) )
        self._id_1288[level._id_C74B[self.team]] delete();
}

_id_7EBA( var_0 )
{
    var_1 = getent( "ctf_flag_" + var_0, "targetname" );
    return var_1.origin;
}

_id_4A21( var_0, var_1 )
{
    var_2 = 0;
    var_3 = getent( "ctf_zone_" + var_1, "targetname" );

    if ( !isdefined( var_3 ) )
    {
        var_4 = _id_6E30( var_0 );
        var_3 = spawn( "trigger_radius", var_4.origin - ( 0, 0, var_4.radius / 2 ), 0, var_4.radius, 80 );
        var_3._id_C000 = 1;
        var_3._id_AD48 = 1;
        var_3._id_28AC = var_3.origin;
        var_2 = 1;
        var_5[0] = spawn( "script_model", var_4.origin );
        var_5[0] _meth_8588();
        var_5[0] setteaminhuddatafromteamname( var_1 );
    }
    else
        var_5[0] = getent( "ctf_flag_" + var_1, "targetname" );

    if ( !isdefined( var_5[0] ) )
    {

    }

    if ( !var_2 )
    {
        var_6 = 15;

        if ( level._id_CB48 > 0 || level._id_E479 > 0 )
            var_6 = var_6 * 2;

        var_7 = spawn( "trigger_radius", var_3.origin, 0, var_6, var_3.height );
        var_3 = var_7;
    }

    var_5[0] setmodel( level._id_6E67[var_0] );
    var_5[0] _meth_8588();
    var_5[0] setteaminhuddatafromteamname( var_1 );
    var_8 = scripts\mp\gameobjects::_id_4993( var_0, var_3, var_5, ( 0, 0, 85 ) );
    var_8 scripts\mp\gameobjects::_id_F87C( "enemy", &"MP_GRABBING_FLAG" );
    var_8 scripts\mp\gameobjects::_id_F87C( "friendly", &"MP_RETURNING_FLAG" );
    var_8 scripts\mp\gameobjects::_id_1C7C( "enemy" );
    var_8 scripts\mp\gameobjects::_id_F87D( "enemy", level._id_CB48 );
    var_8 scripts\mp\gameobjects::_id_F87D( "friendly", level._id_E479 );
    var_8 scripts\mp\gameobjects::_id_FB0E( "none" );
    var_8 scripts\mp\gameobjects::_id_F283( "friendly", level._id_92AC );
    var_8 scripts\mp\gameobjects::_id_F284( "friendly", level._id_92AD );
    var_8 scripts\mp\gameobjects::_id_F283( "enemy", level._id_92A8 );
    var_8 scripts\mp\gameobjects::_id_F284( "enemy", level._id_92A9 );
    var_8._id_1CB3 = 1;
    var_8._id_C566 = ::_id_C566;
    var_8._id_C567 = ::_id_C566;
    var_8._id_C4F9 = ::_id_C4F9;
    var_8._id_C581 = ::_id_C581;

    if ( isdefined( level._id_10120 ) )
    {
        switch ( level._id_10120 )
        {
            case 0:
                var_8._id_C2BE = 1;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 60.0;
                break;
            case 1:
                var_8._id_C2BE = 0;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 0.05;
                break;
            case 2:
                var_8._id_C2BE = 1;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 1.0;
                break;
            case 3:
                var_8._id_C2BE = 1;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 1.5;
                break;
            case 4:
                var_8._id_C2BE = 1;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 2.0;
                break;
            case 5:
                var_8._id_C2BE = 1;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 3.0;
                break;
            case 6:
                var_8._id_C2BE = 1;
                var_8._id_C2BD = 0;
                var_8._id_C2BF = 4.0;
                break;
        }
    }
    else
    {
        var_8._id_C2BE = 1;
        var_8._id_C2BD = 0;
        var_8._id_C2BF = 3.0;
    }

    var_8._id_C402 = var_3.radius;
    var_9 = var_3.origin + ( 0, 0, 32 );
    var_10 = var_3.origin + ( 0, 0, -32 );
    var_11 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
    var_12 = [];
    var_13 = scripts\engine\trace::_id_DCED( var_9, var_10, var_12, var_11 );
    var_8._id_289D = var_8.visuals[0].origin;
    var_14 = anglestoup( var_8.visuals[0].angles );
    var_8._id_289C = anglestoforward( var_14 );
    level._id_115CB[var_0] = _id_4A22( var_0, var_8 );
    return var_8;
}

_id_4A22( var_0, var_1 )
{
    var_2 = var_1.visuals[0].origin;
    var_3 = spawn( "script_model", var_2 );
    var_3 setmodel( level._id_6E61[var_0] );
    var_3._id_C83E = var_0;
    var_3 _meth_8588();
    var_3 setteaminhuddatafromteamname( var_0 );
    var_3._id_289D = var_2;
    var_4 = anglestoup( var_1.visuals[0].angles );
    var_3._id_289C = anglestoforward( var_4 );

    foreach ( var_6 in level.players )
        var_3 _id_10110( var_0, var_6 );

    return var_3;
}

_id_4991( var_0, var_1 )
{
    var_2 = _id_6E30( var_0 );
    var_3 = getent( "ctf_zone_" + var_1, "targetname" );

    if ( !isdefined( var_3 ) )
    {
        var_3 = spawn( "trigger_radius", var_2.origin - ( 0, 0, var_2.radius / 2 ), 0, var_2.radius, 80 );
        var_3._id_C000 = 1;
        var_3._id_AD48 = 1;
        var_3._id_28AC = var_3.origin;
        var_3.height = 80;
    }

    var_4 = spawn( "trigger_radius", var_3.origin, 0, 15, var_3.height );
    var_3 = var_4;
    var_5 = [];
    var_6 = scripts\mp\gameobjects::createuseobject( var_0, var_3, var_5, ( 0, 0, 85 ) );
    var_6 scripts\mp\gameobjects::allowuse( "friendly" );
    var_6 scripts\mp\gameobjects::_id_FB0E( "any" );
    var_6 scripts\mp\gameobjects::_id_F283( "friendly", level._id_92A1 );
    var_6 scripts\mp\gameobjects::_id_F284( "friendly", level._id_92A2 );
    var_6 scripts\mp\gameobjects::_id_F283( "enemy", level._id_929B );
    var_6 scripts\mp\gameobjects::_id_F284( "enemy", level._id_929C );
    var_6 scripts\mp\gameobjects::_id_FB08( 0 );
    var_6 scripts\mp\gameobjects::_id_F76A( level._id_115CC[scripts\mp\utility\game::_id_8027( var_0 )] );
    var_6._id_C5BB = ::_id_C5BB;
    var_6._id_C4D4 = ::_id_C4D4;
    var_7 = var_3.origin + ( 0, 0, 32 );
    var_8 = var_3.origin + ( 0, 0, -32 );
    var_9 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
    var_10 = [];
    var_11 = scripts\engine\trace::_id_DCED( var_7, var_8, var_10, var_9 );
    var_12 = vectortoangles( var_11["normal"] );
    var_13 = anglestoforward( var_12 );
    var_14 = anglestoright( var_12 );
    return var_6;
}

_id_C4CB( var_0 )
{
    var_1 = var_0.pers["team"];

    if ( var_1 == scripts\mp\gameobjects::_id_803E() )
        self.trigger.radius = 1024;
    else
        self.trigger.radius = self._id_C402;
}

_id_C50D( var_0, var_1, var_2 )
{
    self.trigger.radius = self._id_C402;
}

_id_C566( var_0 )
{
    self notify( "picked_up" );
    var_0 notify( "obj_picked_up" );
    var_1 = var_0.pers["team"];

    if ( var_1 == "allies" )
        var_2 = "axis";
    else
        var_2 = "allies";

    if ( var_1 == scripts\mp\gameobjects::_id_803E() )
    {
        if ( isdefined( level._id_4282[var_0.team] ) && level._id_4282[var_0.team] == var_0 )
            var_0 thread scripts\mp\awards::givemidmatchaward( "mode_ctf_nope" );

        scripts\mp\utility\game::_id_F79E( 11, var_0.team, var_0 getentitynumber() );
        level._id_4282[var_0.team] = undefined;
        var_0 thread scripts\mp\utility\game::_id_83B4( "flag_return" );
        thread _id_E471();
        var_0 thread scripts\mp\matchdata::_id_AFBA( "obj_return", var_0.origin );
        scripts\mp\utility\game::_id_D90B( var_1, scripts\mp\utility\game::_id_8027( var_1 ), &"MP_FLAG_RETURNED", &"MP_ENEMY_FLAG_RETURNED", "mp_obj_returned", "mp_obj_returned", var_0 );
        scripts\mp\utility\game::_id_AAE7( "enemy_flag_returned", var_2, "status" );
        scripts\mp\utility\game::_id_AAE7( "flag_returned", var_1, "status" );
        var_0 scripts\mp\utility\game::incperstat( "returns", 1 );
        var_0 scripts\mp\persistence::statsetchild( "round", "returns", var_0.pers["returns"] );

        if ( isplayer( var_0 ) )
            var_0 scripts\mp\utility\game::_id_F6FB( var_0.pers["returns"] );

        if ( var_1 == "allies" )
            setomnvar( "ui_ctf_flag_allies", -2 );
        else
            setomnvar( "ui_ctf_flag_axis", -2 );
    }
    else
    {
        if ( isdefined( level._id_4B05 ) && isdefined( level._id_4B05[var_1] ) )
            var_0 thread _id_20C9();
        else
            var_0 _id_2480();

        scripts\mp\utility\game::_id_F79E( 8, var_0.team, var_0 getentitynumber() );
        level._id_4282[var_2] = undefined;

        if ( var_0.team == "allies" )
            setomnvar( "ui_ctf_flag_axis", var_0 getentitynumber() );
        else
            setomnvar( "ui_ctf_flag_allies", var_0 getentitynumber() );

        var_0 setclientomnvar( "ui_ctf_flag_carrier", 1 );

        if ( isdefined( level._id_10120 ) )
        {
            if ( level._id_10120 == 0 )
                scripts\mp\gameobjects::_id_FB0E( "enemy" );
            else
                scripts\mp\gameobjects::_id_FB0E( "any" );
        }

        scripts\mp\gameobjects::_id_F283( "friendly", level._id_92AC );
        scripts\mp\gameobjects::_id_F284( "friendly", level._id_92AD );
        scripts\mp\gameobjects::_id_F283( "enemy", level._id_92A8 );
        scripts\mp\gameobjects::_id_F284( "enemy", level._id_92A9 );

        if ( level._id_3A3C == 0 )
            level._id_3A42[var_2] scripts\mp\gameobjects::allowuse( "none" );

        level._id_3A42[var_2] scripts\mp\gameobjects::_id_FB0E( "none" );
        scripts\mp\utility\game::_id_D90B( var_1, var_2, &"MP_ENEMY_FLAG_TAKEN_BY", &"MP_FLAG_TAKEN_BY", "mp_obj_taken", "mp_enemy_obj_taken", var_0 );
        scripts\mp\utility\game::_id_AAE7( "enemy_flag_taken", var_1 );
        scripts\mp\utility\game::_id_AAE7( "flag_getback", var_2 );
        thread scripts\mp\utility\game::_id_115DE( "callout_flagpickup", var_0 );

        if ( !isdefined( self.previouscarrier ) || self.previouscarrier != var_0 )
            var_0 thread scripts\mp\utility\game::_id_83B4( "flag_grab" );

        var_0 thread scripts\mp\matchdata::_id_AFBA( "pickup", var_0.origin );
        self.previouscarrier = var_0;

        if ( getdvarint( "com_codcasterEnabled", 0 ) == 1 )
            var_0 _meth_80C1( 1 );

        var_0 thread _id_11237();
    }
}

_id_E471()
{
    scripts\mp\utility\game::_id_F79E( 11, scripts\mp\gameobjects::_id_803E() );
    scripts\mp\gameobjects::_id_E472();
}

_id_C4F9( var_0 )
{
    var_1 = scripts\mp\gameobjects::_id_803E();
    var_2 = level._id_C74B[var_1];
    scripts\mp\gameobjects::_id_1C7C( "any" );
    scripts\mp\gameobjects::_id_FB0E( "any" );

    if ( level._id_E479 >= 0 )
    {
        scripts\mp\gameobjects::_id_F283( "friendly", level._id_92B2 );
        scripts\mp\gameobjects::_id_F284( "friendly", level._id_92B3 );
    }
    else
    {
        scripts\mp\gameobjects::_id_F283( "friendly", level._id_92A1 );
        scripts\mp\gameobjects::_id_F284( "friendly", level._id_92A2 );
    }

    scripts\mp\gameobjects::_id_F283( "enemy", level._id_929B );
    scripts\mp\gameobjects::_id_F284( "enemy", level._id_929C );

    if ( var_1 == "allies" )
        setomnvar( "ui_ctf_flag_allies", -1 );
    else
        setomnvar( "ui_ctf_flag_axis", -1 );

    if ( isdefined( var_0 ) )
        var_0 setclientomnvar( "ui_ctf_flag_carrier", 0 );

    var_3 = self.visuals[0] gettagorigin( "tag_origin" );
    level._id_3A42[var_2].trigger scripts\mp\entityheadicons::_id_F73D( "none", "", ( 0, 0, 0 ) );

    if ( isdefined( var_0 ) )
    {
        if ( !scripts\mp\utility\game::isreallyalive( var_0 ) )
            var_0.carryobject.previouscarrier = undefined;

        if ( isdefined( var_0._id_3AF4 ) )
            var_0 _id_5391();

        scripts\mp\utility\game::_id_D90B( var_2, "none", &"MP_ENEMY_FLAG_DROPPED_BY", "", "mp_war_objective_lost", "", var_0 );

        if ( getdvarint( "com_codcasterEnabled", 0 ) == 1 )
            var_0 _meth_80C1( 0 );
    }
    else
        scripts\mp\utility\game::_id_D52E( "mp_war_objective_lost", var_2 );

    scripts\mp\utility\game::_id_AAE7( "enemy_flag_dropped", var_2, "status" );
    scripts\mp\utility\game::_id_AAE7( "flag_dropped", var_1, "status" );

    if ( level._id_92F7 > 0 )
        thread _id_E46B();
}

_id_E46B()
{
    self endon( "picked_up" );
    var_0 = 0.0;

    while ( var_0 < level._id_92F7 )
    {
        wait 0.05;

        if ( self._id_3FF9 == "none" )
            var_0 = var_0 + 0.05;
    }

    var_1 = scripts\mp\gameobjects::_id_803E();
    var_2 = level._id_C74B[var_1];
    scripts\mp\utility\game::_id_D52E( "mp_war_objective_taken", var_1 );
    scripts\mp\utility\game::_id_D52E( "mp_war_objective_lost", var_2 );
    scripts\mp\utility\game::_id_F79E( 11, scripts\mp\gameobjects::_id_803E() );
    scripts\mp\gameobjects::_id_E472();
}

_id_C581()
{
    var_0 = scripts\mp\gameobjects::_id_803E();
    var_1 = level._id_C74B[var_0];
    scripts\mp\gameobjects::_id_1C7C( "enemy" );
    scripts\mp\gameobjects::_id_FB0E( "none" );
    scripts\mp\gameobjects::_id_F283( "friendly", level._id_92AC );
    scripts\mp\gameobjects::_id_F284( "friendly", level._id_92AD );
    scripts\mp\gameobjects::_id_F283( "enemy", level._id_92A8 );
    scripts\mp\gameobjects::_id_F284( "enemy", level._id_92A9 );

    if ( var_0 == "allies" )
        setomnvar( "ui_ctf_flag_allies", -2 );
    else
        setomnvar( "ui_ctf_flag_axis", -2 );

    level._id_3A42[var_0] scripts\mp\gameobjects::allowuse( "friendly" );
    level._id_3A42[var_0] scripts\mp\gameobjects::_id_FB0E( "any" );
    level._id_3A42[var_0] scripts\mp\gameobjects::_id_F283( "friendly", level._id_92A1 );
    level._id_3A42[var_0] scripts\mp\gameobjects::_id_F284( "friendly", level._id_92A2 );
    level._id_3A42[var_0] scripts\mp\gameobjects::_id_F283( "enemy", level._id_929B );
    level._id_3A42[var_0] scripts\mp\gameobjects::_id_F284( "enemy", level._id_929C );
    level._id_3A42[var_0].trigger scripts\mp\entityheadicons::_id_F73D( "none", "", ( 0, 0, 0 ) );
    self.previouscarrier = undefined;
}

_id_C5BB( var_0 )
{
    if ( !level._id_7669 )
    {
        var_1 = var_0.pers["team"];

        if ( var_1 == "allies" )
            var_2 = "axis";
        else
            var_2 = "allies";

        var_0 setclientomnvar( "ui_ctf_flag_carrier", 0 );
        scripts\mp\utility\game::_id_AAE7( "enemy_flag_captured", var_1, "status" );
        scripts\mp\utility\game::_id_AAE7( "flag_captured", var_2, "status" );
        thread scripts\mp\utility\game::_id_115DE( "callout_flagcapture", var_0 );
        var_0 thread scripts\mp\awards::givemidmatchaward( "mode_ctf_cap" );
        var_0 notify( "objective", "captured" );
        var_0 thread scripts\mp\matchdata::_id_AFBA( "capture", var_0.origin );

        if ( getdvarint( "com_codcasterEnabled", 0 ) == 1 )
            var_0 _meth_80C1( 0 );

        var_0 scripts\mp\utility\game::incperstat( "captures", 1 );
        var_0 scripts\mp\persistence::statsetchild( "round", "captures", var_0.pers["captures"] );

        if ( isplayer( var_0 ) )
            var_0 scripts\mp\utility\game::setextrascore0( var_0.pers["captures"] );

        scripts\mp\utility\game::_id_D90B( var_1, var_2, &"MP_ENEMY_FLAG_CAPTURED_BY", &"MP_FRIENDLY_FLAG_CAPTURED_BY", "mp_obj_captured", "mp_enemy_obj_captured", var_0 );

        if ( isdefined( var_0._id_3AF4 ) )
            var_0 _id_5391();

        if ( isdefined( level._id_4B05 ) && isdefined( level._id_4B05[var_1] ) )
            var_0 thread _id_E0FA();

        level._id_4282[var_1] = undefined;
        level._id_4282[var_2] = undefined;
        level._id_115CC[var_2] _id_E471();
        scripts\mp\utility\game::_id_F79E( 9, var_1, var_0 getentitynumber() );
        level scripts\mp\gamescore::giveteamscoreforobjective( var_1, 1, 0 );
    }
}

_id_C56E()
{
    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0._id_1288 = [];
        var_0._id_1289 = [];
        var_0 thread onplayerspawned();
    }
}

onplayerspawned()
{
    self endon( "disconnect" );

    for (;;)
    {
        self waittill( "spawned" );
        self setclientomnvar( "ui_ctf_flag_carrier", 0 );
        scripts\mp\utility\game::setextrascore0( 0 );

        if ( isdefined( self.pers["captures"] ) )
            scripts\mp\utility\game::setextrascore0( self.pers["captures"] );

        scripts\mp\utility\game::_id_F6FB( 0 );

        if ( isdefined( self.pers["returns"] ) )
            scripts\mp\utility\game::_id_F6FB( self.pers["returns"] );

        if ( isdefined( self.team ) )
        {
            foreach ( var_1 in level._id_115CB )
            {
                if ( isdefined( var_1 ) )
                    var_1 _id_10110( var_1._id_C83E, self );
            }
        }
    }
}

_id_20C9()
{
    self endon( "death" );
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( isdefined( self._id_9D81 ) && self._id_9D81 == 1 )
    {
        self notify( "force_cancel_placement" );
        wait 0.05;
    }

    while ( self _meth_81AD() )
        wait 0.05;

    while ( !self isonground() )
        wait 0.05;

    if ( scripts\mp\utility\game::isjuggernaut() )
    {
        self notify( "lost_juggernaut" );
        wait 0.05;
    }

    self.pers["gamemodeLoadout"] = level._id_4B05[self.team];

    if ( isdefined( self._id_F851 ) )
        scripts\mp\perks\perkfunctions::_id_51D7( self._id_F851 );

    var_0 = spawn( "script_model", self.origin );
    var_0.angles = self.angles;
    var_0._id_D424 = self.origin;
    var_0._id_C188 = 1;
    self._id_F851 = var_0;
    self._id_7673 = self.class;
    self.pers["class"] = "gamemode";
    self.pers["lastClass"] = "gamemode";
    self.class = "gamemode";
    self._id_A95C = "gamemode";
    self notify( "faux_spawn" );
    self._id_767C = 1;
    self._id_6BA6 = self getstance();
    thread scripts\mp\playerlogic::_id_108F2( 1 );
    thread _id_1369F();
}

_id_11237()
{
    self notify( "superWatcher" );
    self endon( "superWatcher" );
    self endon( "death" );
    self endon( "disconnect" );
    level endon( "game_ended" );
    self endon( "drop_object" );
    var_0 = self.pers["team"];

    if ( var_0 == "allies" )
        var_1 = "axis";
    else
        var_1 = "allies";

    level._id_115CC[var_1] endon( "reset" );

    for (;;)
    {
        self waittill( "super_started" );
        var_2 = level._id_115CC[var_1];

        if ( !isdefined( var_2 ) )
            continue;

        var_3 = self._id_11234;

        switch ( var_3._id_10E47._id_DE3F )
        {
            case "super_phaseshift":
                var_2 thread scripts\mp\gameobjects::setdropped();
                return;
            case "super_teleport":
            case "super_rewind":
                scripts\engine\utility::waittill_any( "teleport_success", "rewind_success" );
                var_2.ftldrop = 1;
                var_2 thread scripts\mp\gameobjects::setdropped();
                return;
        }
    }
}

_id_1369F()
{
    level endon( "game_ende" );
    self endon( "disconnect" );
    self endon( "death" );
    self waittill( "spawned_player" );
    _id_2480();
}

_id_E0FA()
{
    self endon( "death" );
    self endon( "disconnect" );
    level endon( "game_ended" );

    if ( isdefined( self._id_9D81 ) && self._id_9D81 == 1 )
    {
        self notify( "force_cancel_placement" );
        wait 0.05;
    }

    while ( self _meth_81AD() )
        wait 0.05;

    while ( !self isonground() )
        wait 0.05;

    if ( scripts\mp\utility\game::isjuggernaut() )
    {
        self notify( "lost_juggernaut" );
        wait 0.05;
    }

    self.pers["gamemodeLoadout"] = undefined;

    if ( isdefined( self._id_F851 ) )
        scripts\mp\perks\perkfunctions::_id_51D7( self._id_F851 );

    var_0 = spawn( "script_model", self.origin );
    var_0.angles = self.angles;
    var_0._id_D424 = self.origin;
    var_0._id_C188 = 1;
    self._id_F851 = var_0;
    self notify( "faux_spawn" );
    self._id_6BA6 = self getstance();
    thread scripts\mp\playerlogic::_id_108F2( 1 );
}

_id_C4D4( var_0 )
{

}

_id_C577( var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 )
{
    var_10 = 0;
    var_11 = var_1.origin;
    var_12 = 0;

    if ( isdefined( var_0 ) )
    {
        var_11 = var_0.origin;
        var_12 = var_0 == var_1;
    }

    if ( isdefined( var_1 ) && isplayer( var_1 ) && var_1.pers["team"] != self.pers["team"] )
    {
        if ( isdefined( var_1._id_3AF4 ) && var_12 )
        {
            var_1 thread scripts\mp\awards::givemidmatchaward( "mode_ctf_kill_with_flag" );
            var_10 = 1;
        }

        if ( isdefined( self._id_3AF4 ) )
        {
            var_13 = distancesquared( self.origin, level._id_3A42[self.team].trigger.origin );

            if ( var_13 < 90000 )
                level._id_4282[var_1.team] = var_1;
            else
                level._id_4282[var_1.team] = undefined;

            var_1 thread scripts\mp\awards::givemidmatchaward( "mode_ctf_kill_carrier" );
            scripts\mp\utility\game::_id_F79E( 10, var_1.team, var_1 getentitynumber() );
            var_1 scripts\mp\utility\game::incperstat( "defends", 1 );
            var_1 scripts\mp\persistence::statsetchild( "round", "defends", var_1.pers["defends"] );
            thread scripts\mp\matchdata::_id_AFC5( var_9, "carrying" );
            var_10 = 1;
        }

        if ( !var_10 )
        {
            var_14 = 0;
            var_15 = 0;

            foreach ( var_17 in level._id_115CC )
            {
                var_18 = _id_5720( var_11, self.origin, var_17.curorigin );

                if ( var_18 )
                {
                    if ( var_17._id_C83E == self.team )
                    {
                        var_14 = 1;
                        continue;
                    }

                    var_15 = 1;
                }
            }

            if ( var_14 )
            {
                var_1 thread scripts\mp\awards::givemidmatchaward( "mode_x_assault" );
                thread scripts\mp\matchdata::_id_AFC5( var_9, "defending" );
            }
            else if ( var_15 )
            {
                var_1 thread scripts\mp\awards::givemidmatchaward( "mode_x_defend" );
                var_1 scripts\mp\utility\game::incperstat( "defends", 1 );
                var_1 scripts\mp\persistence::statsetchild( "round", "defends", var_1.pers["defends"] );
                thread scripts\mp\matchdata::_id_AFC5( var_9, "assaulting" );
            }
        }
    }

    if ( isdefined( self._id_3AF4 ) )
        _id_5391();
}

_id_5720( var_0, var_1, var_2 )
{
    var_3 = distancesquared( var_2, var_0 );
    var_4 = distancesquared( var_2, var_1 );

    if ( var_3 < 90000 || var_4 < 90000 )
        return 1;
    else
        return 0;
}

_id_2480()
{
    var_0 = level._id_C74B[self.pers["team"]];
    self attach( level._id_3AF4[var_0], "J_spine4", 1 );
    self._id_3AF4 = level._id_3AF4[var_0];
}

_id_5391()
{
    self _meth_8096( self._id_3AF4, "J_spine4" );
    self._id_3AF4 = undefined;
}

_id_F856()
{
    if ( isusingmatchrulesdata() && getmatchrulesdata( "defaultClasses", "axis", 5, "class", "inUse" ) )
        level._id_4B05["axis"] = scripts\mp\utility\game::_id_7F92( "axis", 5 );

    if ( isusingmatchrulesdata() && getmatchrulesdata( "defaultClasses", "allies", 5, "class", "inUse" ) )
        level._id_4B05["allies"] = scripts\mp\utility\game::_id_7F92( "allies", 5 );
}

_id_E0F9()
{
    level endon( "game_ended" );

    for (;;)
    {
        if ( getdvar( "scr_devRemoveDomFlag", "" ) != "" )
        {
            var_0 = getdvar( "scr_devRemoveDomFlag", "" );

            if ( var_0 == "_a" )
                var_1 = "allies";
            else
                var_1 = "axis";

            if ( var_1 == "allies" )
            {
                if ( game["switchedsides"] )
                    var_1 = game["defenders"];
                else
                    var_1 = game["attackers"];
            }
            else if ( game["switchedsides"] )
                var_1 = game["attackers"];
            else
                var_1 = game["defenders"];

            level._id_115CC[var_1].trigger notify( "move_gameobject" );
            level._id_115CC[var_1] scripts\mp\gameobjects::allowuse( "none" );
            level._id_115CC[var_1].trigger = undefined;
            level._id_115CC[var_1] notify( "deleted" );
            level._id_115CC[var_1].visuals[0] delete();
            level._id_115CB[var_1] delete();
            level._id_3A42[var_1] scripts\mp\gameobjects::allowuse( "none" );
            level._id_3A42[var_1].trigger = undefined;
            level._id_3A42[var_1] notify( "deleted" );

            foreach ( var_3 in level.players )
                var_3 _id_D018( var_1 );

            level._id_115CC[var_1]._id_1343B = "none";
            level._id_115CC[var_1] scripts\mp\gameobjects::_id_F283( "friendly", undefined );
            level._id_115CC[var_1] scripts\mp\gameobjects::_id_F284( "friendly", undefined );
            level._id_115CC[var_1] scripts\mp\gameobjects::_id_F283( "enemy", undefined );
            level._id_115CC[var_1] scripts\mp\gameobjects::_id_F284( "enemy", undefined );
            level._id_3A42[var_1]._id_1343B = "none";
            level._id_3A42[var_1] scripts\mp\gameobjects::_id_F283( "friendly", undefined );
            level._id_3A42[var_1] scripts\mp\gameobjects::_id_F284( "friendly", undefined );
            level._id_3A42[var_1] scripts\mp\gameobjects::_id_F283( "enemy", undefined );
            level._id_3A42[var_1] scripts\mp\gameobjects::_id_F284( "enemy", undefined );
            level._id_115CC[var_1] = undefined;
            setdynamicdvar( "scr_devRemoveDomFlag", "" );
        }

        wait 1;
    }
}

_id_CC19()
{
    level endon( "game_ended" );

    for (;;)
    {
        if ( getdvar( "scr_devPlaceDomFlag", "" ) != "" )
        {
            var_0 = getdvar( "scr_devPlaceDomFlag", "" );

            if ( var_0 == "_a" )
                var_1 = "allies";
            else
                var_1 = "axis";

            if ( var_1 == "allies" )
            {
                if ( game["switchedsides"] )
                    var_1 = game["defenders"];
                else
                    var_1 = game["attackers"];
            }
            else if ( game["switchedsides"] )
                var_1 = game["attackers"];
            else
                var_1 = game["defenders"];

            var_2 = undefined;
            var_2 = spawnstruct();
            var_2 _id_53DD();
            var_2.origin = var_2._id_862F;
            var_2.radius = 30;
            var_2.team = var_1;
            var_3 = spawn( "trigger_radius", var_2.origin, 0, 30, 80 );
            var_4[0] = spawn( "script_model", var_2.origin );
            var_4[0] setmodel( level._id_6E67[var_1] );
            var_5 = scripts\mp\gameobjects::_id_4993( var_1, var_3, var_4, ( 0, 0, 85 ) );
            var_5 scripts\mp\gameobjects::_id_F87C( "enemy", &"MP_GRABBING_FLAG" );
            var_5 scripts\mp\gameobjects::_id_F87C( "friendly", &"MP_RETURNING_FLAG" );
            var_5 scripts\mp\gameobjects::_id_1C7C( "enemy" );
            var_5 scripts\mp\gameobjects::_id_FB0E( "none" );
            var_5 scripts\mp\gameobjects::_id_F283( "friendly", level._id_92AC );
            var_5 scripts\mp\gameobjects::_id_F284( "friendly", level._id_92AD );
            var_5 scripts\mp\gameobjects::_id_F283( "enemy", level._id_92A8 );
            var_5 scripts\mp\gameobjects::_id_F284( "enemy", level._id_92A9 );
            var_5._id_C2BE = 1;
            var_5._id_1CB3 = 1;
            var_5._id_C566 = ::_id_C566;
            var_5._id_C567 = ::_id_C566;
            var_5._id_C4F9 = ::_id_C4F9;
            var_5._id_C581 = ::_id_C581;
            var_5._id_C402 = var_3.radius;
            var_5.origin = var_2.origin;
            var_5._id_01AD = var_1;
            var_5.previouscarrier = undefined;
            var_6 = var_3.origin + ( 0, 0, 32 );
            var_7 = var_3.origin + ( 0, 0, -32 );
            var_8 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
            var_9 = [];
            var_10 = scripts\engine\trace::_id_DCED( var_6, var_7, var_9, var_8 );
            var_5._id_289D = var_10["position"];
            var_11 = vectortoangles( var_10["normal"] );
            var_5._id_289C = anglestoforward( var_11 );
            level._id_115CB[var_1] = _id_4A22( var_1, var_5 );

            if ( var_1 == "allies" )
            {
                if ( game["switchedsides"] )
                    level._id_115CC[game["defenders"]] = var_5;
                else
                    level._id_115CC[game["attackers"]] = var_5;
            }
            else if ( game["switchedsides"] )
                level._id_115CC[game["attackers"]] = var_5;
            else
                level._id_115CC[game["defenders"]] = var_5;

            var_4 = [];
            var_3 = spawn( "trigger_radius", var_2.origin - ( 0, 0, var_2.radius / 2 ), 0, var_2.radius, 80 );
            var_3._id_C000 = 1;
            var_3._id_AD48 = 1;
            var_3._id_28AC = var_3.origin;
            var_12 = scripts\mp\gameobjects::createuseobject( var_1, var_3, var_4, ( 0, 0, 115 ) );
            var_12 scripts\mp\gameobjects::allowuse( "friendly" );
            var_12 scripts\mp\gameobjects::_id_FB0E( "any" );
            var_12 scripts\mp\gameobjects::_id_F283( "friendly", level._id_92A1 );
            var_12 scripts\mp\gameobjects::_id_F284( "friendly", level._id_92A2 );
            var_12 scripts\mp\gameobjects::_id_F283( "enemy", level._id_929B );
            var_12 scripts\mp\gameobjects::_id_F284( "enemy", level._id_929C );
            var_12 scripts\mp\gameobjects::_id_FB08( 0 );
            var_12 scripts\mp\gameobjects::_id_F76A( level._id_115CC[scripts\mp\utility\game::_id_8027( var_1 )] );
            level._id_3A42[level._id_C74B[var_1]] scripts\mp\gameobjects::_id_F76A( var_5 );
            var_12._id_C5BB = ::_id_C5BB;
            var_12._id_C4D4 = ::_id_C4D4;
            var_6 = var_3.origin + ( 0, 0, 32 );
            var_7 = var_3.origin + ( 0, 0, -32 );
            var_8 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
            var_9 = [];
            var_10 = scripts\engine\trace::_id_DCED( var_6, var_7, var_9, var_8 );
            var_11 = vectortoangles( var_10["normal"] );
            var_13 = anglestoforward( var_11 );
            var_14 = anglestoright( var_11 );

            if ( var_1 == "allies" )
            {
                if ( game["switchedsides"] )
                    level._id_3A42[game["defenders"]] = var_12;
                else
                    level._id_3A42[game["attackers"]] = var_12;
            }
            else if ( game["switchedsides"] )
                level._id_3A42[game["attackers"]] = var_12;
            else
                level._id_3A42[game["defenders"]] = var_12;

            setdynamicdvar( "scr_devPlaceDomFlag", "" );
        }

        wait 1;
    }
}

_id_53DD()
{
    var_0 = level.players[0].origin + ( 0, 0, 32 );
    var_1 = level.players[0].origin + ( 0, 0, -1000 );
    var_2 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
    var_3 = [];
    var_4 = scripts\engine\trace::_id_DCED( var_0, var_1, var_3, var_2 );
    self._id_862F = var_4["position"];
    return var_4["fraction"] != 0 && var_4["fraction"] != 1;
}
