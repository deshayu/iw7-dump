// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

main()
{
    scripts\mp\globallogic::init();
    scripts\mp\globallogic::setupcallbacks();

    if ( isusingmatchrulesdata() )
    {
        level.initializematchrules = ::initializematchrules;
        [[ level.initializematchrules ]]();
        level thread scripts\mp\utility\game::reinitializematchrulesonmigration();
    }
    else
    {
        scripts\mp\utility\game::registerroundswitchdvar( level.gametype, 0, 0, 9 );
        scripts\mp\utility\game::registertimelimitdvar( level.gametype, 10 );
        scripts\mp\utility\game::registerscorelimitdvar( level.gametype, 85 );
        scripts\mp\utility\game::registerroundlimitdvar( level.gametype, 1 );
        scripts\mp\utility\game::registerwinlimitdvar( level.gametype, 1 );
        scripts\mp\utility\game::registernumlivesdvar( level.gametype, 0 );
        scripts\mp\utility\game::registerhalftimedvar( level.gametype, 0 );
    }

    updategametypedvars();
    level._id_1C26 = [];
    level._id_26F2 = [];
    level._id_58C4 = [];
    scripts\mp\gametypes\obj_grindzone::init();
    level.teambased = 1;
    level.onstartgametype = ::onstartgametype;
    level.getspawnpoint = ::getspawnpoint;
    level.onnormaldeath = ::onnormaldeath;
    level.onspawnplayer = ::onspawnplayer;
    level._id_4507["vanish"] = loadfx( "vfx/core/impacts/small_snowhit" );
}

initializematchrules()
{
    scripts\mp\utility\game::setcommonrulesfrommatchdata();
    setdynamicdvar( "scr_grind_bankTime", getmatchrulesdata( "grindData", "bankTime" ) );
    setdynamicdvar( "scr_grind_bankRate", getmatchrulesdata( "grindData", "bankRate" ) );
    setdynamicdvar( "scr_grind_bankCaptureTime", getmatchrulesdata( "grindData", "bankCaptureTime" ) );
    setdynamicdvar( "scr_grind_megaBankLimit", getmatchrulesdata( "grindData", "megaBankLimit" ) );
    setdynamicdvar( "scr_grind_bankBonus", getmatchrulesdata( "grindData", "megaBankBonus" ) );
    setdynamicdvar( "scr_grind_halftime", 0 );
    scripts\mp\utility\game::registerhalftimedvar( "grind", 0 );
    setdynamicdvar( "scr_grind_promode", 0 );
}

onstartgametype()
{
    setclientnamemode( "auto_change" );

    if ( !isdefined( game["switchedsides"] ) )
        game["switchedsides"] = 0;

    scripts\mp\utility\game::setobjectivetext( "allies", &"OBJECTIVES_WAR" );
    scripts\mp\utility\game::setobjectivetext( "axis", &"OBJECTIVES_WAR" );

    if ( level._id_10A56 )
    {
        scripts\mp\utility\game::setobjectivescoretext( "allies", &"OBJECTIVES_WAR" );
        scripts\mp\utility\game::setobjectivescoretext( "axis", &"OBJECTIVES_WAR" );
    }
    else
    {
        scripts\mp\utility\game::setobjectivescoretext( "allies", &"OBJECTIVES_WAR_SCORE" );
        scripts\mp\utility\game::setobjectivescoretext( "axis", &"OBJECTIVES_WAR_SCORE" );
    }

    scripts\mp\utility\game::setobjectivehinttext( "allies", &"OBJECTIVES_WAR_HINT" );
    scripts\mp\utility\game::setobjectivehinttext( "axis", &"OBJECTIVES_WAR_HINT" );
    _id_98CE();
    _id_4A1E();
    level._id_58BE = ::_id_58BE;
    var_0[0] = level.gametype;
    var_0[1] = "dom";
    scripts\mp\gameobjects::main( var_0 );
    _id_4A31();
    level thread _id_C56E();
    level thread _id_E179();
}

updategametypedvars()
{
    scripts\mp\gametypes\common::updategametypedvars();
    level._id_2811 = scripts\mp\utility\game::_id_5F6B( "bankTime", 2, 0, 10 );
    level._id_2810 = scripts\mp\utility\game::_id_5F6D( "bankRate", 1, 1, 10 );
    level._id_280F = scripts\mp\utility\game::_id_5F6D( "bankCaptureTime", 0, 0, 10 );
    level._id_B550 = scripts\mp\utility\game::_id_5F6D( "megaBankLimit", 5, 5, 15 );
    level._id_B54F = scripts\mp\utility\game::_id_5F6D( "megaBankBonus", 150, 0, 750 );
}

onspawnplayer()
{
    if ( isdefined( self._id_11422 ) )
        self setclientomnvar( "ui_grind_tags", self._id_11422 );
}

_id_4A1E()
{
    level.dogtags = [];

    for ( var_0 = 0; var_0 < 30; var_0++ )
    {
        var_1[0] = spawn( "script_model", ( 0, 0, 0 ) );
        var_1[0] setmodel( "dogtags_iw7_foe" );
        var_1[1] = spawn( "script_model", ( 0, 0, 0 ) );
        var_1[1] setmodel( "dogtags_iw7_friend" );
        var_1[0] scriptmodelplayanim( "mp_dogtag_spin" );
        var_1[1] scriptmodelplayanim( "mp_dogtag_spin" );
        var_1[0] hide();
        var_1[1] hide();
        var_1[0] _meth_8588();
        var_1[1] _meth_8588();
        var_2 = spawn( "trigger_radius", ( 0, 0, 0 ), 0, 32, 32 );
        var_2._id_0336 = "trigger_dogtag";
        var_2 hide();
        var_3 = spawnstruct();
        var_3.type = "useObject";
        var_3.curorigin = var_2.origin;
        var_3.entnum = var_2 getentitynumber();
        var_3._id_AA3E = 0;
        var_3.visuals = var_1;
        var_3._id_C363 = ( 0, 0, 16 );
        var_3.trigger = var_2;
        var_3._id_127CB = "proximity";
        var_3 scripts\mp\gameobjects::allowuse( "none" );
        level.dogtags[level.dogtags.size] = var_3;
    }
}

_id_8191()
{
    var_0 = level.dogtags[0];
    var_1 = gettime();

    foreach ( var_3 in level.dogtags )
    {
        if ( !isdefined( var_3._id_AA3E ) )
            continue;

        if ( var_3._id_9A52 == "none" )
        {
            var_0 = var_3;
            break;
        }

        if ( var_3._id_AA3E < var_1 )
        {
            var_1 = var_3._id_AA3E;
            var_0 = var_3;
        }
    }

    var_0 notify( "reset" );
    var_0 scripts\mp\gameobjects::_id_987E();
    var_0._id_AA3E = gettime();
    return var_0;
}

_id_10915( var_0, var_1 )
{
    var_2 = var_0 + ( 0, 0, 14 );
    var_3 = ( 0, randomfloat( 360 ), 0 );
    var_4 = anglestoforward( var_3 );
    var_5 = randomfloatrange( 30, 150 );
    var_6 = var_2 + var_5 * var_4;
    var_2 = playerphysicstrace( var_2, var_6 );
    var_7 = _id_8191();
    var_7.curorigin = var_2;
    var_7.trigger.origin = var_2;
    var_7.visuals[0].origin = var_2;
    var_7.visuals[1].origin = var_2;
    var_7.trigger show();
    var_7 scripts\mp\gameobjects::allowuse( "any" );
    var_7.visuals[0] thread _id_10159( var_7, scripts\mp\utility\game::_id_8027( var_1 ) );
    var_7.visuals[1] thread _id_10159( var_7, var_1 );
    var_7.visuals[0] _meth_8588();
    var_7.visuals[1] _meth_8588();
    playloopsound( var_2, "mp_grind_token_drop" );
    return var_7;
}

_id_10159( var_0, var_1 )
{
    var_0 endon( "death" );
    var_0 endon( "reset" );
    self hide();

    foreach ( var_3 in level.players )
    {
        if ( _id_D36B( var_3 ) )
        {
            if ( var_3.team == var_1 )
                self _meth_8388( var_3 );

            if ( var_3.team == "spectator" && var_1 == "allies" )
                self _meth_8388( var_3 );
        }
    }

    for (;;)
    {
        level scripts\engine\utility::waittill_any( "joined_team", "update_phase_visibility" );
        self hide();

        foreach ( var_3 in level.players )
        {
            if ( _id_D36B( var_3 ) )
            {
                if ( var_3.team == var_1 )
                    self _meth_8388( var_3 );
            }

            if ( var_3.team == "spectator" && var_1 == "allies" )
                self _meth_8388( var_3 );

            if ( var_0._id_13383 == var_3.team && var_3 == var_0.attacker )
                scripts\mp\objidpoolmanager::minimap_objective_state( var_0._id_C2B5, "invisible" );
        }
    }
}

_id_D36B( var_0 )
{
    if ( scripts\mp\equipment\phase_shift::_id_9DDF( var_0 ) )
        return 0;

    return 1;
}

_id_BA31( var_0 )
{
    level endon( "game_ended" );
    var_0 endon( "deleted" );
    var_0 endon( "reset" );

    for (;;)
    {
        var_0.trigger waittill( "trigger", var_1 );

        if ( !scripts\mp\utility\game::isreallyalive( var_1 ) )
            continue;

        if ( var_1 scripts\mp\utility\game::isusingremote() || isdefined( var_1._id_108DB ) )
            continue;

        if ( isdefined( var_1.classname ) && var_1.classname == "script_vehicle" )
            continue;

        if ( isagent( var_1 ) && isdefined( var_1.owner ) )
            var_1 = var_1.owner;

        if ( !scripts\mp\equipment\phase_shift::_id_213D( var_0, var_1 ) )
            continue;

        var_0.visuals[0] hide();
        var_0.visuals[1] hide();
        var_0.trigger hide();
        var_0.curorigin = ( 0, 0, 1000 );
        var_0.trigger.origin = ( 0, 0, 1000 );
        var_0.visuals[0].origin = ( 0, 0, 1000 );
        var_0.visuals[1].origin = ( 0, 0, 1000 );
        var_0 scripts\mp\gameobjects::allowuse( "none" );

        if ( var_0.team != var_1.team )
        {
            var_1 _id_D414( var_1._id_11422 + 1 );
            var_1 thread scripts\mp\utility\game::_id_83B4( "tag_collected" );
        }

        var_1 playsound( "mp_killconfirm_tags_pickup" );

        if ( isdefined( level._id_112C0 ) && level._id_112C0 )
        {
            if ( isdefined( var_1.cranked ) && var_1.cranked )
                var_1 scripts\mp\utility\game::_id_F6A8( "kill" );
            else
                var_1 scripts\mp\utility\game::_id_C4DB( undefined, var_1 );
        }

        playloopsound( var_1.origin, "mp_grind_token_pickup" );
        break;
    }
}

_id_C56E()
{
    for (;;)
    {
        level waittill( "connected", var_0 );
        var_0._id_9F36 = 0;
        var_0 thread _id_B9E5();
    }
}

_id_D414( var_0 )
{
    self._id_11422 = var_0;
    self._id_0150 = var_0;

    if ( var_0 > 999 )
        var_0 = 999;

    self setclientomnvar( "ui_grind_tags", var_0 );
}

_id_B9E5()
{
    self endon( "disconnect" );

    for (;;)
    {
        scripts\engine\utility::waittill_any( "joined_team", "joined_spectators" );
        _id_D414( 0 );

        if ( self.team == "allies" )
        {
            level._id_1C26 = scripts\engine\utility::_id_2279( level._id_1C26, self );
            continue;
        }

        if ( self.team == "axis" )
            level._id_26F2 = scripts\engine\utility::_id_2279( level._id_26F2, self );
    }
}

_id_8EC5( var_0 )
{
    level waittill( "game_ended" );

    if ( isdefined( var_0 ) )
        var_0.alpha = 0;
}

_id_4A31()
{
    level._id_13FC1 = [];
    var_0 = getentarray( "grind_location", "targetname" );

    foreach ( var_2 in var_0 )
        level._id_13FC1[level._id_13FC1.size] = var_2;

    level._id_C2A8 = level._id_13FC1;

    for ( var_4 = 0; var_4 < level._id_13FC1.size; var_4++ )
    {
        var_5 = scripts\mp\gametypes\obj_grindzone::_id_FAD5( var_4 );
        var_5 thread _id_E8DD();
        level._id_13FC1[var_4]._id_130AC = var_5;
        var_5._id_ABF0 = level._id_13FC1[var_4];
    }
}

_id_9E57( var_0, var_1 )
{
    if ( scripts\mp\utility\game::isreallyalive( var_0 ) && var_0 istouching( var_1.trigger ) && var_1._id_C83E == var_0.team )
        return 1;

    return 0;
}

_id_E8DD()
{
    level endon( "game_ended" );
    self endon( "stop_trigger" + self._id_01AD );

    for (;;)
    {
        self.trigger waittill( "trigger", var_0 );

        if ( self._id_10B51 )
            continue;

        if ( isagent( var_0 ) )
            continue;

        if ( !isplayer( var_0 ) )
            continue;

        if ( var_0._id_9F36 )
            continue;

        var_0._id_9F36 = 1;
        level thread _id_D9B4( var_0, self );
    }
}

_id_E179()
{
    level waittill( "game_ended" );

    foreach ( var_1 in level.players )
    {
        if ( !isdefined( var_1 ) )
            continue;

        if ( !isdefined( var_1._id_11422 ) )
            continue;

        var_1._id_11422 = 0;
    }
}

_id_D9B4( var_0, var_1 )
{
    while ( var_0._id_11422 && _id_9E57( var_0, var_1 ) && !var_1._id_10B51 )
    {
        var_0 playsoundtoplayer( "mp_grind_token_banked", var_0 );

        if ( var_0._id_11422 >= level._id_B550 )
        {
            _id_EC23( var_0, level._id_B550 );
            var_2 = scripts\mp\rank::getscoreinfovalue( "tag_score" );
            var_2 = var_2 * level._id_B550;
            var_0 thread scripts\mp\utility\game::_id_83B4( "mega_bank", var_0.weapon, var_2 + level._id_B54F );
            var_0 scripts\mp\missions::_id_D991( "ch_mega_bank" );
        }
        else
        {
            var_3 = level._id_2810;

            if ( var_3 > var_0._id_11422 )
                var_3 = var_0._id_11422;

            _id_EC23( var_0, var_3 );

            for ( var_4 = 0; var_4 < var_3; var_4++ )
                var_0 thread scripts\mp\utility\game::_id_83B4( "tag_score" );
        }

        if ( isdefined( level._id_112C0 ) && level._id_112C0 && isdefined( var_0.cranked ) && var_0.cranked )
            var_0 scripts\mp\utility\game::_id_F6A8( "kill" );

        var_0 scripts\mp\missions::_id_D992( "ch_grinder" );
        wait( level._id_2811 );
    }

    var_1 scripts\mp\gametypes\obj_grindzone::_id_F7AE();
    var_0._id_9F36 = 0;
}

_id_EC23( var_0, var_1 )
{
    var_0 _id_D414( var_0._id_11422 - var_1 );
    scripts\mp\gamescore::giveteamscoreforobjective( var_0.team, var_1, 0 );
    var_0 scripts\mp\utility\game::incperstat( "confirmed", var_1 );
    var_0 scripts\mp\persistence::statsetchild( "round", "confirmed", var_0.pers["confirmed"] );
    var_0 scripts\mp\utility\game::setextrascore0( var_0.pers["confirmed"] );
}

_id_98CE()
{
    scripts\mp\spawnlogic::_id_F62D( "TDM" );
    level.spawnmins = ( 0, 0, 0 );
    level.spawnmaxs = ( 0, 0, 0 );
    scripts\mp\spawnlogic::addstartspawnpoints( "mp_tdm_spawn_allies_start" );
    scripts\mp\spawnlogic::addstartspawnpoints( "mp_tdm_spawn_axis_start" );
    scripts\mp\spawnlogic::addspawnpoints( "allies", "mp_tdm_spawn" );
    scripts\mp\spawnlogic::addspawnpoints( "axis", "mp_tdm_spawn" );
    level.mapcenter = scripts\mp\spawnlogic::findboxcenter( level.spawnmins, level.spawnmaxs );
    setmapcenter( level.mapcenter );
}

getspawnpoint()
{
    var_0 = self.pers["team"];

    if ( game["switchedsides"] )
        var_0 = scripts\mp\utility\game::_id_8027( var_0 );

    if ( scripts\mp\spawnlogic::_id_100BA() )
    {
        var_1 = scripts\mp\spawnlogic::getspawnpointarray( "mp_tdm_spawn_" + var_0 + "_start" );
        var_2 = scripts\mp\spawnlogic::getspawnpoint_startspawn( var_1 );
    }
    else
    {
        var_1 = scripts\mp\spawnlogic::getteamspawnpoints( var_0 );
        var_2 = scripts\mp\spawnscoring::getspawnpoint( var_1 );
    }

    return var_2;
}

onnormaldeath( var_0, var_1, var_2, var_3, var_4 )
{
    scripts\mp\gametypes\common::onnormaldeath( var_0, var_1, var_2, var_3, var_4 );
    level thread _id_5EEB( var_0, var_1 );
}

_id_5EEB( var_0, var_1 )
{
    if ( isagent( var_0 ) )
        return;

    if ( var_0._id_11422 > 9 )
        var_2 = 10;
    else if ( var_0._id_11422 > 0 )
        var_2 = var_0._id_11422;
    else
        var_2 = 0;

    for ( var_3 = 0; var_3 < var_2; var_3++ )
    {
        var_4 = _id_10915( var_0.origin, var_0.team );
        var_4.team = var_0.team;
        var_4.victim = var_0;
        var_4.attacker = var_1;
        level notify( "new_tag_spawned", var_4 );
        level thread _id_BA31( var_4 );
    }

    var_5 = var_0._id_11422 - var_2;
    var_5 = int( max( 0, var_5 ) );
    var_0 _id_D414( var_5 );
}

_id_58BE( var_0 )
{
    if ( isplayer( var_0 ) )
        var_0 scripts\mp\utility\game::_id_F6FB( var_0.pers["denied"] );
}

_id_E15D()
{
    self endon( "game_ended" );

    for (;;)
    {
        if ( getdvar( "scr_devRemoveDomFlag", "" ) != "" )
        {
            var_0 = getdvar( "scr_devRemoveDomFlag", "" );

            foreach ( var_2 in level._id_13FC1 )
            {
                if ( isdefined( var_2._id_130AC._id_01AD ) && var_2._id_130AC._id_01AD == var_0 )
                {
                    var_2._id_130AC notify( "stop_trigger" + var_2._id_130AC._id_01AD );
                    var_2._id_130AC scripts\mp\gameobjects::allowuse( "none" );
                    var_2._id_130AC.trigger = undefined;
                    var_2._id_130AC notify( "deleted" );
                    var_2._id_130AC._id_1343B = "none";
                    var_2._id_130AC scripts\mp\gameobjects::_id_F283( "friendly", undefined );
                    var_2._id_130AC scripts\mp\gameobjects::_id_F284( "friendly", undefined );
                    var_2._id_130AC scripts\mp\gameobjects::_id_F283( "enemy", undefined );
                    var_2._id_130AC scripts\mp\gameobjects::_id_F284( "enemy", undefined );
                    var_3 = [];

                    for ( var_4 = 0; var_4 < level._id_C2A8.size; var_4++ )
                    {
                        if ( level._id_C2A8[var_4]._id_EDF9 != var_0 )
                            var_3[var_3.size] = level._id_C2A8[var_4];
                    }

                    level._id_C2A8 = var_3;
                    var_3 = [];

                    for ( var_4 = 0; var_4 < level._id_13FC1.size; var_4++ )
                    {
                        if ( level._id_13FC1[var_4]._id_130AC._id_01AD != var_0 )
                            var_3[var_3.size] = level._id_13FC1[var_4];
                    }

                    level._id_13FC1 = var_3;
                    break;
                }
            }

            setdynamicdvar( "scr_devRemoveDomFlag", "" );
        }

        wait 1;
    }
}

_id_CC27()
{
    self endon( "game_ended" );

    for (;;)
    {
        if ( getdvar( "scr_devPlaceDomFlag", "" ) != "" )
        {
            var_0 = getdvar( "scr_devPlaceDomFlag", "" );
            var_1 = undefined;
            var_2 = getentarray( "grind_location", "targetname" );

            foreach ( var_4 in var_2 )
            {
                if ( "_" + var_4._id_EDF9 == var_0 )
                    var_1 = var_4;
            }

            var_1.origin = level.players[0].origin;
            var_1._id_C83E = "neutral";
            var_6 = var_1.origin + ( 0, 0, 32 );
            var_7 = var_1.origin + ( 0, 0, -32 );
            var_8 = bullettrace( var_6, var_7, 0, undefined );
            var_1.origin = var_8["position"];
            var_1._id_12D77 = vectortoangles( var_8["normal"] );
            var_1._id_0143 = anglestoforward( var_1._id_12D77 );
            var_1._id_0267 = anglestoright( var_1._id_12D77 );
            var_9[0] = spawn( "script_model", var_1.origin );
            var_9[0].angles = var_1.angles;
            level._id_C2A8[level._id_C2A8.size] = var_1;
            level._id_13FC1[level._id_13FC1.size] = var_1;
            var_10 = spawn( "trigger_radius", var_1.origin, 0, 90, 128 );
            var_10._id_EDF9 = var_1._id_EDF9;
            var_1 = var_10;
            var_11 = scripts\mp\gameobjects::createuseobject( "neutral", var_1, var_9, ( 0, 0, 100 ) );
            var_12 = var_0;
            var_11._id_01AD = var_12;
            var_11 thread _id_E8DD();
            var_11 scripts\mp\gameobjects::allowuse( "enemy" );
            var_11 scripts\mp\gameobjects::_id_FB08( level._id_280F );
            var_11 scripts\mp\gameobjects::_id_FB07( &"MP_SECURING_POSITION" );
            var_11 scripts\mp\gameobjects::_id_F283( "friendly", "waypoint_defend" + var_12 );
            var_11 scripts\mp\gameobjects::_id_F284( "friendly", "waypoint_defend" + var_12 );
            var_11 scripts\mp\gameobjects::_id_F283( "enemy", "waypoint_captureneutral" + var_12 );
            var_11 scripts\mp\gameobjects::_id_F284( "enemy", "waypoint_captureneutral" + var_12 );
            var_11 scripts\mp\gameobjects::_id_FB0E( "any" );
            var_11 scripts\mp\gameobjects::_id_3897( 1 );
            var_11._id_C5BB = scripts\mp\gametypes\obj_grindzone::_id_13FB6;
            var_11._id_C4CB = scripts\mp\gametypes\obj_grindzone::_id_13FB7;
            var_11._id_C5BA = scripts\mp\gametypes\obj_grindzone::_id_13FB5;
            var_11._id_C4D9 = scripts\mp\gametypes\obj_grindzone::_id_13FB3;
            var_11._id_C5B9 = scripts\mp\gametypes\obj_grindzone::_id_13FB4;
            var_11._id_3FF7 = level._id_280F * 1000;
            var_6 = var_11.visuals[0].origin + ( 0, 0, 32 );
            var_7 = var_11.visuals[0].origin + ( 0, 0, -32 );
            var_13 = scripts\engine\trace::_id_48BC( 1, 1, 1, 1, 0, 1, 1 );
            var_14 = [];
            var_8 = scripts\engine\trace::_id_DCED( var_6, var_7, var_14, var_13 );
            var_11._id_289D = var_8["position"];
            var_15 = vectortoangles( var_8["normal"] );
            var_15 = -1 * var_15;
            var_11._id_289C = anglestoforward( var_15 );
            var_11 scripts\mp\gametypes\obj_grindzone::_id_F7AD();

            for ( var_16 = 0; var_16 < level._id_C2A8.size; var_16++ )
            {
                level._id_C2A8[var_16]._id_130AC = var_11;
                var_11._id_ABF0 = level._id_C2A8[var_16];
            }

            level._id_13FC1[level._id_13FC1.size]._id_130AC = var_11;
            setdynamicdvar( "scr_devPlaceDomFlag", "" );
        }

        wait 1;
    }
}
