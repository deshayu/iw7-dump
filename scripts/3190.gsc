// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

_id_8E15( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "remove_helmet" )
    {
        if ( self._id_8E14 == "head" )
            _id_0F76::_id_BCBC();
    }
    else if ( var_0 == "put_on_helmet" )
    {
        if ( self._id_8E14 == "hand" )
            _id_0F76::_id_BCBD();
    }
}

_id_11809( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
    {
        self._id_13F9D unlink();
        self._id_13F9D delete();
        self._id_13F9D = undefined;
        var_4 = self gettagorigin( "J_Wrist_ri" );

        if ( !isdefined( self._id_010C ) )
            return;

        var_5 = self._id_010C.origin + ( 0, 0, 0 );
        magicbullet( "iw7_zombiepiece_mp", var_4, var_5, self );
    }
}

_id_8485( var_0, var_1, var_2, var_3 )
{
    if ( var_0 == "hit" )
    {
        if ( isdefined( self._id_13FAB ) && !isdefined( self._id_13F9D ) && isalive( self._id_13FAB ) )
        {
            self._id_13FAB._id_74B5 = 1;
            self._id_13FAB._id_C026 = 1;
            self._id_13FAB._id_54CB = 1;
            self._id_13FAB._id_4E4C = "grabbed";
            self._id_13FAB _meth_80B0( self._id_13FAB.health + 50000, self.origin );
            var_4 = self gettagorigin( "J_Wrist_ri" );
            var_5 = spawn( "script_model", var_4 );
            var_5 setmodel( "tag_origin" );
            var_5 linkto( self, "J_Wrist_ri", ( 0, 0, 0 ), ( 0, 0, 0 ) );
            self._id_13F9D = var_5;
        }
    }
}

_id_116EF( var_0, var_1, var_2 )
{
    self._id_AA2C = gettime();
    self._id_3322 = 0;
    self._id_29D1 = undefined;
}

_id_D54C( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_29D1 = 1;
    level thread _id_0D62::_id_CE9C( self, "attack_toss", 1 );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_116EB( var_0, var_1, var_2 )
{
    self._id_13FAB = undefined;
    self._id_13F9E = undefined;
    self._id_3324 = undefined;
}

_id_D48E( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_13FAB = self._id_13F9E;
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_D48D( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    self._id_13FAB = self._id_13F9E;
    var_4 = self._id_13FAB.origin - self.origin;
    var_5 = vectornormalize( var_4 );
    var_6 = vectortoangles( var_5 );
    self orientmode( "face angle abs", var_6 );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_1001D( var_0, var_1, var_2, var_3 )
{
    if ( isdefined( self._id_13F9D ) )
        return 0;

    if ( !isdefined( self._id_13F9E ) )
        return 0;

    if ( scripts\engine\utility::_id_9CEE( self._id_3324 ) )
        return 1;

    return 0;
}

_id_100AC( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_13F9D ) || !isdefined( self._id_3322 ) )
        return 0;

    if ( !isdefined( self._id_010C ) )
        return 0;

    if ( self._id_8E14 == "hand" )
        return 0;

    var_4 = anglestoforward( self.angles );
    var_5 = self._id_010C.origin - self.origin;
    var_5 = ( var_5[0], var_5[1], 0 );
    var_5 = vectornormalize( var_5 );

    if ( vectordot( var_4, var_5 ) < 0 )
        return 0;

    return 1;
}

_id_10055( var_0, var_1, var_2, var_3 )
{
    var_4 = sortbydistance( level.players, self.origin );
    var_5 = 0;

    for ( var_6 = 0; var_6 < var_4.size; var_6++ )
    {
        if ( distancesquared( self.origin, var_4[var_6].origin ) < 40000 )
        {
            var_5++;
            continue;
        }

        break;
    }

    if ( var_5 > 1 )
        return 1;

    return randomint( 100 ) < 50;
}

_id_3EFA( var_0, var_1, var_2 )
{
    if ( self._id_8E14 == "hand" )
        return scripts\asm\asm::_id_2358( var_1, "attack_slam_helmet" );

    return scripts\asm\asm::_id_2358( var_1, "attack_slam" );
}

_id_D51C( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    var_4 = scripts\asm\asm_mp::_id_2337( var_0, var_1 );
    var_5 = self getanimentry( var_1, var_4 );
    var_6 = getanimlength( var_5 );
    var_7 = var_6 * 0.33;
    level thread _id_0D62::_id_CE9C( self, "attack_ground_pound", 1 );
    thread _id_895D( var_7 );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_FFE2( var_0, var_1, var_2, var_3 )
{
    if ( scripts\engine\utility::_id_9CEE( self._id_2997 ) )
        return 1;

    return 0;
}

_id_895D( var_0 )
{
    self endon( "death" );
    wait( var_0 );
    var_1 = _id_0C73::_id_7AD3();
    self setscriptablepartstate( "slam_blast", "active" );

    foreach ( var_3 in level.players )
    {
        if ( isalive( var_3 ) )
        {
            if ( distancesquared( self.origin, var_3.origin ) < 40000 )
                _id_0C73::_id_5904( var_3, var_1, "MOD_IMPACT" );
        }
    }

    if ( scripts\engine\utility::_id_9CEE( self._id_2997 ) )
    {
        self._id_2997 = undefined;
        var_5 = scripts\mp\mp_agent::_id_7D95( "all" );

        foreach ( var_7 in var_5 )
        {
            if ( var_7 == self )
                continue;

            if ( !scripts\engine\utility::_id_9CEE( var_7._id_9E0C ) )
                continue;

            var_7 _meth_80B0( var_7.health + 100, self.origin, undefined, undefined, "MOD_IMPACT" );
        }
    }

    wait 0.25;
    self setscriptablepartstate( "slam_blast", "inactive" );
}

_id_100A0( var_0, var_1, var_2, var_3 )
{
    return 0;
}

_id_FFF1( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_010C ) )
        return 0;

    if ( scripts\engine\utility::_id_9CEE( self._id_2B5A ) )
        return 1;

    return 0;
}

_id_10063( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_527A ) || !isdefined( self._id_8E14 ) )
        return 0;

    if ( self._id_8E14 != self._id_527A && self._id_527A == "head" )
        return 1;

    return 0;
}

_id_10069( var_0, var_1, var_2, var_3 )
{
    if ( !isdefined( self._id_527A ) || !isdefined( self._id_8E14 ) )
        return 0;

    if ( self._id_8E14 != self._id_527A && self._id_527A == "hand" )
        return 1;

    return 0;
}

_id_390C( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_010C ) && self._id_8E14 == "head";
}

_id_9E70( var_0, var_1, var_2, var_3 )
{
    return !scripts\engine\utility::_id_9CEE( self._id_2B5A );
}

_id_D4BB( var_0, var_1, var_2, var_3 )
{
    self._id_2B5B = 1;
    thread _id_CD6C();
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_CD6C()
{
    playfxontag( level._effect["vfx_zmb_brute_warn_01"], self, "tag_eye" );
    level thread _id_0D62::_id_CE9C( self, "attack_laser", 1 );
}

_id_58E5( var_0, var_1, var_2, var_3 )
{
    self._id_01C2 = self._id_010C.origin + ( 0, 0, 40 );
    self._id_01C4 = undefined;
    thread _id_8979( var_1 );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_116F8( var_0, var_1, var_2 )
{
    self._id_01C4 = undefined;
    self._id_01C2 = undefined;
    self._id_2B5A = undefined;
    self._id_2B5B = undefined;
    self setscriptablepartstate( "laser_flare", "inactive" );
}

terminatelaserattackprep( var_0, var_1, var_2 )
{
    if ( !_id_1FB4( var_0, var_1, undefined, var_2 ) )
        _id_116F8( var_0, var_1, var_2 );
}

_id_8979( var_0 )
{
    self endon( var_0 + "_finished" );
    self setscriptablepartstate( "laser_hint", "off" );
    self setscriptablepartstate( "laser_flare", "active" );
    var_1 = getdvarint( "scr_debugLaser", 0 );

    if ( !isdefined( var_1 ) )
        var_1 = 0;

    var_2 = distance( self.origin, self._id_01C2 );
    wait 0.2;
    var_3 = 8.0;

    for ( var_4 = 0; var_4 < var_3; var_4++ )
    {
        self _meth_837B( 1, undefined, 1, 1 );
        wait 0.05;
    }

    if ( var_1 )
        var_3 = 99999999;
    else
        var_3 = 60.0;

    for ( var_4 = 0; var_4 < var_3; var_4++ )
    {
        if ( isdefined( self._id_010C ) )
        {
            var_5 = self._id_010C.origin + ( 0, 0, 40 );
            var_6 = var_5 - self._id_01C2;
            var_7 = length( var_6 );

            if ( var_7 < 10.0 )
                self._id_01C2 = var_5;
            else
            {
                var_8 = vectornormalize( var_6 );
                var_9 = var_8 * 200 * 0.05;
                self._id_01C2 = self._id_01C2 + var_9;
            }
        }

        self _meth_837B( 1, self._id_01C2, 1, 1 );
        _id_FF5C();
        wait 0.05;
    }

    self setscriptablepartstate( "laser_flare", "inactive" );
    self._id_01C2 = undefined;
    self._id_01C4 = self._id_010C;
    self._id_2B5A = 0;
}

_id_FF5C()
{
    if ( _id_8BB1( self._id_01F1, "tag_flash" ) )
    {
        var_0 = anglestoforward( self gettagangles( "tag_flash" ) );
        var_1 = var_0 * 1000;
        var_2 = self gettagorigin( "tag_flash" );
    }
    else
    {
        var_0 = anglestoforward( self gettagangles( "tag_eye" ) );
        var_1 = var_0 * 1000;
        var_2 = self gettagorigin( "tag_eye" );
    }

    var_3 = bullettrace( var_2, var_2 + var_1, 1, self, 0, 1 );

    if ( isdefined( var_3["entity"] ) )
    {
        var_4 = var_3["entity"];

        if ( isdefined( var_4.agent_type ) && var_4.agent_type == "generic_zombie" && !isdefined( var_4._id_6F73 ) )
            var_4 thread _id_A869( self );
    }
}

_id_8BB1( var_0, var_1 )
{
    var_2 = _func_0BC( var_0 );

    for ( var_3 = 0; var_3 < var_2; var_3++ )
    {
        if ( tolower( _func_0BF( var_0, var_3 ) ) == tolower( var_1 ) )
            return 1;
    }

    return 0;
}

_id_A869( var_0 )
{
    self endon( "death" );

    if ( isdefined( self._id_B36E ) )
        return;

    var_1 = var_0.origin;
    var_2 = randomint( 100 );

    if ( var_2 > 75 )
    {
        self._id_B36E = 1;
        self._id_5793 = 1;
        self._id_4C87 = 1;
        self._id_5502 = 1;
        self _meth_8366( vectornormalize( self.origin - var_1 ) * 200 + ( 0, 0, 100 ) );
        wait 0.1;
        self._id_54CB = 1;
        self _meth_80B0( 1000000, var_1, undefined, undefined, "MOD_UNKNOWN" );
    }
    else if ( var_2 > 50 )
    {
        self._id_B36E = 1;
        thread _id_0D53::_id_20E6( self );
        wait 1;
        self._id_54CB = 1;
        self._id_B36E = undefined;
        self _meth_80B0( 1000000, var_1, undefined, undefined, "MOD_UNKNOWN" );
    }
    else
    {
        self._id_54CB = 1;
        self._id_B36E = 1;
        self._id_C026 = 1;
        self._id_4C87 = 1;
        self._id_5502 = 1;
        playfx( level._effect["blackhole_trap_death"], self.origin + ( 0, 0, 40 ), anglestoforward( ( -90, 0, 0 ) ), anglestoup( ( -90, 0, 0 ) ) );
        self _meth_80B0( 1000000, var_1, undefined, undefined, "MOD_UNKNOWN" );
    }
}

_id_1FB4( var_0, var_1, var_2, var_3 )
{
    return scripts\asm\asm::_id_232B( var_1, "end" );
}

_id_CC1A( var_0, var_1 )
{
    self endon( var_1 + "_finished" );
    self endon( "death" );
    wait 0.5;
    _id_8E15( "put_on_helmet" );
}

_id_E12C( var_0, var_1 )
{
    self endon( var_1 + "_finished" );
    self endon( "death" );
    wait 0.5;
    _id_8E15( "remove_helmet" );
}

_id_D498( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
    _id_8E15( "put_on_helmet" );
}

_id_D499( var_0, var_1, var_2, var_3 )
{
    self endon( "death" );
    self setscriptablepartstate( "eyes", "yellow_eyes" );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
    _id_8E15( "remove_helmet" );
}

_id_3EC3( var_0, var_1, var_2 )
{
    var_3 = self getanimentrycount( var_1 );

    if ( var_3 == 1 )
        return "helmet";

    if ( self._id_8E14 == "head" )
        return "helmet";
    else
        return "no_helmet";
}

_id_3EC1( var_0, var_1, var_2 )
{
    var_3 = self getanimentrycount( var_1 );

    if ( var_3 == 1 )
        return 0;

    return randomintrange( 0, var_3 );
}

_id_3EC2( var_0, var_1, var_2 )
{
    var_3 = self getanimentrycount( var_1 );

    if ( var_3 == 1 )
        return "duck_run";

    if ( self._id_8E14 == "head" )
        return "duck_run";
    else
        return "sprint_run";
}

_id_1003B( var_0, var_1, var_2, var_3 )
{
    var_4 = self _meth_855B( "door", 300 );

    if ( isdefined( var_4 ) )
    {
        self._id_A8AF = var_4;
        return 1;
    }

    return 0;
}

_id_D4E7( var_0, var_1, var_2, var_3 )
{
    self endon( var_1 + "_finished" );
    scripts\asm\asm_mp::_id_2364( var_0, var_1, var_2, var_3 );
}

_id_3EC0( var_0, var_1, var_2 )
{
    var_3 = self getanimentrycount( var_1 );

    if ( var_3 == 1 )
        return "helmet_on";

    if ( self._id_8E14 == "head" )
        return "helmet_on";
    else
        return "helmet_off";
}

_id_FFEB( var_0, var_1, var_2, var_3 )
{
    return isdefined( self._id_4A7D ) && self._id_4A7D;
}

_id_3EC9( var_0, var_1, var_2 )
{
    var_3 = self getanimentrycount( var_1 );

    if ( var_3 == 1 )
        var_2 = var_2 + "_helmet";

    if ( self._id_8E14 == "head" )
        var_2 = var_2 + "_helmet";
    else
        var_2 = var_2 + "_no_helmet";

    return scripts\asm\asm::_id_2358( var_1, var_2 );
}
