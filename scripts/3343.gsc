// IW7 GSC SOURCE
// Generated by https://github.com/xensik/gsc-tool

init()
{
    if ( !isdefined( level._id_F26B ) )
        level._id_F26B = [];

    level._effect["microturret_lockon"] = loadfx( "vfx/iw7/_requests/mp/super/vfx_microturret_lockon.vfx" );

    if ( !isdefined( level._id_B726 ) )
        level._id_B726 = [];

    level._effect["shoulder_cannon_charge"] = loadfx( "vfx/old/misc/shoulder_cannon_charge" );
    level._id_F26B["sentry_microturret"] = spawnstruct();
    level._id_F26B["sentry_microturret"].health = 999999;
    level._id_F26B["sentry_microturret"].maxhealth = 300;
    level._id_F26B["sentry_microturret"]._id_32C1 = 10;
    level._id_F26B["sentry_microturret"]._id_32C0 = 20;
    level._id_F26B["sentry_microturret"]._id_C9D3 = 0.5;
    level._id_F26B["sentry_microturret"]._id_C9D1 = 0.75;
    level._id_F26B["sentry_microturret"]._id_F269 = "sentry";
    level._id_F26B["sentry_microturret"]._id_F268 = "sentry_offline";
    level._id_F26B["sentry_microturret"]._id_11901 = 90.0;
    level._id_F26B["sentry_microturret"]._id_10A13 = 0.2;
    level._id_F26B["sentry_microturret"]._id_C7FB = 8.0;
    level._id_F26B["sentry_microturret"]._id_461D = 0.1;
    level._id_F26B["sentry_microturret"]._id_7645 = 0.3;
    level._id_F26B["sentry_microturret"]._id_110EA = "sentry";
    level._id_F26B["sentry_microturret"]._id_039B = "micro_turret_gun_zm";
    level._id_F26B["sentry_microturret"]._id_B91A = "vehicle_drone_backup_buddy_gun";
    level._id_F26B["sentry_microturret"]._id_B924 = "weapon_sentry_chaingun_obj";
    level._id_F26B["sentry_microturret"]._id_B925 = "weapon_sentry_chaingun_obj_red";
    level._id_F26B["sentry_microturret"]._id_B91D = "vehicle_drone_backup_buddy_gun";
    level._id_F26B["sentry_microturret"]._id_017B = &"SENTRY_PICKUP";
    level._id_F26B["sentry_microturret"]._id_016F = 1;
    level._id_F26B["sentry_microturret"]._id_115EB = "used_sentry";
    level._id_F26B["sentry_microturret"]._id_10085 = 0;
    level._id_F26B["sentry_microturret"]._id_13523 = "sentry_destroyed";
    level._id_F26B["sentry_microturret"]._id_EC44 = "destroyed_sentry";
    level._id_F26B["sentry_microturret"]._id_ACB6 = "tag_fx";
}

_id_E13D()
{
    self notify( "remove_microTurret" );
}

_id_B719( var_0 )
{
    self endon( "death" );
    self endon( "disconnect" );
    self endon( "remove_microTurret" );
    var_1 = "power_microTurret";

    if ( !_id_0A77::isreallyalive( self ) )
    {
        var_0 delete();
        return;
    }

    var_0 waittill( "missile_stuck", var_2 );

    if ( isdefined( var_2 ) && isdefined( var_2.owner ) )
    {
        thread _id_CC21( var_0 );
        return;
    }

    if ( !_id_0A6B::_id_9E54( var_0.origin, level._id_9B0B, self, undefined, 0 ) )
    {
        thread _id_CC21( var_0 );
        return;
    }

    self notify( "powers_microTurret_used" );
    self playlocalsound( "trophy_turret_plant_plr" );
    self playsoundtoteam( "trophy_turret_plant_npc", "allies", self );
    self playsoundtoteam( "trophy_turret_plant_npc", "axis", self );
    var_3 = spawnturret( "misc_turret", var_0.origin, "micro_turret_gun_zm" );
    var_3 setmodel( "micro_turret_wm" );
    var_3.angles = var_0.angles;
    var_3.owner = self;
    var_3.team = self.team;
    var_3._id_13C2E = "micro_turret_zm";
    var_3 maketurretinoperable();
    var_3 makeunusable();
    self.vehicle = var_3;
    var_3._id_1E2D = 100;

    if ( level.teambased )
        var_3 _meth_835E( self.team );

    var_3._id_F26E = "sentry_microturret";
    var_3 _meth_830F( "sentry_offline" );
    var_3 _meth_8336( self );
    var_3 _meth_82FB( 180 );
    var_3 _meth_8330( 180 );
    var_3 _meth_82B6( 90 );
    var_3 _meth_8353( 45 );
    var_3 _meth_82C9( 0.3, "pitch" );
    var_3 _meth_82C9( 0.3, "yaw" );
    var_3 _meth_82C8( 0.65 );
    var_3 thread _id_B6EA();
    var_3 _meth_831F( self );

    if ( isdefined( var_2 ) )
        var_3 _id_0A6B::_id_69FF( var_2 );

    var_3._id_1A4A = scripts\engine\utility::_id_107E6( var_3.origin, var_3.angles );
    var_3._id_1A4A linkto( var_3, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
    var_3 thread _id_F241();
    var_3 thread _id_F242();
    var_3 thread _id_13A7A( self );
    var_3 setcandamage( 0 );
    var_3._id_11196 = 0;
    var_3 thread _id_139C8();
    thread _id_13A59( var_3 );
    var_0 delete();
}

_id_F241()
{
    self endon( "death" );
    level endon( "game_ended" );
    self.health = level._id_F26B[self._id_F26E].health;
    self.maxhealth = level._id_F26B[self._id_F26E].maxhealth;
    self._id_00E1 = 0;

    for (;;)
    {
        self waittill( "damage", var_0, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9 );

        if ( !_id_0A4F::_id_7415( self.owner, var_1, 0 ) )
            continue;

        if ( isdefined( var_8 ) && var_8 & level.idflags_penetration )
            self._id_1390E = 1;

        if ( var_4 == "MOD_MELEE" )
            self._id_00E1 = self._id_00E1 + self.maxhealth;

        var_10 = var_0;

        if ( isplayer( var_1 ) )
        {
            var_1 _id_0A4F::updatedamagefeedback( "sentry" );

            if ( var_1 _id_0A77::_id_12D6( "specialty_armorpiercing" ) )
                var_10 = var_0 * level._id_218B;
        }

        if ( isdefined( var_1.owner ) && isplayer( var_1.owner ) )
            var_1.owner _id_0A4F::updatedamagefeedback( "sentry" );

        self._id_00E1 = self._id_00E1 + var_10;

        if ( self._id_00E1 >= self.maxhealth )
        {
            if ( isplayer( var_1 ) && ( !isdefined( self.owner ) || var_1 != self.owner ) )
                var_1 notify( "destroyed_killstreak" );

            if ( isdefined( self.owner ) )
                self.owner thread _id_0A77::leaderdialogonplayer( level._id_F26B[self._id_F26E]._id_13523, undefined, undefined, self.origin );

            self notify( "death" );
            return;
        }
    }
}

_id_F242()
{
    self waittill( "death" );

    if ( !isdefined( self ) )
        return;

    self _meth_80F7();
    self setmodel( level._id_F26B[self._id_F26E]._id_B91D );
    _id_F257();
    self setdefaultdroppitch( 40 );

    if ( isdefined( self._id_3A9D ) )
        self _meth_8335( undefined );

    self _meth_8336( undefined );
    self _meth_835A( 0 );

    if ( isdefined( self._id_C840 ) )
        self._id_C840 delete();

    self playsound( "sentry_explode" );

    switch ( self._id_F26E )
    {
        case "gl_turret":
        case "minigun_turret":
            self._id_72B5 = 1;
            self _meth_83C6();
            break;
        default:
            break;
    }

    if ( isdefined( self ) )
        thread _id_F23F();
}

_id_F257()
{
    self _meth_830F( level._id_F26B[self._id_F26E]._id_F268 );
    self makeunusable();
    var_0 = self getentitynumber();

    switch ( self._id_F26E )
    {
        case "gl_turret":
            break;
        default:
            _id_E11F( var_0 );
            break;
    }

    if ( level.teambased )
        _id_0A77::_id_F877( "none", ( 0, 0, 0 ) );
    else if ( isdefined( self.owner ) )
        _id_0A77::_id_F7F2( undefined, ( 0, 0, 0 ) );
}

_id_E11F( var_0 )
{
    level._id_12A83[var_0] = undefined;
}

_id_F23F()
{
    self notify( "sentry_delete_turret" );
    self endon( "sentry_delete_turret" );

    if ( isdefined( self._id_9B05 ) )
    {
        self._id_9B05 _id_E2E0();
        self._id_9B05 _id_E2E8();
        self notify( "deleting" );
        self _meth_83D3( self._id_9B05 );
        wait 1.0;
    }
    else
    {
        wait 1.5;
        self playsound( "sentry_explode_smoke" );
        wait 0.1;
        self notify( "deleting" );
    }

    if ( isdefined( self._id_A63A ) )
        self._id_A63A delete();

    if ( isdefined( self ) )
        self delete();
}

_id_E2E0()
{
    if ( isdefined( self._id_E2DF ) )
    {
        _id_0A77::giveperk( self._id_E2DF );
        self._id_E2DF = undefined;
    }
}

_id_E2E8()
{
    if ( isdefined( self._id_E2E6 ) )
    {
        _id_0A77::_id_12C6( self._id_E2E6 );
        self._id_E2E6 = undefined;
    }
}

_id_13A59( var_0 )
{
    self notify( "turret_deleted" );
    self endon( "turret_deleted" );
    var_0 endon( "death" );
    scripts\engine\utility::waittill_any( "death", "disconnect" );
    var_0 delete();
    self notify( "microTurret_update", -1 );
}

_id_13A7A( var_0 )
{
    self waittill( "death" );
    var_0 notify( "microTurret_update", -1 );
}

_id_139C8()
{
    self endon( "death" );
    level endon( "game_ended" );

    for (;;)
    {
        self waittill( "emp_damage", var_0, var_1 );
        _id_B713( var_1 );
    }
}

_id_B713()
{
    self _meth_830F( "sentry_offline" );
    _id_B6F1();
}

_id_B6EA()
{
    self endon( "death" );
    level endon( "game_ended" );
    self._id_1E2D = 100;
    wait 1;

    for (;;)
    {
        if ( !self._id_11196 && !_id_B701() )
            _id_B717();

        if ( !self._id_11196 && _id_B701() )
            _id_B6EB();

        if ( self._id_11196 )
            _id_B713();

        scripts\engine\utility::waitframe();
    }
}

_id_B701()
{
    return isdefined( self._id_1A4A ) && isdefined( self._id_1A4A._id_23EA );
}

_id_B717()
{
    self endon( "stunned" );
    self endon( "death" );

    if ( isdefined( self.owner ) )
        self.owner endon( "disconnect" );

    self _meth_830F( "manual" );
    self laseroff();

    if ( _id_B701() )
        _id_B6F1();

    for (;;)
    {
        var_0 = anglestoforward( self gettagangles( "tag_flash" ) );
        var_1 = _id_0A4A::_id_7DB0( "axis" );
        var_2 = [];
        var_3 = [];

        foreach ( var_5 in var_1 )
        {
            if ( !_id_B71A( var_5 ) )
                continue;

            var_6 = var_5.origin - self gettagorigin( "tag_dummy" );
            var_7 = vectornormalize( var_6 );
            var_8 = vectordot( var_6, var_7 );
            var_9 = scripts\engine\utility::_id_1E7E( var_0, var_7 );
            var_10 = 1 - var_8 / 800;
            var_11 = 1 - var_9 / 180;
            var_12 = var_10 * 0.5 + var_11 * 0.8;
            var_2[var_2.size] = var_5;
            var_3[var_3.size] = var_12;
        }

        for (;;)
        {
            var_14 = 0;

            for ( var_15 = 0; var_15 < var_2.size - 1; var_15++ )
            {
                var_16 = var_2[var_15];
                var_17 = var_3[var_15];

                if ( var_17 < var_3[var_15] )
                {
                    var_2[var_15] = var_2[var_15 + 1];
                    var_3[var_15] = var_3[var_15 + 1];
                    var_2[var_15 + 1] = var_16;
                    var_3[var_15 + 1] = var_17;
                    var_14 = 1;
                }
            }

            if ( !var_14 )
                break;
        }

        for ( var_15 = 0; var_15 < var_2.size; var_15++ )
        {
            var_18 = var_2[var_15];
            var_19 = _id_B714( var_18 );

            if ( isdefined( var_19 ) )
            {
                _id_B70D( var_18, var_19 );
                return;
            }
        }

        wait 0.1;
    }
}

_id_B70D( var_0, var_1 )
{
    if ( !isdefined( self._id_1A4A ) )
        return 0;

    self._id_1A4A._id_23EA = var_0;
    self._id_1A4A._id_23EB = var_1;
    self._id_1A4A linkto( var_0, var_1, ( 0, 0, 0 ), ( 0, 0, 0 ) );
    self settargetentity( self._id_1A4A );
}

_id_B714( var_0 )
{
    var_1 = undefined;
    var_2 = physics_createcontents( [ "physicscontents_solid", "physicscontents_vehicle", "physicscontents_glass", "physicscontents_ainosight", "physicscontents_sky" ] );
    var_3 = self gettagorigin( "tag_dummy" );

    if ( isdefined( var_0.agent_type ) && var_0.agent_type == "zombie_brute" )
        return undefined;

    if ( isplayer( var_0 ) || isagent( var_0 ) )
    {
        var_4 = "j_spine4";
        var_5 = var_0 gettagorigin( var_4 );

        if ( !isdefined( var_1 ) )
        {
            var_6 = physics_raycast( var_3, var_5, var_2, self, 0, "physicsquery_closest" );
            var_7 = !isdefined( var_6 ) || var_6.size == 0;
            var_1 = scripts\engine\utility::ter_op( var_7, var_4, var_1 );
        }

        if ( !isdefined( var_1 ) )
        {
            if ( !_id_0A77::_id_8BB1( var_0._id_01F1, "tag_eye" ) )
                return undefined;

            var_4 = "tag_eye";
            var_5 = var_0 gettagorigin( var_4 );

            if ( !isdefined( var_1 ) )
            {
                var_6 = physics_raycast( var_3, var_5, var_2, self, 0, "physicsquery_closest" );
                var_7 = !isdefined( var_6 ) || var_6.size == 0;
                var_1 = scripts\engine\utility::ter_op( var_7, var_4, var_1 );
            }
        }

        if ( !isdefined( var_1 ) )
        {
            var_5 = var_0.origin;

            if ( !isdefined( var_1 ) )
            {
                var_6 = physics_raycast( var_3, var_5, var_2, self, 0, "physicsquery_closest" );
                var_7 = !isdefined( var_6 ) || var_6.size == 0;
                var_1 = scripts\engine\utility::ter_op( var_7, var_4, var_1 );
            }
        }
    }
    else
    {
        var_4 = "tag_origin";
        var_5 = var_0 gettagorigin( var_4 );

        if ( !isdefined( var_1 ) )
        {
            var_6 = physics_raycast( var_3, var_5, var_2, self, 0, "physicsquery_closest" );
            var_7 = !isdefined( var_6 ) || var_6.size == 0;
            var_1 = scripts\engine\utility::ter_op( var_7, var_4, var_1 );
        }
    }

    return var_1;
}

_id_B6F1()
{
    if ( isdefined( self._id_1A4A ) )
    {
        self._id_1A4A linkto( self, "tag_origin", ( 0, 0, 0 ), ( 0, 0, 0 ) );
        self._id_1A4A._id_23EA = undefined;
        self._id_1A4A._id_23EB = undefined;
    }

    self cleartargetentity();
}

_id_B71A( var_0 )
{
    if ( isplayer( var_0 ) || isagent( var_0 ) )
    {
        if ( !isalive( var_0 ) )
            return 0;
    }

    if ( self.team == var_0.team )
        return 0;

    if ( distancesquared( var_0.origin, self.origin ) > 640000 )
        return 0;

    return 1;
}

_id_B6EB()
{
    self endon( "stunned" );
    self endon( "lostTarget" );
    self _meth_830F( "manual" );
    self laseron();
    thread _id_B721();
    _id_B704();
    _id_B6EC();
}

_id_B6EC()
{
    var_0 = weaponfiretime( "micro_turret_gun_zm" );

    for (;;)
    {
        if ( _id_B701() )
        {
            var_1 = self _meth_8161( 0 );

            if ( !isdefined( self._id_1A4A ) )
                self settargetentity( self._id_1A4A );

            if ( _id_B715() )
            {
                self shootturret();
                self._id_1E2D--;

                if ( self._id_1E2D <= 0 )
                    self.owner thread _id_B6F4( self );
            }

            wait( var_0 );
            continue;
        }

        scripts\engine\utility::waitframe();
    }
}

_id_B715()
{
    return isdefined( self._id_1A4A ) && isdefined( self._id_1A4A._id_23EB );
}

_id_B6F4( var_0 )
{
    var_0 notify( "death" );
}

_id_B6F5()
{
    self notify( "microTurret_destroyAll" );

    if ( isdefined( self._id_B726 ) )
    {
        foreach ( var_1 in self._id_B726 )
            _id_B6F4( var_1 );
    }

    self._id_B726 = undefined;
}

_id_B721()
{
    self endon( "death" );
    self endon( "stunned" );
    level endon( "game_ended" );
    _id_B722();
    _id_B6F1();
    self notify( "lostTarget" );
}

_id_B704()
{
    playfxontag( scripts\engine\utility::_id_7ECB( "microturret_lockon" ), self, "tag_flash" );
    var_0 = _id_B6FD();

    if ( isplayer( var_0 ) || isagent( var_0 ) )
        thread _id_B705( var_0 );

    wait 0.6;
    self notify( "lockOnEnded" );
}

_id_B705( var_0 )
{
    self endon( "lockOnEnded" );
    var_0 endon( "death" );
    var_0 endon( "disconnect" );
    var_1 = 0;
    var_2 = 0.2;

    for (;;)
    {
        var_0 playlocalsound( "ball_drone_targeting" );
        wait( var_2 );
        var_1 = var_1 + var_2;
    }

    var_0 playlocalsound( "ball_drone_lockon" );
}

_id_B6FD()
{
    if ( _id_B701() )
        return self._id_1A4A._id_23EA;

    return undefined;
}

_id_B722()
{
    var_0 = _id_B6FD();
    var_0 endon( "death" );
    var_0 endon( "disconnect" );
    var_1 = undefined;
    var_2 = _id_B6FD();

    while ( isdefined( var_2 ) && var_2 == var_0 )
    {
        var_2 = _id_B6FD();

        if ( !isdefined( var_2 ) || var_2 != var_0 )
            break;

        if ( var_2 _id_0A77::_id_12D6( "specialty_blindeye" ) )
            break;

        if ( isdefined( var_1 ) && gettime() > var_1 )
            break;

        var_3 = _id_B714( var_2 );

        if ( !isdefined( var_3 ) )
        {
            if ( !isdefined( var_1 ) )
                var_1 = gettime() + 1000;

            wait 0.1;
            continue;
        }

        _id_B70D( var_2, var_3 );
        var_1 = undefined;
        wait 0.1;
    }
}

_id_B6EE( var_0 )
{
    self endon( "turret_toggle" );
    self endon( "death" );
    self endon( "stop_shooting" );
    level endon( "game_ended" );
    var_1 = self;
    var_2 = level._effect["shoulder_cannon_charge"];
    var_3 = weaponfiretime( "micro_turret_gun_zm" );
    var_4 = 0.01;

    while ( self._id_1E2D > 0 )
    {
        if ( self._id_1E2D <= 20 )
            var_5 = self._id_1E2D;
        else
            var_5 = randomintrange( 10, 20 );

        for ( var_6 = 0; var_6 < var_5; var_6++ )
        {
            if ( isdefined( var_1._id_93AF ) && var_1._id_93AF )
                break;

            var_7 = self getturrettarget( 1 );

            if ( isdefined( var_7 ) && _id_3874( var_7 ) )
            {
                self shootturret();
                wait( var_3 );
                self._id_1E2D--;

                if ( self._id_1E2D < 0 )
                    self._id_1E2D = 0;

                var_0 notify( "microTurret_update", self._id_1E2D * var_4 );

                if ( isdefined( var_0._id_38D8 ) )
                    var_0._id_38D8 delete();
            }
        }

        wait( randomfloatrange( 0.5, 0.75 ) );
    }

    if ( self._id_1E2D <= 0 )
    {
        waittillframeend;
        var_0 notify( "turret_deleted" );
        self delete();
    }
}

_id_58ED( var_0, var_1 )
{
    var_2 = level._effect["shoulder_cannon_charge"];
    playfxontag( var_2, self, "tag_flash" );

    for ( var_3 = self getturrettarget( 0 ); var_0 > 0; var_0 = var_0 - 0.2 )
    {
        var_1 playlocalsound( "ball_drone_targeting" );
        wait 0.2;
    }

    var_1 playlocalsound( "ball_drone_lockon" );
}

_id_B6EF()
{
    self notify( "stop_shooting" );

    if ( isdefined( self._id_92FD ) )
        self setlookatent( self._id_92FD );
}

_id_3874( var_0 )
{
    var_1 = 1;

    if ( isplayer( var_0 ) )
    {
        if ( !_id_0A77::isreallyalive( var_0 ) || var_0.sessionstate != "playing" )
            return 0;
    }

    if ( level.teambased && isdefined( var_0.team ) && var_0.team == self.team )
        return 0;

    if ( isdefined( var_0.team ) && var_0.team == "spectator" )
        return 0;

    if ( isplayer( var_0 ) && var_0 == self.owner )
        return 0;

    if ( isplayer( var_0 ) && isdefined( var_0._id_10916 ) && ( gettime() - var_0._id_10916 ) / 1000 <= 5 )
        return 0;

    if ( isplayer( var_0 ) && var_0 _id_0A77::_id_12D6( "specialty_blindeye" ) )
        return 0;

    if ( distancesquared( var_0.origin, self.origin ) > 4000000 )
        return 0;

    if ( isdefined( var_0._id_9EE2 ) && var_0._id_9EE2 )
        return 0;

    return var_1;
}

_id_CC21( var_0 )
{
    self notify( "powers_microTurret_used", 0 );
    _id_0A6B::_id_CC16( var_0._id_13C2E, 1, var_0.origin );
    var_0 delete();
}
